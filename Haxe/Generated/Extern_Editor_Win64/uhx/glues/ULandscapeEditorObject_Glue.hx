// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/landscapeeditor/ulandscapeeditorobject.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class ULandscapeEditorObject_Glue {
public static function get_CurrentLayerIndex(self:unreal.UIntPtr):Int;
public static function set_CurrentLayerIndex(self:unreal.UIntPtr, value:Int):Void;
public static function get_ShowUnusedLayers(self:unreal.UIntPtr):Bool;
public static function set_ShowUnusedLayers(self:unreal.UIntPtr, value:Bool):Void;
public static function get_TargetDisplayOrder(self:unreal.UIntPtr):Int;
public static function set_TargetDisplayOrder(self:unreal.UIntPtr, value:Int):Void;
public static function get_PaintingRestriction(self:unreal.UIntPtr):Int;
public static function set_PaintingRestriction(self:unreal.UIntPtr, value:Int):Void;
public static function get_BrushComponentSize(self:unreal.UIntPtr):Int;
public static function set_BrushComponentSize(self:unreal.UIntPtr, value:Int):Void;
public static function get_AlphaTextureData(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_AlphaTextureData(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_AlphaTextureSizeY(self:unreal.UIntPtr):Int;
public static function set_AlphaTextureSizeY(self:unreal.UIntPtr, value:Int):Void;
public static function get_AlphaTextureSizeX(self:unreal.UIntPtr):Int;
public static function set_AlphaTextureSizeX(self:unreal.UIntPtr, value:Int):Void;
public static function get_AlphaTextureChannel(self:unreal.UIntPtr):Int;
public static function set_AlphaTextureChannel(self:unreal.UIntPtr, value:Int):Void;
public static function get_AlphaTexture(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_AlphaTexture(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_WorldSpacePatternBrushSettings(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_WorldSpacePatternBrushSettings(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bUseWorldSpacePatternBrush(self:unreal.UIntPtr):Bool;
public static function set_bUseWorldSpacePatternBrush(self:unreal.UIntPtr, value:Bool):Void;
public static function get_AlphaBrushPanV(self:unreal.UIntPtr):cpp.Float32;
public static function set_AlphaBrushPanV(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_AlphaBrushPanU(self:unreal.UIntPtr):cpp.Float32;
public static function set_AlphaBrushPanU(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_AlphaBrushRotation(self:unreal.UIntPtr):cpp.Float32;
public static function set_AlphaBrushRotation(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bAlphaBrushAutoRotate(self:unreal.UIntPtr):Bool;
public static function set_bAlphaBrushAutoRotate(self:unreal.UIntPtr, value:Bool):Void;
public static function get_AlphaBrushScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_AlphaBrushScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bUseClayBrush(self:unreal.UIntPtr):Bool;
public static function set_bUseClayBrush(self:unreal.UIntPtr, value:Bool):Void;
public static function get_BrushFalloff(self:unreal.UIntPtr):cpp.Float32;
public static function set_BrushFalloff(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_BrushRadius(self:unreal.UIntPtr):cpp.Float32;
public static function set_BrushRadius(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ImportLandscape_Layers(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ImportLandscape_Layers(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ImportLandscape_AlphamapType(self:unreal.UIntPtr):Int;
public static function set_ImportLandscape_AlphamapType(self:unreal.UIntPtr, value:Int):Void;
public static function get_bCanHaveLayersContent(self:unreal.UIntPtr):Bool;
public static function set_bCanHaveLayersContent(self:unreal.UIntPtr, value:Bool):Void;
public static function get_ImportLandscape_Height(self:unreal.UIntPtr):cpp.UInt32;
public static function set_ImportLandscape_Height(self:unreal.UIntPtr, value:cpp.UInt32):Void;
public static function get_ImportLandscape_Width(self:unreal.UIntPtr):cpp.UInt32;
public static function set_ImportLandscape_Width(self:unreal.UIntPtr, value:cpp.UInt32):Void;
public static function get_ImportLandscape_HeightmapFilename(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ImportLandscape_HeightmapFilename(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ImportLandscape_HeightmapErrorMessage(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ImportLandscape_HeightmapErrorMessage(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ImportLandscape_HeightmapImportResult(self:unreal.UIntPtr):Int;
public static function set_ImportLandscape_HeightmapImportResult(self:unreal.UIntPtr, value:Int):Void;
public static function get_NewLandscape_Scale(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_NewLandscape_Scale(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_NewLandscape_Rotation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_NewLandscape_Rotation(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_NewLandscape_Location(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_NewLandscape_Location(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_NewLandscape_ComponentCount(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_NewLandscape_ComponentCount(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_NewLandscape_SectionsPerComponent(self:unreal.UIntPtr):Int;
public static function set_NewLandscape_SectionsPerComponent(self:unreal.UIntPtr, value:Int):Void;
public static function get_NewLandscape_QuadsPerSection(self:unreal.UIntPtr):Int;
public static function set_NewLandscape_QuadsPerSection(self:unreal.UIntPtr, value:Int):Void;
public static function get_NewLandscape_Material(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_NewLandscape_Material(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ResizeLandscape_ConvertMode(self:unreal.UIntPtr):Int;
public static function set_ResizeLandscape_ConvertMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_ResizeLandscape_ComponentCount(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ResizeLandscape_ComponentCount(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ResizeLandscape_SectionsPerComponent(self:unreal.UIntPtr):Int;
public static function set_ResizeLandscape_SectionsPerComponent(self:unreal.UIntPtr, value:Int):Void;
public static function get_ResizeLandscape_QuadsPerSection(self:unreal.UIntPtr):Int;
public static function set_ResizeLandscape_QuadsPerSection(self:unreal.UIntPtr, value:Int):Void;
public static function get_BlueprintBrush(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_BlueprintBrush(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_MirrorSmoothingWidth(self:unreal.UIntPtr):Int;
public static function set_MirrorSmoothingWidth(self:unreal.UIntPtr, value:Int):Void;
public static function get_MirrorOp(self:unreal.UIntPtr):Int;
public static function set_MirrorOp(self:unreal.UIntPtr, value:Int):Void;
public static function get_MirrorPoint(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_MirrorPoint(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_GizmoImportLayers(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_GizmoImportLayers(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_GizmoImportSize(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_GizmoImportSize(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_GizmoHeightmapFilenameString(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_GizmoHeightmapFilenameString(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bSmoothGizmoBrush(self:unreal.UIntPtr):Bool;
public static function set_bSmoothGizmoBrush(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bSnapGizmo(self:unreal.UIntPtr):Bool;
public static function set_bSnapGizmo(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bApplyToAllTargets(self:unreal.UIntPtr):Bool;
public static function set_bApplyToAllTargets(self:unreal.UIntPtr, value:Bool):Void;
public static function get_PasteMode(self:unreal.UIntPtr):Int;
public static function set_PasteMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_bUseNegativeMask(self:unreal.UIntPtr):Bool;
public static function set_bUseNegativeMask(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseSelectedRegion(self:unreal.UIntPtr):Bool;
public static function set_bUseSelectedRegion(self:unreal.UIntPtr, value:Bool):Void;
public static function get_NoiseScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_NoiseScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NoiseMode(self:unreal.UIntPtr):Int;
public static function set_NoiseMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_HErosionDetailScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_HErosionDetailScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bHErosionDetailSmooth(self:unreal.UIntPtr):Bool;
public static function set_bHErosionDetailSmooth(self:unreal.UIntPtr, value:Bool):Void;
public static function get_RainDistScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_RainDistScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_RainDistMode(self:unreal.UIntPtr):Int;
public static function set_RainDistMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_HErodeIterationNum(self:unreal.UIntPtr):Int;
public static function set_HErodeIterationNum(self:unreal.UIntPtr, value:Int):Void;
public static function get_SedimentCapacity(self:unreal.UIntPtr):cpp.Float32;
public static function set_SedimentCapacity(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_RainAmount(self:unreal.UIntPtr):Int;
public static function set_RainAmount(self:unreal.UIntPtr, value:Int):Void;
public static function get_ErosionNoiseScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_ErosionNoiseScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ErosionNoiseMode(self:unreal.UIntPtr):Int;
public static function set_ErosionNoiseMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_ErodeIterationNum(self:unreal.UIntPtr):Int;
public static function set_ErodeIterationNum(self:unreal.UIntPtr, value:Int):Void;
public static function get_ErodeSurfaceThickness(self:unreal.UIntPtr):Int;
public static function set_ErodeSurfaceThickness(self:unreal.UIntPtr, value:Int):Void;
public static function get_ErodeThresh(self:unreal.UIntPtr):Int;
public static function set_ErodeThresh(self:unreal.UIntPtr, value:Int):Void;
public static function get_DetailScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_DetailScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bDetailSmooth(self:unreal.UIntPtr):Bool;
public static function set_bDetailSmooth(self:unreal.UIntPtr, value:Bool):Void;
public static function get_SmoothFilterKernelSize(self:unreal.UIntPtr):Int;
public static function set_SmoothFilterKernelSize(self:unreal.UIntPtr, value:Int):Void;
public static function get_RampSideFalloff(self:unreal.UIntPtr):cpp.Float32;
public static function set_RampSideFalloff(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_RampWidth(self:unreal.UIntPtr):cpp.Float32;
public static function set_RampWidth(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_FlattenEyeDropperModeDesiredTarget(self:unreal.UIntPtr):cpp.Float32;
public static function set_FlattenEyeDropperModeDesiredTarget(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bFlattenEyeDropperModeActivated(self:unreal.UIntPtr):Bool;
public static function set_bFlattenEyeDropperModeActivated(self:unreal.UIntPtr, value:Bool):Void;
public static function get_TerraceSmooth(self:unreal.UIntPtr):cpp.Float32;
public static function set_TerraceSmooth(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_TerraceInterval(self:unreal.UIntPtr):cpp.Float32;
public static function set_TerraceInterval(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bShowFlattenTargetPreview(self:unreal.UIntPtr):Bool;
public static function set_bShowFlattenTargetPreview(self:unreal.UIntPtr, value:Bool):Void;
public static function get_FlattenTarget(self:unreal.UIntPtr):cpp.Float32;
public static function set_FlattenTarget(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bUseFlattenTarget(self:unreal.UIntPtr):Bool;
public static function set_bUseFlattenTarget(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bPickValuePerApply(self:unreal.UIntPtr):Bool;
public static function set_bPickValuePerApply(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseSlopeFlatten(self:unreal.UIntPtr):Bool;
public static function set_bUseSlopeFlatten(self:unreal.UIntPtr, value:Bool):Void;
public static function get_FlattenMode(self:unreal.UIntPtr):Int;
public static function set_FlattenMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_bCombinedLayersOperation(self:unreal.UIntPtr):Bool;
public static function set_bCombinedLayersOperation(self:unreal.UIntPtr, value:Bool):Void;
public static function get_MaximumValueRadius(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaximumValueRadius(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_WeightTargetValue(self:unreal.UIntPtr):cpp.Float32;
public static function set_WeightTargetValue(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bUseWeightTargetValue(self:unreal.UIntPtr):Bool;
public static function set_bUseWeightTargetValue(self:unreal.UIntPtr, value:Bool):Void;
public static function get_ToolStrength(self:unreal.UIntPtr):cpp.Float32;
public static function set_ToolStrength(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function StaticClass():unreal.UIntPtr;
}