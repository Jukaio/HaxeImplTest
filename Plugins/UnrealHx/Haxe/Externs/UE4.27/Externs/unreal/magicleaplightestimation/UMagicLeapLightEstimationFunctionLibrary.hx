/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.magicleaplightestimation;

@:umodule("MagicLeapLightEstimation")
@:glueCppIncludes("MagicLeapLightEstimationFunctionLibrary.h")
@:uextern @:uclass extern class UMagicLeapLightEstimationFunctionLibrary extends unreal.UBlueprintFunctionLibrary {
  
  /**
    Create a light estimation tracker.
    @return true if tracker was successfully created, false otherwise
  **/
  @:ufunction(BlueprintCallable) static public function CreateTracker() : Bool;
  
  /**
    Destroy a light estimation tracker.
  **/
  @:ufunction(BlueprintCallable) static public function DestroyTracker() : Void;
  
  /**
    Check if a light estimation tracker has already been created.
    @return true if tracker already exists and is valid, false otherwise
  **/
  @:ufunction(BlueprintCallable) static public function IsTrackerValid() : Bool;
  
  /**
    Gets information about the ambient light sensor global state.
    @note Capturing images or video will stop the lighting information update, causing the retrieved data to be stale (old timestamps).
    @param GlobalAmbientState Output param containing the information about the global lighting state (ambient intensity). Valid only if return value of function is true.
    @return true if the global ambient state was succesfully retrieved.
  **/
  @:ufunction(BlueprintCallable) static public function GetAmbientGlobalState(GlobalAmbientState : unreal.PRef<unreal.magicleaplightestimation.FMagicLeapLightEstimationAmbientGlobalState>) : Bool;
  
  /**
    Gets information about the color temperature state.
    @note Capturing images or video will stop the lighting information update, causing the retrieved data to be stale (old timestamps).
    @param ColorTemperatureState Output param containing the information about the color temperature. Valid only if return value of function is true.
    @return true if the color temperature state was succesfully retrieved.
  **/
  @:ufunction(BlueprintCallable) static public function GetColorTemperatureState(ColorTemperatureState : unreal.PRef<unreal.magicleaplightestimation.FMagicLeapLightEstimationColorTemperatureState>) : Bool;
  
}
