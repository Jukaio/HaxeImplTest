/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.livelink;

@:umodule("LiveLink")
@:glueCppIncludes("LiveLinkBlueprintLibrary.h")
@:uextern @:uclass extern class ULiveLinkBlueprintLibrary extends unreal.UBlueprintFunctionLibrary {
  
  /**
    Get a list of all enabled subject names
  **/
  @:ufunction(BlueprintCallable) static public function GetLiveLinkEnabledSubjectNames(bIncludeVirtualSubject : Bool) : unreal.TArray<unreal.livelinkinterface.FLiveLinkSubjectName>;
  
  /**
    Get a list of all subjects
  **/
  @:ufunction(BlueprintCallable) static public function GetLiveLinkSubjects(bIncludeDisabledSubject : Bool, bIncludeVirtualSubject : Bool) : unreal.TArray<unreal.livelinkinterface.FLiveLinkSubjectKey>;
  
  /**
    Whether or not a subject from the specific source is the enabled subject.
    Only 1 subject with the same name can be enabled.
    At the start of the frame, a snapshot of the enabled subjects will be made.
    That snapshot dictate which subject will be used for the duration of that frame.
  **/
  @:ufunction(BlueprintCallable) static public function IsSpecificLiveLinkSubjectEnabled(SubjectKey : unreal.Const<unreal.livelinkinterface.FLiveLinkSubjectKey>, bForThisFrame : Bool) : Bool;
  
  /**
    Whether or not the client has a subject with this name enabled
    Only 1 subject with the same name can be enabled.
    At the start of the frame, a snapshot of the enabled subjects will be made.
    That snapshot dictate which subject will be used for the duration of that frame.
  **/
  @:ufunction(BlueprintCallable) static public function IsLiveLinkSubjectEnabled(SubjectName : unreal.Const<unreal.livelinkinterface.FLiveLinkSubjectName>) : Bool;
  
  /**
    Set the subject's from a specific source to enabled, disabling the other in the process.
    Only 1 subject with the same name can be enabled.
    At the start of the frame, a snapshot of the enabled subjects will be made.
    That snapshot dictate which subject will be used for the duration of that frame.
    SetSubjectEnabled will take effect on the next frame.
  **/
  @:ufunction(BlueprintCallable) static public function SetLiveLinkSubjectEnabled(SubjectKey : unreal.Const<unreal.livelinkinterface.FLiveLinkSubjectKey>, bEnabled : Bool) : Void;
  
  /**
    Get the role of a subject from a specific source
  **/
  @:ufunction(BlueprintCallable) static public function GetSpecificLiveLinkSubjectRole(SubjectKey : unreal.Const<unreal.livelinkinterface.FLiveLinkSubjectKey>) : unreal.TSubclassOf<unreal.livelinkinterface.ULiveLinkRole>;
  
  /**
    Get the role of the subject with this name
  **/
  @:ufunction(BlueprintCallable) static public function GetLiveLinkSubjectRole(SubjectName : unreal.Const<unreal.livelinkinterface.FLiveLinkSubjectName>) : unreal.TSubclassOf<unreal.livelinkinterface.ULiveLinkRole>;
  @:ufunction(BlueprintCallable) static public function EvaluateLiveLinkFrame(SubjectRepresentation : unreal.livelinkinterface.FLiveLinkSubjectRepresentation, OutBlueprintData : unreal.PRef<unreal.livelinkinterface.FLiveLinkBaseBlueprintData>) : Bool;
  
  /**
    Fetches a frame on a subject for a specific role. Output is evaluated based on the role
  **/
  @:ufunction(BlueprintCallable) static public function EvaluateLiveLinkFrameWithSpecificRole(SubjectName : unreal.livelinkinterface.FLiveLinkSubjectName, Role : unreal.TSubclassOf<unreal.livelinkinterface.ULiveLinkRole>, OutBlueprintData : unreal.PRef<unreal.livelinkinterface.FLiveLinkBaseBlueprintData>) : Bool;
  
  /**
    Fetches a frame on a subject for a specific role at an offset from the application current time. Output is evaluated based on the role
  **/
  @:ufunction(BlueprintCallable) static public function EvaluateLiveLinkFrameAtWorldTimeOffset(SubjectName : unreal.livelinkinterface.FLiveLinkSubjectName, Role : unreal.TSubclassOf<unreal.livelinkinterface.ULiveLinkRole>, WorldTimeOffset : unreal.Float32, OutBlueprintData : unreal.PRef<unreal.livelinkinterface.FLiveLinkBaseBlueprintData>) : Bool;
  
  /**
    Fetches a frame on a subject for a specific role at a specified scene time (timecode).
    The Timecode should be at the frame rate as the engine timecode.
    Output is evaluated based on the role
  **/
  @:ufunction(BlueprintCallable) static public function EvaluateLiveLinkFrameAtSceneTime(SubjectName : unreal.livelinkinterface.FLiveLinkSubjectName, Role : unreal.TSubclassOf<unreal.livelinkinterface.ULiveLinkRole>, SceneTime : unreal.FTimecode, OutBlueprintData : unreal.PRef<unreal.livelinkinterface.FLiveLinkBaseBlueprintData>) : Bool;
  
}
