// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/ucheatmanager.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UCheatManager_Glue {
public static function get_CheatManagerExtensions(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_CheatManagerExtensions(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DebugCameraControllerClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_DebugCameraControllerClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_DebugCameraControllerRef(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_DebugCameraControllerRef(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function FreezeFrame(self:unreal.UIntPtr, Delay:cpp.Float32):Void;
public static function Teleport(self:unreal.UIntPtr):Void;
public static function ChangeSize(self:unreal.UIntPtr, F:cpp.Float32):Void;
public static function Fly(self:unreal.UIntPtr):Void;
public static function Walk(self:unreal.UIntPtr):Void;
public static function Ghost(self:unreal.UIntPtr):Void;
public static function God(self:unreal.UIntPtr):Void;
public static function Slomo(self:unreal.UIntPtr, NewTimeDilation:cpp.Float32):Void;
public static function DamageTarget(self:unreal.UIntPtr, DamageAmount:cpp.Float32):Void;
public static function DestroyTarget(self:unreal.UIntPtr):Void;
public static function DestroyAll(self:unreal.UIntPtr, aClass:unreal.UIntPtr):Void;
public static function DestroyAllPawnsExceptTarget(self:unreal.UIntPtr):Void;
public static function DestroyPawns(self:unreal.UIntPtr, aClass:unreal.UIntPtr):Void;
public static function Summon(self:unreal.UIntPtr, ClassName:unreal.VariantPtr):Void;
public static function PlayersOnly(self:unreal.UIntPtr):Void;
public static function ViewSelf(self:unreal.UIntPtr):Void;
public static function ViewPlayer(self:unreal.UIntPtr, S:unreal.VariantPtr):Void;
public static function ViewActor(self:unreal.UIntPtr, ActorName:unreal.VariantPtr):Void;
public static function ViewClass(self:unreal.UIntPtr, DesiredClass:unreal.UIntPtr):Void;
public static function StreamLevelIn(self:unreal.UIntPtr, PackageName:unreal.VariantPtr):Void;
public static function OnlyLoadLevel(self:unreal.UIntPtr, PackageName:unreal.VariantPtr):Void;
public static function StreamLevelOut(self:unreal.UIntPtr, PackageName:unreal.VariantPtr):Void;
public static function ToggleDebugCamera(self:unreal.UIntPtr):Void;
public static function ToggleAILogging(self:unreal.UIntPtr):Void;
public static function ServerToggleAILogging(self:unreal.UIntPtr):Void;
public static function DebugCapsuleSweep(self:unreal.UIntPtr):Void;
public static function DebugCapsuleSweepSize(self:unreal.UIntPtr, HalfHeight:cpp.Float32, Radius:cpp.Float32):Void;
public static function DebugCapsuleSweepChannel(self:unreal.UIntPtr, Channel:Int):Void;
public static function DebugCapsuleSweepComplex(self:unreal.UIntPtr, bTraceComplex:Bool):Void;
public static function DebugCapsuleSweepCapture(self:unreal.UIntPtr):Void;
public static function DebugCapsuleSweepPawn(self:unreal.UIntPtr):Void;
public static function DebugCapsuleSweepClear(self:unreal.UIntPtr):Void;
public static function TestCollisionDistance(self:unreal.UIntPtr):Void;
public static function DumpOnlineSessionState(self:unreal.UIntPtr):Void;
public static function DumpPartyState(self:unreal.UIntPtr):Void;
public static function DumpChatState(self:unreal.UIntPtr):Void;
public static function DumpVoiceMutingState(self:unreal.UIntPtr):Void;
public static function BugItGo(self:unreal.UIntPtr, X:cpp.Float32, Y:cpp.Float32, Z:cpp.Float32, Pitch:cpp.Float32, Yaw:cpp.Float32, Roll:cpp.Float32):Void;
public static function BugIt(self:unreal.UIntPtr, ScreenShotDescription:unreal.VariantPtr):Void;
public static function BugItStringCreator(self:unreal.UIntPtr, ViewLocation:unreal.VariantPtr, ViewRotation:unreal.VariantPtr, GoString:unreal.VariantPtr, LocString:unreal.VariantPtr):Void;
public static function FlushLog(self:unreal.UIntPtr):Void;
public static function LogLoc(self:unreal.UIntPtr):Void;
public static function SetWorldOrigin(self:unreal.UIntPtr):Void;
public static function SetMouseSensitivityToDefault(self:unreal.UIntPtr):Void;
public static function InvertMouse(self:unreal.UIntPtr):Void;
public static function CheatScript(self:unreal.UIntPtr, ScriptName:unreal.VariantPtr):Void;
public static function SpawnServerStatReplicator(self:unreal.UIntPtr):Void;
public static function DestroyServerStatReplicator(self:unreal.UIntPtr):Void;
public static function ToggleServerStatReplicatorClientOverwrite(self:unreal.UIntPtr):Void;
public static function ToggleServerStatReplicatorUpdateStatNet(self:unreal.UIntPtr):Void;
public static function UpdateSafeArea(self:unreal.UIntPtr):Void;
public static function ReceiveInitCheatManager(self:unreal.UIntPtr):Void;
public static function ReceiveEndPlay(self:unreal.UIntPtr):Void;
public static function EnableDebugCamera(self:unreal.UIntPtr):Void;
public static function DisableDebugCamera(self:unreal.UIntPtr):Void;
public static function StaticClass():unreal.UIntPtr;
}