/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.motosynth;

@:umodule("MotoSynth")
@:glueCppIncludes("SynthComponents/SynthComponentMoto.h")
@:uextern @:uclass extern class USynthComponentMoto extends unreal.audiomixer.USynthComponent {
  
  /**
    Sets the starting RPM of the engine
  **/
  @:uproperty public var RPM : unreal.Float32;
  
  /**
    The moto synth preset to use for the moto synth component.
  **/
  @:uproperty public var MotoSynthPreset : unreal.motosynth.UMotoSynthPreset;
  
  /**
    Sets the RPM of the granular engine directly.
  **/
  @:ufunction(BlueprintCallable) @:final public function SetRPM(InRPM : unreal.Float32, InTimeSec : unreal.Float32) : Void;
  
  /**
    Sets a moto synth settings dynamically.
  **/
  @:ufunction(BlueprintCallable) @:final public function SetSettings(InSettings : unreal.Const<unreal.PRef<unreal.motosynth.FMotoSynthRuntimeSettings>>) : Void;
  
  /**
    Retrieves RPM range of the moto synth, taking into account the acceleration and deceleration sources. The min RPM is the largest of the min RPms of either and the max RPM is min of the max RPMs of either.
  **/
  @:ufunction(BlueprintCallable) @:final public function GetRPMRange(OutMinRPM : unreal.Float32, OutMaxRPM : unreal.Float32) : Void;
  
  /**
    Returns if the moto synth is enabled.
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function IsEnabled() : Bool;
  
}
