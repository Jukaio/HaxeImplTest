// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/uprojectilemovementcomponent.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UProjectileMovementComponent_Glue {
public static function get_InterpLocationSnapToTargetDistance(self:unreal.UIntPtr):cpp.Float32;
public static function set_InterpLocationSnapToTargetDistance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_InterpLocationMaxLagDistance(self:unreal.UIntPtr):cpp.Float32;
public static function set_InterpLocationMaxLagDistance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_InterpRotationTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_InterpRotationTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_InterpLocationTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_InterpLocationTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_BounceAdditionalIterations(self:unreal.UIntPtr):Int;
public static function set_BounceAdditionalIterations(self:unreal.UIntPtr, value:Int):Void;
public static function get_MaxSimulationIterations(self:unreal.UIntPtr):Int;
public static function set_MaxSimulationIterations(self:unreal.UIntPtr, value:Int):Void;
public static function get_MaxSimulationTimeStep(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxSimulationTimeStep(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_HomingTargetComponent(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_HomingTargetComponent(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_HomingAccelerationMagnitude(self:unreal.UIntPtr):cpp.Float32;
public static function set_HomingAccelerationMagnitude(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_OnProjectileStop(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnProjectileStop(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnProjectileBounce(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnProjectileBounce(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MinFrictionFraction(self:unreal.UIntPtr):cpp.Float32;
public static function set_MinFrictionFraction(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_BounceVelocityStopSimulatingThreshold(self:unreal.UIntPtr):cpp.Float32;
public static function set_BounceVelocityStopSimulatingThreshold(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_Friction(self:unreal.UIntPtr):cpp.Float32;
public static function set_Friction(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_Bounciness(self:unreal.UIntPtr):cpp.Float32;
public static function set_Bounciness(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_Buoyancy(self:unreal.UIntPtr):cpp.Float32;
public static function set_Buoyancy(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ProjectileGravityScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_ProjectileGravityScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_PreviousHitNormal(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PreviousHitNormal(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PreviousHitTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_PreviousHitTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bInterpRotation(self:unreal.UIntPtr):Bool;
public static function set_bInterpRotation(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bInterpMovement(self:unreal.UIntPtr):Bool;
public static function set_bInterpMovement(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bIsSliding(self:unreal.UIntPtr):Bool;
public static function set_bIsSliding(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bBounceAngleAffectsFriction(self:unreal.UIntPtr):Bool;
public static function set_bBounceAngleAffectsFriction(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bIsHomingProjectile(self:unreal.UIntPtr):Bool;
public static function set_bIsHomingProjectile(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bSweepCollision(self:unreal.UIntPtr):Bool;
public static function set_bSweepCollision(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bSimulationEnabled(self:unreal.UIntPtr):Bool;
public static function set_bSimulationEnabled(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bForceSubStepping(self:unreal.UIntPtr):Bool;
public static function set_bForceSubStepping(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bInitialVelocityInLocalSpace(self:unreal.UIntPtr):Bool;
public static function set_bInitialVelocityInLocalSpace(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bShouldBounce(self:unreal.UIntPtr):Bool;
public static function set_bShouldBounce(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bRotationRemainsVertical(self:unreal.UIntPtr):Bool;
public static function set_bRotationRemainsVertical(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bRotationFollowsVelocity(self:unreal.UIntPtr):Bool;
public static function set_bRotationFollowsVelocity(self:unreal.UIntPtr, value:Bool):Void;
public static function get_MaxSpeed(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxSpeed(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_InitialSpeed(self:unreal.UIntPtr):cpp.Float32;
public static function set_InitialSpeed(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function IsVelocityUnderSimulationThreshold(self:unreal.UIntPtr):Bool;
public static function SetVelocityInLocalSpace(self:unreal.UIntPtr, NewVelocity:unreal.VariantPtr):Void;
public static function StopSimulating(self:unreal.UIntPtr, HitResult:unreal.VariantPtr):Void;
public static function SetInterpolatedComponent(self:unreal.UIntPtr, Component:unreal.UIntPtr):Void;
public static function MoveInterpolationTarget(self:unreal.UIntPtr, NewLocation:unreal.VariantPtr, NewRotation:unreal.VariantPtr):Void;
public static function ResetInterpolation(self:unreal.UIntPtr):Void;
public static function IsInterpolationComplete(self:unreal.UIntPtr):Bool;
public static function LimitVelocity(self:unreal.UIntPtr, NewVelocity:unreal.VariantPtr):unreal.VariantPtr;
public static function HasStoppedSimulation(self:unreal.UIntPtr):Bool;
public static function ComputeMoveDelta(self:unreal.UIntPtr, InVelocity:unreal.VariantPtr, DeltaTime:cpp.Float32):unreal.VariantPtr;
public static function StaticClass():unreal.UIntPtr;
}