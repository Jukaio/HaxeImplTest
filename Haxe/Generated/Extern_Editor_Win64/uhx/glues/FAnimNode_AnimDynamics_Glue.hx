// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/animgraphruntime/fanimnode_animdynamics.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class FAnimNode_AnimDynamics_Glue {
public static function get_RetargetingSettings(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_RetargetingSettings(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_bChain(self:unreal.VariantPtr):Bool;
public static function set_bChain(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bAngularSpring(self:unreal.VariantPtr):Bool;
public static function set_bAngularSpring(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bLinearSpring(self:unreal.VariantPtr):Bool;
public static function set_bLinearSpring(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bUseGravityOverride(self:unreal.VariantPtr):Bool;
public static function set_bUseGravityOverride(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bEnableWind(self:unreal.VariantPtr):Bool;
public static function set_bEnableWind(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bOverrideAngularDamping(self:unreal.VariantPtr):Bool;
public static function set_bOverrideAngularDamping(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bOverrideAngularBias(self:unreal.VariantPtr):Bool;
public static function set_bOverrideAngularBias(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bOverrideLinearDamping(self:unreal.VariantPtr):Bool;
public static function set_bOverrideLinearDamping(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bDoEval(self:unreal.VariantPtr):Bool;
public static function set_bDoEval(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bDoUpdate(self:unreal.VariantPtr):Bool;
public static function set_bDoUpdate(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bUsePlanarLimit(self:unreal.VariantPtr):Bool;
public static function set_bUsePlanarLimit(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bUseSphericalLimits(self:unreal.VariantPtr):Bool;
public static function set_bUseSphericalLimits(self:unreal.VariantPtr, value:Bool):Void;
public static function get_SimulationSpace(self:unreal.VariantPtr):Int;
public static function set_SimulationSpace(self:unreal.VariantPtr, value:Int):Void;
public static function get_CollisionType(self:unreal.VariantPtr):Int;
public static function set_CollisionType(self:unreal.VariantPtr, value:Int):Void;
public static function get_PlanarLimits(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_PlanarLimits(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_ExternalForce(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_ExternalForce(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_SphereCollisionRadius(self:unreal.VariantPtr):cpp.Float32;
public static function set_SphereCollisionRadius(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_SphericalLimits(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_SphericalLimits(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_ConstraintSetup(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_ConstraintSetup(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_NumSolverIterationsPostUpdate(self:unreal.VariantPtr):Int;
public static function set_NumSolverIterationsPostUpdate(self:unreal.VariantPtr, value:Int):Void;
public static function get_NumSolverIterationsPreUpdate(self:unreal.VariantPtr):Int;
public static function set_NumSolverIterationsPreUpdate(self:unreal.VariantPtr, value:Int):Void;
public static function get_AngularBiasOverride(self:unreal.VariantPtr):cpp.Float32;
public static function set_AngularBiasOverride(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_ComponentAppliedLinearAccClamp(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_ComponentAppliedLinearAccClamp(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_ComponentLinearVelScale(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_ComponentLinearVelScale(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_ComponentLinearAccScale(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_ComponentLinearAccScale(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_WindScale(self:unreal.VariantPtr):cpp.Float32;
public static function set_WindScale(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_AngularSpringConstant(self:unreal.VariantPtr):cpp.Float32;
public static function set_AngularSpringConstant(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_LinearSpringConstant(self:unreal.VariantPtr):cpp.Float32;
public static function set_LinearSpringConstant(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_GravityOverride(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_GravityOverride(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_GravityScale(self:unreal.VariantPtr):cpp.Float32;
public static function set_GravityScale(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_LocalJointOffset(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_LocalJointOffset(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_BoxExtents(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_BoxExtents(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_ChainEnd(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_ChainEnd(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_BoundBone(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_BoundBone(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_RelativeSpaceBone(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_RelativeSpaceBone(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_AngularDampingOverride(self:unreal.VariantPtr):cpp.Float32;
public static function set_AngularDampingOverride(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_LinearDampingOverride(self:unreal.VariantPtr):cpp.Float32;
public static function set_LinearDampingOverride(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function copyNew(self:unreal.VariantPtr):unreal.VariantPtr;
public static function copy(self:unreal.VariantPtr):unreal.VariantPtr;
public static function assign(self:unreal.VariantPtr, val:unreal.VariantPtr):Void;
public static function equals(self:unreal.VariantPtr, other:unreal.VariantPtr):Bool;
}