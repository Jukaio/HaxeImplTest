// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/common/unreal/onlinesubsystem/euserprivileges.hx
package unreal.onlinesubsystem;
@:flatEnum
@:glueCppIncludes("OnlineIdentityInterface.h")
@:umodule("OnlineSubsystem")
@:uname("EUserPrivileges.Type")
@:uextern
enum EUserPrivileges {
  /**
    Whether the user can play at all, online or offline - may be age restricted
  **/
  
  CanPlay;
  /**
    Whether the user can play in online modes
  **/
  
  CanPlayOnline;
  /**
    Whether the user can use voice and text chat
  **/
  
  CanCommunicateOnline;
  /**
    Whether the user can use content generated by other users
  **/
  
  CanUseUserGeneratedContent;
  /**
    Whether the user can ever participate in cross-play due to age restrictions
  **/
  
  CanUserCrossPlay;
  
}

@:ueGluePath("uhx.glues.EUserPrivileges_Glue")
@:flatEnum
@:glueCppIncludes("OnlineIdentityInterface.h")
@:umodule("OnlineSubsystem")
@:uname("EUserPrivileges.Type")
@:uextern
@:glueCppIncludes("uhx/expose/HxcppRuntime.h", "uhx/EnumGlue.h")
@:ueCppDef("namespace uhx {\n\ntemplate<> struct EnumGlue<EUserPrivileges::Type> {\n\tstatic EUserPrivileges::Type haxeToUe(unreal::UIntPtr haxe);\n\tstatic unreal::UIntPtr ueToHaxe(EUserPrivileges::Type ue);\n};\n}\n\nEUserPrivileges::Type uhx::EnumGlue< EUserPrivileges::Type >::haxeToUe(unreal::UIntPtr haxe) {\n\t\treturn (EUserPrivileges::Type) uhx::glues::EUserPrivileges_Glue::haxeToUe( uhx::expose::HxcppRuntime::enumIndex(haxe) + 1 );\n}\nunreal::UIntPtr uhx::EnumGlue< EUserPrivileges::Type >::ueToHaxe(EUserPrivileges::Type ue) {\n\t\tstatic unreal::UIntPtr array = uhx::expose::HxcppRuntime::getEnumArray(\"EUserPrivileges::Type\");\n\t\treturn uhx::expose::HxcppRuntime::arrayIndex(array, uhx::glues::EUserPrivileges_Glue::ueToHaxe((int) ue) - 1);\n}")
@:ifFeature("unreal.onlinesubsystem.EUserPrivileges.*") class EUserPrivileges_EnumConv {
  public static var all:Array<EUserPrivileges>;
  static function __init__(){
    uhx.EnumMap.set("EUserPrivileges::Type", all = std.Type.allEnums(unreal.onlinesubsystem.EUserPrivileges));
    uhx.EnumMap.setUeToHaxe("EUserPrivileges::Type", ueToHaxe);
    uhx.EnumMap.setHaxeToUe("unreal.onlinesubsystem.EUserPrivileges", haxeToUe);
  }
  
  @:glueHeaderCode("static int ueToHaxe(int value);")
  @:glueCppCode("int uhx::glues::EUserPrivileges_Glue_obj::ueToHaxe(int value) {\n\tswitch((EUserPrivileges::Type) value) {\n\tcase EUserPrivileges::CanPlay:\n\t\treturn 1;\n\tcase EUserPrivileges::CanPlayOnline:\n\t\treturn 2;\n\tcase EUserPrivileges::CanCommunicateOnline:\n\t\treturn 3;\n\tcase EUserPrivileges::CanUseUserGeneratedContent:\n\t\treturn 4;\n\tcase EUserPrivileges::CanUserCrossPlay:\n\t\treturn 5;\n\t}\n\treturn 0;\n}")
  @:ifFeature("unreal.onlinesubsystem.EUserPrivileges.*") public static function ueToHaxe(value:Int):Int {
    return uhx.glues.EUserPrivileges_Glue.ueToHaxe(value);
  }
  @:glueHeaderCode("static int haxeToUe(int value);")
  @:glueCppCode("int uhx::glues::EUserPrivileges_Glue_obj::haxeToUe(int value) {\n\tswitch(value) {\n\tcase 1:\n\t\treturn (int) EUserPrivileges::CanPlay;\n\tcase 2:\n\t\treturn (int) EUserPrivileges::CanPlayOnline;\n\tcase 3:\n\t\treturn (int) EUserPrivileges::CanCommunicateOnline;\n\tcase 4:\n\t\treturn (int) EUserPrivileges::CanUseUserGeneratedContent;\n\tcase 5:\n\t\treturn (int) EUserPrivileges::CanUserCrossPlay;\n\t}\n\treturn 0;\n}")
  @:ifFeature("unreal.onlinesubsystem.EUserPrivileges.*") public static function haxeToUe(value:Int):Int {
    return uhx.glues.EUserPrivileges_Glue.haxeToUe(value);
  }
  public static inline function wrap(v:Int):unreal.onlinesubsystem.EUserPrivileges return all[ueToHaxe(v) - 1];
  public static inline function unwrap(v:unreal.onlinesubsystem.EUserPrivileges):Int return haxeToUe(v.getIndex() + 1);
}

