// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/enginesettings/ugamenetworkmanagersettings.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UGameNetworkManagerSettings_Glue {
public static function get_JoinInProgressStandbyWaitTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_JoinInProgressStandbyWaitTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_PercentForBadPing(self:unreal.UIntPtr):cpp.Float32;
public static function set_PercentForBadPing(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_PercentMissingForTxStandby(self:unreal.UIntPtr):cpp.Float32;
public static function set_PercentMissingForTxStandby(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_PercentMissingForRxStandby(self:unreal.UIntPtr):cpp.Float32;
public static function set_PercentMissingForRxStandby(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_StandbyTxCheatTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_StandbyTxCheatTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_StandbyRxCheatTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_StandbyRxCheatTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bIsStandbyCheckingEnabled(self:unreal.UIntPtr):Bool;
public static function set_bIsStandbyCheckingEnabled(self:unreal.UIntPtr, value:Bool):Void;
public static function get_BadPingThreshold(self:unreal.UIntPtr):Int;
public static function set_BadPingThreshold(self:unreal.UIntPtr, value:Int):Void;
public static function get_TotalNetBandwidth(self:unreal.UIntPtr):Int;
public static function set_TotalNetBandwidth(self:unreal.UIntPtr, value:Int):Void;
public static function get_MaxDynamicBandwidth(self:unreal.UIntPtr):Int;
public static function set_MaxDynamicBandwidth(self:unreal.UIntPtr, value:Int):Void;
public static function get_MinDynamicBandwidth(self:unreal.UIntPtr):Int;
public static function set_MinDynamicBandwidth(self:unreal.UIntPtr, value:Int):Void;
public static function StaticClass():unreal.UIntPtr;
}