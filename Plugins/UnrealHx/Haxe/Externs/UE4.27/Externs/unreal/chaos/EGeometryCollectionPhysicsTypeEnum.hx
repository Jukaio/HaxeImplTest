/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.chaos;

@:umodule("Chaos")
@:glueCppIncludes("Public/GeometryCollection/GeometryCollectionSimulationTypes.h")
@:uname("EGeometryCollectionPhysicsTypeEnum")
@:class @:uextern @:uenum extern enum EGeometryCollectionPhysicsTypeEnum {
  
  /**
    Add a vector field to the particles angular velocity.
    @DisplayName Angular Velocity
  **/
  @DisplayName("Angular Velocity")
  Chaos_AngularVelocity;
  
  /**
    Set the dynamic state of a particle (static, dynamic, kinematic...)
    @DisplayName Dynamic State
  **/
  @DisplayName("Dynamic State")
  Chaos_DynamicState;
  
  /**
    Add a vector field to the particles linear velocity.
    @DisplayName Linear Velocity
  **/
  @DisplayName("Linear Velocity")
  Chaos_LinearVelocity;
  
  /**
    Initial particles angular velocity.
    @DisplayName Initial Angular Velocity
  **/
  @DisplayName("Initial Angular Velocity")
  Chaos_InitialAngularVelocity;
  
  /**
    Initial particles linear velocity.
    @DisplayName Initial Linear Velocity
  **/
  @DisplayName("Initial Linear Velocity")
  Chaos_InitialLinearVelocity;
  
  /**
    Set the particles collision group.
    @DisplayName Collision Group
  **/
  @DisplayName("Collision Group")
  Chaos_CollisionGroup;
  
  /**
    Add a vector field to the particles linear force.
    @DisplayName Linear Force
  **/
  @DisplayName("Linear Force")
  Chaos_LinearForce;
  
  /**
    Add a vector field to the particles angular torque.
    @DisplayName Angular Torque
  **/
  @DisplayName("Angular Torque")
  Chaos_AngularTorque;
  Chaos_Max;
  
}
