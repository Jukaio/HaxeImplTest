/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.interactivetoolsframework;

/**
  UInteractiveToolManager allows users of the tools framework to create and operate Tool instances.
  For each Tool, a (string,ToolBuilder) pair is registered with the ToolManager.
  Tools can then be activated via the string identifier.
  
  Currently a single Tool can be active for each input device. So for mouse input a single
  Tool is available and effectively a lightweight mode. The mouse uses the "Left" tool slot.
  
  For VR controllers and touch input, a "Left" and "Right" tool can be active at the same time.
  @todo this is not fully supported yet
  
  Tools are not directly created. Use SelectActiveToolType(side,string) to set the active ToolBuilder
  on a given side, and then use ActivateTool() to create the new Tool instance.
**/
@:umodule("InteractiveToolsFramework")
@:glueCppIncludes("InteractiveToolManager.h")
@:uextern @:uclass extern class UInteractiveToolManager extends unreal.UObject implements unreal.interactivetoolsframework.IToolContextTransactionProvider {
  
  /**
    Current set of named ToolBuilders
  **/
  @:uproperty private var ToolBuilders : unreal.TMap<unreal.FString, unreal.interactivetoolsframework.UInteractiveToolBuilder>;
  
  /**
    Currently-active Right Tool, or null if no Tool is active
  **/
  @:uproperty public var ActiveRightTool : unreal.interactivetoolsframework.UInteractiveTool;
  
  /**
    Currently-active Left Tool, or null if no Tool is active
  **/
  @:uproperty public var ActiveLeftTool : unreal.interactivetoolsframework.UInteractiveTool;
  // ToolContextTransactionProvider interface implementation
  
}
