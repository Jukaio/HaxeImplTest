// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/fhitresult.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class FHitResult_Glue {
public static function glueNew(init:Int):unreal.VariantPtr;
public static function createWithValues(Actor:unreal.UIntPtr, Component:unreal.UIntPtr, HitLoc:unreal.VariantPtr, HitNorm:unreal.VariantPtr):unreal.VariantPtr;
public static function createForceInit(init:Int):unreal.VariantPtr;
public static function createNewForceInit(init:Int):unreal.VariantPtr;
public static function get_MyBoneName(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_MyBoneName(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_BoneName(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_BoneName(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_Component(self:unreal.VariantPtr):unreal.UIntPtr;
public static function set_Component(self:unreal.VariantPtr, value:unreal.UIntPtr):Void;
public static function get_Actor(self:unreal.VariantPtr):unreal.UIntPtr;
public static function set_Actor(self:unreal.VariantPtr, value:unreal.UIntPtr):Void;
public static function get_PhysMaterial(self:unreal.VariantPtr):unreal.UIntPtr;
public static function set_PhysMaterial(self:unreal.VariantPtr, value:unreal.UIntPtr):Void;
public static function get_bStartPenetrating(self:unreal.VariantPtr):Bool;
public static function set_bStartPenetrating(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bBlockingHit(self:unreal.VariantPtr):Bool;
public static function set_bBlockingHit(self:unreal.VariantPtr, value:Bool):Void;
public static function get_ElementIndex(self:unreal.VariantPtr):cpp.UInt8;
public static function set_ElementIndex(self:unreal.VariantPtr, value:cpp.UInt8):Void;
public static function get_Item(self:unreal.VariantPtr):Int;
public static function set_Item(self:unreal.VariantPtr, value:Int):Void;
public static function get_PenetrationDepth(self:unreal.VariantPtr):cpp.Float32;
public static function set_PenetrationDepth(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_TraceEnd(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_TraceEnd(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_TraceStart(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_TraceStart(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_ImpactNormal(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_ImpactNormal(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_Normal(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_Normal(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_ImpactPoint(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_ImpactPoint(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_Location(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_Location(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_Distance(self:unreal.VariantPtr):cpp.Float32;
public static function set_Distance(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_Time(self:unreal.VariantPtr):cpp.Float32;
public static function set_Time(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_FaceIndex(self:unreal.VariantPtr):Int;
public static function set_FaceIndex(self:unreal.VariantPtr, value:Int):Void;
public static function Reset(self:unreal.VariantPtr, InTime:cpp.Float32, bPreserveTraceData:Bool):Void;
public static function copyNew(self:unreal.VariantPtr):unreal.VariantPtr;
public static function copy(self:unreal.VariantPtr):unreal.VariantPtr;
public static function assign(self:unreal.VariantPtr, val:unreal.VariantPtr):Void;
public static function equals(self:unreal.VariantPtr, other:unreal.VariantPtr):Bool;
}