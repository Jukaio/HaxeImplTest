// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/chaosniagara/uniagaradatainterfacechaosdestruction.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UNiagaraDataInterfaceChaosDestruction_Glue {
public static function get_TimeStampOfLastProcessedData(self:unreal.UIntPtr):cpp.Float32;
public static function set_TimeStampOfLastProcessedData(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_SolverTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_SolverTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LastSpawnTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_LastSpawnTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LastSpawnedPointID(self:unreal.UIntPtr):Int;
public static function set_LastSpawnedPointID(self:unreal.UIntPtr, value:Int):Void;
public static function get_DebugType(self:unreal.UIntPtr):Int;
public static function set_DebugType(self:unreal.UIntPtr, value:Int):Void;
public static function get_MaxLatency(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxLatency(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_FinalVelocityMagnitudeMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_FinalVelocityMagnitudeMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_VelocityOffsetMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_VelocityOffsetMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_VelocityOffsetMin(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_VelocityOffsetMin(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_SpreadAngleMax(self:unreal.UIntPtr):cpp.Float32;
public static function set_SpreadAngleMax(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_RandomVelocityMagnitudeMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_RandomVelocityMagnitudeMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_RandomVelocityGenerationType(self:unreal.UIntPtr):Int;
public static function set_RandomVelocityGenerationType(self:unreal.UIntPtr, value:Int):Void;
public static function get_InheritedVelocityMultiplier(self:unreal.UIntPtr):cpp.Float32;
public static function set_InheritedVelocityMultiplier(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_RandomPositionMagnitudeMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_RandomPositionMagnitudeMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bGetExternalTrailingData(self:unreal.UIntPtr):Bool;
public static function set_bGetExternalTrailingData(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bGetExternalBreakingData(self:unreal.UIntPtr):Bool;
public static function set_bGetExternalBreakingData(self:unreal.UIntPtr, value:Bool):Void;
public static function get_ChaosBreakingMaterialSet(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ChaosBreakingMaterialSet(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bApplyMaterialsFilter(self:unreal.UIntPtr):Bool;
public static function set_bApplyMaterialsFilter(self:unreal.UIntPtr, value:Bool):Void;
public static function get_MaxDataPerCell(self:unreal.UIntPtr):Int;
public static function set_MaxDataPerCell(self:unreal.UIntPtr, value:Int):Void;
public static function get_SpatialHashVolumeCellSize(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SpatialHashVolumeCellSize(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_SpatialHashVolumeMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SpatialHashVolumeMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_SpatialHashVolumeMin(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SpatialHashVolumeMin(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DoSpatialHash(self:unreal.UIntPtr):Bool;
public static function set_DoSpatialHash(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bGetExternalCollisionData(self:unreal.UIntPtr):Bool;
public static function set_bGetExternalCollisionData(self:unreal.UIntPtr, value:Bool):Void;
public static function get_DataSortingType(self:unreal.UIntPtr):Int;
public static function set_DataSortingType(self:unreal.UIntPtr, value:Int):Void;
public static function get_LocationZToSpawnMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LocationZToSpawnMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LocationZToSpawn(self:unreal.UIntPtr):Int;
public static function set_LocationZToSpawn(self:unreal.UIntPtr, value:Int):Void;
public static function get_LocationYToSpawnMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LocationYToSpawnMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LocationYToSpawn(self:unreal.UIntPtr):Int;
public static function set_LocationYToSpawn(self:unreal.UIntPtr, value:Int):Void;
public static function get_LocationXToSpawnMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LocationXToSpawnMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LocationXToSpawn(self:unreal.UIntPtr):Int;
public static function set_LocationXToSpawn(self:unreal.UIntPtr, value:Int):Void;
public static function get_LocationFilteringMode(self:unreal.UIntPtr):Int;
public static function set_LocationFilteringMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_SurfaceTypeToSpawn(self:unreal.UIntPtr):Int;
public static function set_SurfaceTypeToSpawn(self:unreal.UIntPtr, value:Int):Void;
public static function get_SolverTimeToSpawnMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SolverTimeToSpawnMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_VolumeToSpawnMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_VolumeToSpawnMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ExtentMaxToSpawnMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ExtentMaxToSpawnMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ExtentMinToSpawnMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ExtentMinToSpawnMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MassToSpawnMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_MassToSpawnMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_SpeedToSpawnMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SpeedToSpawnMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ImpulseToSpawnMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ImpulseToSpawnMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_SpawnChance(self:unreal.UIntPtr):cpp.Float32;
public static function set_SpawnChance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_SpawnMultiplierMinMax(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SpawnMultiplierMinMax(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DoSpawn(self:unreal.UIntPtr):Bool;
public static function set_DoSpawn(self:unreal.UIntPtr, value:Bool):Void;
public static function get_MaxNumberOfDataEntriesToSpawn(self:unreal.UIntPtr):Int;
public static function set_MaxNumberOfDataEntriesToSpawn(self:unreal.UIntPtr, value:Int):Void;
public static function get_DataProcessFrequency(self:unreal.UIntPtr):Int;
public static function set_DataProcessFrequency(self:unreal.UIntPtr, value:Int):Void;
public static function get_DataSourceType(self:unreal.UIntPtr):Int;
public static function set_DataSourceType(self:unreal.UIntPtr, value:Int):Void;
public static function get_ChaosSolverActorSet(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ChaosSolverActorSet(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function StaticClass():unreal.UIntPtr;
}