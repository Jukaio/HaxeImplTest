// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/acontroller.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class AController_Glue {
public static function get_ControlRotation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ControlRotation(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_StateName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_StateName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnInstigatedAnyDamage(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnInstigatedAnyDamage(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PlayerState(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PlayerState(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function GetControlRotation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function SetControlRotation(self:unreal.UIntPtr, NewRotation:unreal.VariantPtr):Void;
public static function SetInitialLocationAndRotation(self:unreal.UIntPtr, NewLocation:unreal.VariantPtr, NewRotation:unreal.VariantPtr):Void;
public static function LineOfSightTo(self:unreal.UIntPtr, Other:unreal.UIntPtr, ViewPoint:unreal.VariantPtr, bAlternateChecks:Bool):Bool;
public static function OnRep_Pawn(self:unreal.UIntPtr):Void;
public static function OnRep_PlayerState(self:unreal.UIntPtr):Void;
public static function CastToPlayerController(self:unreal.UIntPtr):unreal.UIntPtr;
public static function ClientSetLocation(self:unreal.UIntPtr, NewLocation:unreal.VariantPtr, NewRotation:unreal.VariantPtr):Void;
public static function ClientSetRotation(self:unreal.UIntPtr, NewRotation:unreal.VariantPtr, bResetCamera:Bool):Void;
public static function K2_GetPawn(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GetViewTarget(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GetDesiredRotation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function IsPlayerController(self:unreal.UIntPtr):Bool;
public static function IsLocalPlayerController(self:unreal.UIntPtr):Bool;
public static function IsLocalController(self:unreal.UIntPtr):Bool;
public static function Possess(self:unreal.UIntPtr, InPawn:unreal.UIntPtr):Void;
public static function UnPossess(self:unreal.UIntPtr):Void;
public static function ReceivePossess(self:unreal.UIntPtr, PossessedPawn:unreal.UIntPtr):Void;
public static function ReceiveUnPossess(self:unreal.UIntPtr, UnpossessedPawn:unreal.UIntPtr):Void;
public static function StopMovement(self:unreal.UIntPtr):Void;
public static function SetIgnoreMoveInput(self:unreal.UIntPtr, bNewMoveInput:Bool):Void;
public static function ResetIgnoreMoveInput(self:unreal.UIntPtr):Void;
public static function IsMoveInputIgnored(self:unreal.UIntPtr):Bool;
public static function SetIgnoreLookInput(self:unreal.UIntPtr, bNewLookInput:Bool):Void;
public static function ResetIgnoreLookInput(self:unreal.UIntPtr):Void;
public static function IsLookInputIgnored(self:unreal.UIntPtr):Bool;
public static function ResetIgnoreInputFlags(self:unreal.UIntPtr):Void;
public static function ReceiveInstigatedAnyDamage(self:unreal.UIntPtr, Damage:cpp.Float32, DamageType:unreal.UIntPtr, DamagedActor:unreal.UIntPtr, DamageCauser:unreal.UIntPtr):Void;
public static function PawnPendingDestroy(self:unreal.UIntPtr, inPawn:unreal.UIntPtr):Void;
public static function GetCharacter(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GetPawn(self:unreal.UIntPtr):unreal.UIntPtr;
public static function ChangeState(self:unreal.UIntPtr, newState:unreal.VariantPtr):Void;
public static function IsInState(self:unreal.UIntPtr, state:unreal.VariantPtr):Bool;
public static function GetStateName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function InitPlayerState(self:unreal.UIntPtr):Void;
public static function GameHasEnded(self:unreal.UIntPtr, EndGameFocus:unreal.UIntPtr, bIsWinner:Bool):Void;
public static function GetPlayerViewPoint(self:unreal.UIntPtr, out_Location:unreal.VariantPtr, out_Rotation:unreal.VariantPtr):Void;
public static function OnPossess(self:unreal.UIntPtr, InPawn:unreal.UIntPtr):Void;
public static function StaticClass():unreal.UIntPtr;
}