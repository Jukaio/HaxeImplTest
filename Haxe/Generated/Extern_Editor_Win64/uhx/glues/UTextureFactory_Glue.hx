// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/editor/utexturefactory.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UTextureFactory_Glue {
public static function get_ColorSpaceMode(self:unreal.UIntPtr):Int;
public static function set_ColorSpaceMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_UdimRegexPattern(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_UdimRegexPattern(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bUseHashAsGuid(self:unreal.UIntPtr):Bool;
public static function set_bUseHashAsGuid(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUsingExistingSettings(self:unreal.UIntPtr):Bool;
public static function set_bUsingExistingSettings(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bFlipNormalMapGreenChannel(self:unreal.UIntPtr):Bool;
public static function set_bFlipNormalMapGreenChannel(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bPreserveBorder(self:unreal.UIntPtr):Bool;
public static function set_bPreserveBorder(self:unreal.UIntPtr, value:Bool):Void;
public static function get_AlphaCoverageThresholds(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_AlphaCoverageThresholds(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bDitherMipMapAlpha(self:unreal.UIntPtr):Bool;
public static function set_bDitherMipMapAlpha(self:unreal.UIntPtr, value:Bool):Void;
public static function get_LODGroup(self:unreal.UIntPtr):Int;
public static function set_LODGroup(self:unreal.UIntPtr, value:Int):Void;
public static function get_MipGenSettings(self:unreal.UIntPtr):Int;
public static function set_MipGenSettings(self:unreal.UIntPtr, value:Int):Void;
public static function get_ShadingModel(self:unreal.UIntPtr):Int;
public static function set_ShadingModel(self:unreal.UIntPtr, value:Int):Void;
public static function get_Blending(self:unreal.UIntPtr):Int;
public static function set_Blending(self:unreal.UIntPtr, value:Int):Void;
public static function get_bTwoSided(self:unreal.UIntPtr):Bool;
public static function set_bTwoSided(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bAlphaToOpacityMask(self:unreal.UIntPtr):Bool;
public static function set_bAlphaToOpacityMask(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bAlphaToOpacity(self:unreal.UIntPtr):Bool;
public static function set_bAlphaToOpacity(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bAlphaToEmissive(self:unreal.UIntPtr):Bool;
public static function set_bAlphaToEmissive(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bAlphaToRoughness(self:unreal.UIntPtr):Bool;
public static function set_bAlphaToRoughness(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bRGBToEmissive(self:unreal.UIntPtr):Bool;
public static function set_bRGBToEmissive(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bRGBToBaseColor(self:unreal.UIntPtr):Bool;
public static function set_bRGBToBaseColor(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCreateMaterial(self:unreal.UIntPtr):Bool;
public static function set_bCreateMaterial(self:unreal.UIntPtr, value:Bool):Void;
public static function get_CompressionSettings(self:unreal.UIntPtr):Int;
public static function set_CompressionSettings(self:unreal.UIntPtr, value:Int):Void;
public static function get_bDeferCompression(self:unreal.UIntPtr):Bool;
public static function set_bDeferCompression(self:unreal.UIntPtr, value:Bool):Void;
public static function get_NoAlpha(self:unreal.UIntPtr):Bool;
public static function set_NoAlpha(self:unreal.UIntPtr, value:Bool):Void;
public static function get_NoCompression(self:unreal.UIntPtr):Bool;
public static function set_NoCompression(self:unreal.UIntPtr, value:Bool):Void;
public static function StaticClass():unreal.UIntPtr;
}