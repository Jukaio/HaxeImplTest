// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/screenshotcomparisontools/fimagetolerance.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class FImageTolerance_Glue {
public static function get_MaximumGlobalError(self:unreal.VariantPtr):cpp.Float32;
public static function set_MaximumGlobalError(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_MaximumLocalError(self:unreal.VariantPtr):cpp.Float32;
public static function set_MaximumLocalError(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_IgnoreColors(self:unreal.VariantPtr):Bool;
public static function set_IgnoreColors(self:unreal.VariantPtr, value:Bool):Void;
public static function get_IgnoreAntiAliasing(self:unreal.VariantPtr):Bool;
public static function set_IgnoreAntiAliasing(self:unreal.VariantPtr, value:Bool):Void;
public static function get_MaxBrightness(self:unreal.VariantPtr):cpp.UInt8;
public static function set_MaxBrightness(self:unreal.VariantPtr, value:cpp.UInt8):Void;
public static function get_MinBrightness(self:unreal.VariantPtr):cpp.UInt8;
public static function set_MinBrightness(self:unreal.VariantPtr, value:cpp.UInt8):Void;
public static function get_Alpha(self:unreal.VariantPtr):cpp.UInt8;
public static function set_Alpha(self:unreal.VariantPtr, value:cpp.UInt8):Void;
public static function get_Blue(self:unreal.VariantPtr):cpp.UInt8;
public static function set_Blue(self:unreal.VariantPtr, value:cpp.UInt8):Void;
public static function get_Green(self:unreal.VariantPtr):cpp.UInt8;
public static function set_Green(self:unreal.VariantPtr, value:cpp.UInt8):Void;
public static function get_Red(self:unreal.VariantPtr):cpp.UInt8;
public static function set_Red(self:unreal.VariantPtr, value:cpp.UInt8):Void;
public static function copyNew(self:unreal.VariantPtr):unreal.VariantPtr;
public static function copy(self:unreal.VariantPtr):unreal.VariantPtr;
public static function assign(self:unreal.VariantPtr, val:unreal.VariantPtr):Void;
public static function equals(self:unreal.VariantPtr, other:unreal.VariantPtr):Bool;
}