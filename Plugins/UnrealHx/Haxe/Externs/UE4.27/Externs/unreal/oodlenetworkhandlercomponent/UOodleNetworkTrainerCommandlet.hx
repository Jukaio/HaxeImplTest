/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.oodlenetworkhandlercomponent;

/**
  WARNING: This type was not defined as DLL export on its declaration. Because of that, some of its methods are inaccessible
  
  Commandlet for processing UE packet captures, through Oodle's training API, for generating compressed state dictionaries.
  
  
  Primary Commands:
      - "AutoGenerateDictionaries Changelist":
              - Iterates every directory recursively within "*Game*\Saved\Oodle\Server", and uses all capture files within each directory,
                      to generate a dictionary stored in "*Game*\Content\Oodle", named "*Game**DirectoryName*.udic".
  
              - For example, packet captures in "OrionGame\Saved\Oodle\Server\Input", will be generated into a dictionary stored in
                      "OrionGame\Content\Oodle\OrionGameInput.udic"
  
              - Each folder within "*Game*\Content\Oodle", should contain at least 100mb of packet captures.
  
              - Changelist is an optional parameter than will only use upac files that contain the changelist in their filenames. If
                      omitted, all files in the directory are used.
  
  
  Secondary/Testing Commands:
      - "Enable":
              - Inserts the Oodle PacketHandler into the games packet handler component list, and initializes Oodle *Engine.ini settings
  
  
      - "MergePackets OutputFile PacketFile1,PacketFile2,PacketFileN":
              - Takes the specified packet capture files, and merges them into a single packet capture file
  
      - "MergePackets OutputFile All Directory":
              - As above, but merges all capture files in the specified directory.
  
  
      - "GenerateDictionary OutputFile FilenameFilter Changelist PacketFile1,PacketFile2,PacketFileN":
              - Takes the specified packet capture files, with an optional filter for a substring of a filename and changelist filter
                      (use "all" to ignore either of these filters), and uses them to generate a network compression dictionary
  
      - "GenerateDictionary OutputFile FilenameFilter Changelist All Directory":
              - As above, but uses all capture files in the specified directory, to generate a network compression dictionary
  
  
      - "DebugDump OutputDirectory CaptureDirectory Changelist"
              - Recursively iterates all .ucap files in CaptureDirectory, and converts them to Oodle-example-code compatible .bin files,
                      in OutputDirectory
  
  
  @todo #JohnB: Unimplemented commands:
      - "PacketInfo PacketFile":
              - Outputs information about the packet file, such as the MB amount of data recorded, per net connection channel, and data types
              - @todo #JohnB: Only implement, if deciding to actually capture/track this kind of data
**/
@:umodule("OodleNetworkHandlerComponent")
@:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
@:noClass @:uextern @:uclass extern class UOodleNetworkTrainerCommandlet extends unreal.UCommandlet {
  
  /**
    Whether or not random-trials have been disabled
  **/
  @:uproperty public var bNoTrials : Bool;
  
  /**
    The number of generations of random packet-selection trials
  **/
  @:uproperty public var TrialGenerations : unreal.Int32;
  
  /**
    The randomness, in percent, of random packet-selection trials
  **/
  @:uproperty public var TrialRandomness : unreal.Int32;
  
  /**
    The number of random packet-selection trials to run, when generating the dictionary, to try and optimize the dictionary
  **/
  @:uproperty public var DictionaryTrials : unreal.Int32;
  
  /**
    Size of the dictionary to be generated
  **/
  @:uproperty public var DictionarySize : unreal.Int32;
  
  /**
    Size of the hash table to use for the dictionary
  **/
  @:uproperty public var HashTableSize : unreal.Int32;
  
  /**
    Whether or not compression testing should be performed after dictionary generation (uses up some of the packets)
  **/
  @:uproperty public var bCompressionTest : Bool;
  
}
