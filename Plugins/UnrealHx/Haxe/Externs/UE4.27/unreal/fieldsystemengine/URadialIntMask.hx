/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.fieldsystemengine;

/**
  This function first defines a radial integer field equal to Interior-value inside a sphere / Exterior-value outside. This field will be used alongside the particle input value and the mask condition to compute the particle output value.
**/
@:umodule("FieldSystemEngine")
@:glueCppIncludes("Field/FieldSystemObjects.h")
@:uextern @:uclass extern class URadialIntMask extends unreal.fieldsystemengine.UFieldNodeInt {
  
  /**
    If the mask condition is set to always the output value will be the intermediate one. If set to not interior/exterior the output value will be the intermediate one if the input is different from the interior/exterior value
  **/
  @:uproperty public var SetMaskCondition : unreal.chaos.ESetMaskConditionType;
  
  /**
    If the sample distance from the center is greater than radius, the intermediate value will be set the exterior value
  **/
  @:uproperty public var ExteriorValue : unreal.Int32;
  
  /**
    If the sample distance from the center is less than radius, the intermediate value will be set the interior value
  **/
  @:uproperty public var InteriorValue : unreal.Int32;
  
  /**
    Center position of the radial mask field
  **/
  @:uproperty public var Position : unreal.FVector;
  
  /**
    Radius of the radial mask field
  **/
  @:uproperty public var Radius : unreal.Float32;
  
  /**
    This function first defines a radial integer field equal to Interior-value inside a sphere / Exterior-value outside. This field will be used alongside the particle input value and the mask condition to compute the particle output value.
    - If Mask-condition = set-always : the particle output value will be equal to Interior-value if the particle position is inside a sphere / Exterior-value otherwise.
    - If Mask-condition = merge-interior : the particle output value will be equal to Interior-value if the particle position is inside the sphere or if the particle input value is already Interior-Value / Exterior-value otherwise.
    - If Mask-condition = merge-exterior : the particle output value will be equal to Exterior-value if the particle position is outside the sphere or if the particle input value is already Exterior-Value / Interior-value otherwise.
    @param    Radius Radius of the radial field
    @param    Position Center position of the radial field"
    @param    InteriorValue If the sample distance from the center is less than radius, the intermediate value will be set the interior value
    @param    ExteriorValue If the sample distance from the center is greater than radius, the intermediate value will be set the exterior value
    @param    SetMaskConditionIn If the mask condition is set to always the output value will be the intermediate one. If set to not interior/exterior the output value will be the intermediate one if the input is different from the interior/exterior value
  **/
  @:ufunction(BlueprintCallable) @:final public function SetRadialIntMask(Radius : unreal.Float32, Position : unreal.FVector, @:bpopt("1") InteriorValue : unreal.Int32, ExteriorValue : unreal.Int32, SetMaskConditionIn : unreal.chaos.ESetMaskConditionType) : unreal.fieldsystemengine.URadialIntMask;
  
}
