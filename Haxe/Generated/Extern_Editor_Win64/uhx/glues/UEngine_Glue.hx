// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/uengine.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UEngine_Glue {
public static function get_GEngine():unreal.UIntPtr;
public static function set_GEngine(value:unreal.UIntPtr):Void;
public static function get_GWorld():unreal.VariantPtr;
public static function set_GWorld(value:unreal.VariantPtr):Void;
public static function get_GIsRequestingExit():Bool;
public static function set_GIsRequestingExit(value:Bool):Void;
public static function IsRunningCommandlet():Bool;
public static function IsAsyncLoading():Bool;
public static function get_NextWorldContextHandle(self:unreal.UIntPtr):Int;
public static function set_NextWorldContextHandle(self:unreal.UIntPtr, value:Int):Void;
public static function get_bStartedLoadMapMovie(self:unreal.UIntPtr):Bool;
public static function set_bStartedLoadMapMovie(self:unreal.UIntPtr, value:Bool):Void;
public static function get_NetErrorLogInterval(self:unreal.UIntPtr):cpp.Float32;
public static function set_NetErrorLogInterval(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_RuntimeServerActors(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_RuntimeServerActors(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ServerActors(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ServerActors(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_NetDriverDefinitions(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_NetDriverDefinitions(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_SelectionHighlightIntensityBillboards(self:unreal.UIntPtr):cpp.Float32;
public static function set_SelectionHighlightIntensityBillboards(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_BSPSelectionHighlightIntensity(self:unreal.UIntPtr):cpp.Float32;
public static function set_BSPSelectionHighlightIntensity(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_SelectionHighlightIntensity(self:unreal.UIntPtr):cpp.Float32;
public static function set_SelectionHighlightIntensity(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ParticleEventManagerClassPath(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ParticleEventManagerClassPath(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bLockReadOnlyLevels(self:unreal.UIntPtr):Bool;
public static function set_bLockReadOnlyLevels(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableVisualLogRecordingOnStart(self:unreal.UIntPtr):cpp.UInt32;
public static function set_bEnableVisualLogRecordingOnStart(self:unreal.UIntPtr, value:cpp.UInt32):Void;
public static function get_bDisableAILogging(self:unreal.UIntPtr):Bool;
public static function set_bDisableAILogging(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bSuppressMapWarnings(self:unreal.UIntPtr):Bool;
public static function set_bSuppressMapWarnings(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableOnScreenDebugMessagesDisplay(self:unreal.UIntPtr):Bool;
public static function set_bEnableOnScreenDebugMessagesDisplay(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableOnScreenDebugMessages(self:unreal.UIntPtr):Bool;
public static function set_bEnableOnScreenDebugMessages(self:unreal.UIntPtr, value:Bool):Void;
public static function get_MinDesiredFrameRate(self:unreal.UIntPtr):cpp.Float32;
public static function set_MinDesiredFrameRate(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DisplayGamma(self:unreal.UIntPtr):cpp.Float32;
public static function set_DisplayGamma(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NetClientTicksPerSecond(self:unreal.UIntPtr):cpp.Float32;
public static function set_NetClientTicksPerSecond(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_PendingDroppedNotes(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PendingDroppedNotes(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MaxParticleResizeWarn(self:unreal.UIntPtr):Int;
public static function set_MaxParticleResizeWarn(self:unreal.UIntPtr, value:Int):Void;
public static function get_MaxParticleResize(self:unreal.UIntPtr):Int;
public static function set_MaxParticleResize(self:unreal.UIntPtr, value:Int):Void;
public static function get_bPauseOnLossOfFocus(self:unreal.UIntPtr):Bool;
public static function set_bPauseOnLossOfFocus(self:unreal.UIntPtr, value:Bool):Void;
public static function get_MaxOcclusionPixelsFraction(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxOcclusionPixelsFraction(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_PrimitiveProbablyVisibleTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_PrimitiveProbablyVisibleTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_CameraTranslationThreshold(self:unreal.UIntPtr):cpp.Float32;
public static function set_CameraTranslationThreshold(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_CameraRotationThreshold(self:unreal.UIntPtr):cpp.Float32;
public static function set_CameraRotationThreshold(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bAllowMatureLanguage(self:unreal.UIntPtr):Bool;
public static function set_bAllowMatureLanguage(self:unreal.UIntPtr, value:Bool):Void;
public static function get_TransitionGameMode(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_TransitionGameMode(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_TransitionDescription(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_TransitionDescription(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_TransitionType(self:unreal.UIntPtr):Int;
public static function set_TransitionType(self:unreal.UIntPtr, value:Int):Void;
public static function get_GameScreenshotSaveDirectory(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_GameScreenshotSaveDirectory(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_StreamingDistanceFactor(self:unreal.UIntPtr):cpp.Float32;
public static function set_StreamingDistanceFactor(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_C_BrushShape(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_C_BrushShape(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_C_Volume(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_C_Volume(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_C_OrthoBackground(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_C_OrthoBackground(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_C_BSPCollision(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_C_BSPCollision(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_C_VolumeCollision(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_C_VolumeCollision(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_C_ScaleBoxHi(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_C_ScaleBoxHi(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_C_WireBackground(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_C_WireBackground(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_C_NonSolidWire(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_C_NonSolidWire(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_C_SemiSolidWire(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_C_SemiSolidWire(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_C_SubtractWire(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_C_SubtractWire(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_C_AddWire(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_C_AddWire(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_C_BrushWire(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_C_BrushWire(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_C_WorldBox(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_C_WorldBox(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bShouldGenerateLowQualityLightmaps_DEPRECATED(self:unreal.UIntPtr):Bool;
public static function set_bShouldGenerateLowQualityLightmaps_DEPRECATED(self:unreal.UIntPtr, value:Bool):Void;
public static function get_NumPawnsAllowedToBeSpawnedInAFrame(self:unreal.UIntPtr):Int;
public static function set_NumPawnsAllowedToBeSpawnedInAFrame(self:unreal.UIntPtr, value:Int):Void;
public static function get_bCheckForMultiplePawnsSpawnedInAFrame(self:unreal.UIntPtr):Bool;
public static function set_bCheckForMultiplePawnsSpawnedInAFrame(self:unreal.UIntPtr, value:Bool):Void;
public static function get_GenerateDefaultTimecodeFrameDelay(self:unreal.UIntPtr):cpp.Float32;
public static function set_GenerateDefaultTimecodeFrameDelay(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_GenerateDefaultTimecodeFrameRate(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_GenerateDefaultTimecodeFrameRate(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bGenerateDefaultTimecode(self:unreal.UIntPtr):Bool;
public static function set_bGenerateDefaultTimecode(self:unreal.UIntPtr, value:Bool):Void;
public static function get_TimecodeProviderClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_TimecodeProviderClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_CustomTimeStepClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_CustomTimeStepClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_SmoothedFrameRateRange(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SmoothedFrameRateRange(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_FixedFrameRate(self:unreal.UIntPtr):cpp.Float32;
public static function set_FixedFrameRate(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bUseFixedFrameRate(self:unreal.UIntPtr):Bool;
public static function set_bUseFixedFrameRate(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bSmoothFrameRate(self:unreal.UIntPtr):Bool;
public static function set_bSmoothFrameRate(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableEditorPSysRealtimeLOD(self:unreal.UIntPtr):Bool;
public static function set_bEnableEditorPSysRealtimeLOD(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bAllowMultiThreadedAnimationUpdate(self:unreal.UIntPtr):Bool;
public static function set_bAllowMultiThreadedAnimationUpdate(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bOptimizeAnimBlueprintMemberVariableAccess(self:unreal.UIntPtr):Bool;
public static function set_bOptimizeAnimBlueprintMemberVariableAccess(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCanBlueprintsTickByDefault(self:unreal.UIntPtr):Bool;
public static function set_bCanBlueprintsTickByDefault(self:unreal.UIntPtr, value:Bool):Void;
public static function get_MaximumLoopIterationCount(self:unreal.UIntPtr):Int;
public static function set_MaximumLoopIterationCount(self:unreal.UIntPtr, value:Int):Void;
public static function get_bSubtitlesForcedOff(self:unreal.UIntPtr):Bool;
public static function set_bSubtitlesForcedOff(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bSubtitlesEnabled(self:unreal.UIntPtr):Bool;
public static function set_bSubtitlesEnabled(self:unreal.UIntPtr, value:Bool):Void;
public static function get_NearClipPlane(self:unreal.UIntPtr):cpp.Float32;
public static function set_NearClipPlane(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DeferredCommands(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DeferredCommands(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_GameViewport(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_GameViewport(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_LightMapDensityTextureName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LightMapDensityTextureName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LightMapDensityTexture(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_LightMapDensityTexture(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_WeightMapPlaceholderTextureName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_WeightMapPlaceholderTextureName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_WeightMapPlaceholderTexture(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_WeightMapPlaceholderTexture(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_MiniFontTextureName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_MiniFontTextureName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MiniFontTexture(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_MiniFontTexture(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_BlueNoiseTextureName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_BlueNoiseTextureName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_BlueNoiseTexture(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_BlueNoiseTexture(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_PreIntegratedSkinBRDFTextureName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PreIntegratedSkinBRDFTextureName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PreIntegratedSkinBRDFTexture(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PreIntegratedSkinBRDFTexture(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ActiveStructRedirects(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ActiveStructRedirects(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ActivePluginRedirects(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ActivePluginRedirects(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ActiveClassRedirects(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ActiveClassRedirects(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ActiveGameNameRedirects(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ActiveGameNameRedirects(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DefaultPhysMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DefaultPhysMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DefaultPhysMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_DefaultPhysMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_EditorBrushMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_EditorBrushMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_EditorBrushMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_EditorBrushMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_StatColorMappings(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_StatColorMappings(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LightMapDensitySelectedColor(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LightMapDensitySelectedColor(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LightMapDensityVertexMappedColor(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LightMapDensityVertexMappedColor(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_RenderLightMapDensityColorScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_RenderLightMapDensityColorScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_RenderLightMapDensityGrayscaleScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_RenderLightMapDensityGrayscaleScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bRenderLightMapDensityGrayscale(self:unreal.UIntPtr):Bool;
public static function set_bRenderLightMapDensityGrayscale(self:unreal.UIntPtr, value:Bool):Void;
public static function get_MaxLightMapDensity(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxLightMapDensity(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_IdealLightMapDensity(self:unreal.UIntPtr):cpp.Float32;
public static function set_IdealLightMapDensity(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MinLightMapDensity(self:unreal.UIntPtr):cpp.Float32;
public static function set_MinLightMapDensity(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxES3PixelShaderAdditiveComplexityCount(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxES3PixelShaderAdditiveComplexityCount(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxPixelShaderAdditiveComplexityCount(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxPixelShaderAdditiveComplexityCount(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_StreamingAccuracyColors(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_StreamingAccuracyColors(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_HLODColorationColors(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_HLODColorationColors(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LODColorationColors(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LODColorationColors(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_StationaryLightOverlapColors(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_StationaryLightOverlapColors(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LightComplexityColors(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LightComplexityColors(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_QuadComplexityColors(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_QuadComplexityColors(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ShaderComplexityColors(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ShaderComplexityColors(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LightingOnlyBrightness(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LightingOnlyBrightness(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ArrowMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ArrowMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ArrowMaterialYellow(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ArrowMaterialYellow(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ArrowMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ArrowMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_PreviewShadowsIndicatorMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PreviewShadowsIndicatorMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PreviewShadowsIndicatorMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PreviewShadowsIndicatorMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_InvalidLightmapSettingsMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_InvalidLightmapSettingsMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_InvalidLightmapSettingsMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_InvalidLightmapSettingsMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ConstraintLimitMaterialPrismatic(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ConstraintLimitMaterialPrismatic(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ConstraintLimitMaterialZAxis(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ConstraintLimitMaterialZAxis(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ConstraintLimitMaterialZ(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ConstraintLimitMaterialZ(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ConstraintLimitMaterialYAxis(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ConstraintLimitMaterialYAxis(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ConstraintLimitMaterialY(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ConstraintLimitMaterialY(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ConstraintLimitMaterialXAxis(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ConstraintLimitMaterialXAxis(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ConstraintLimitMaterialX(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ConstraintLimitMaterialX(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ConstraintLimitMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ConstraintLimitMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_DebugEditorMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DebugEditorMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DebugEditorMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_DebugEditorMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_PhysicalMaterialMaskMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PhysicalMaterialMaskMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PhysicalMaterialMaskMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PhysicalMaterialMaskMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ClothPaintMaterialWireframeName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ClothPaintMaterialWireframeName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ClothPaintMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ClothPaintMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ClothPaintMaterialWireframeInstance(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ClothPaintMaterialWireframeInstance(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ClothPaintMaterialInstance(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ClothPaintMaterialInstance(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ClothPaintMaterialWireframe(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ClothPaintMaterialWireframe(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ClothPaintMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ClothPaintMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_BoneWeightMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_BoneWeightMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_BoneWeightMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_BoneWeightMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_VertexColorViewModeMaterialName_BlueOnly(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_VertexColorViewModeMaterialName_BlueOnly(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_VertexColorViewModeMaterial_BlueOnly(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_VertexColorViewModeMaterial_BlueOnly(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_VertexColorViewModeMaterialName_GreenOnly(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_VertexColorViewModeMaterialName_GreenOnly(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_VertexColorViewModeMaterial_GreenOnly(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_VertexColorViewModeMaterial_GreenOnly(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_VertexColorViewModeMaterialName_RedOnly(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_VertexColorViewModeMaterialName_RedOnly(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_VertexColorViewModeMaterial_RedOnly(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_VertexColorViewModeMaterial_RedOnly(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_VertexColorViewModeMaterialName_AlphaAsColor(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_VertexColorViewModeMaterialName_AlphaAsColor(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_VertexColorViewModeMaterial_AlphaAsColor(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_VertexColorViewModeMaterial_AlphaAsColor(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_VertexColorViewModeMaterialName_ColorOnly(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_VertexColorViewModeMaterialName_ColorOnly(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_VertexColorViewModeMaterial_ColorOnly(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_VertexColorViewModeMaterial_ColorOnly(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_VertexColorMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_VertexColorMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_VertexColorMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_VertexColorMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_RemoveSurfaceMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_RemoveSurfaceMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_RemoveSurfaceMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_RemoveSurfaceMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ShadedLevelColorationUnlitMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ShadedLevelColorationUnlitMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ShadedLevelColorationUnlitMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ShadedLevelColorationUnlitMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ShadedLevelColorationLitMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ShadedLevelColorationLitMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ShadedLevelColorationLitMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ShadedLevelColorationLitMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_LightingTexelDensityName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LightingTexelDensityName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LightingTexelDensityMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_LightingTexelDensityMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_LevelColorationUnlitMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LevelColorationUnlitMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LevelColorationUnlitMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_LevelColorationUnlitMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_LevelColorationLitMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LevelColorationLitMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LevelColorationLitMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_LevelColorationLitMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_EmissiveMeshMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_EmissiveMeshMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_EmissiveMeshMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_EmissiveMeshMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_DebugMeshMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DebugMeshMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DebugMeshMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_DebugMeshMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_GeomMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_GeomMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_GeomMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_GeomMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_WireframeMaterialName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_WireframeMaterialName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_WireframeMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_WireframeMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_DefaultBloomKernelTextureName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DefaultBloomKernelTextureName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DefaultBloomKernelTexture(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_DefaultBloomKernelTexture(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_DefaultBokehTextureName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DefaultBokehTextureName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DefaultBokehTexture(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_DefaultBokehTexture(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_HighFrequencyNoiseTextureName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_HighFrequencyNoiseTextureName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_HighFrequencyNoiseTexture(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_HighFrequencyNoiseTexture(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_DefaultBSPVertexTextureName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DefaultBSPVertexTextureName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DefaultBSPVertexTexture(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_DefaultBSPVertexTexture(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_DefaultDiffuseTextureName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DefaultDiffuseTextureName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DefaultDiffuseTexture(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_DefaultDiffuseTexture(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_DefaultTextureName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DefaultTextureName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DefaultTexture(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_DefaultTexture(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_AssetManager(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_AssetManager(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_AssetManagerClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_AssetManagerClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_GameSingleton(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_GameSingleton(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_GameSingletonClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_GameSingletonClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DefaultBlueprintBaseClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DefaultBlueprintBaseClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LevelScriptActorClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LevelScriptActorClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LevelScriptActorClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_LevelScriptActorClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_GameUserSettings(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_GameUserSettings(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_GameUserSettingsClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_GameUserSettingsClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_GameUserSettingsClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_GameUserSettingsClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PhysicsCollisionHandlerClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PhysicsCollisionHandlerClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PhysicsCollisionHandlerClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PhysicsCollisionHandlerClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_AIControllerClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_AIControllerClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_AvoidanceManagerClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_AvoidanceManagerClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_AvoidanceManagerClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_AvoidanceManagerClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_NavigationSystemConfigClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_NavigationSystemConfigClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_NavigationSystemConfigClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_NavigationSystemConfigClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_NavigationSystemClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_NavigationSystemClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_NavigationSystemClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_NavigationSystemClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_WorldSettingsClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_WorldSettingsClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_WorldSettingsClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_WorldSettingsClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_LocalPlayerClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LocalPlayerClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LocalPlayerClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_LocalPlayerClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_GameViewportClientClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_GameViewportClientClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_GameViewportClientClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_GameViewportClientClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ConsoleClassName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ConsoleClassName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ConsoleClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ConsoleClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_AdditionalFontNames(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_AdditionalFontNames(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_SubtitleFontName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SubtitleFontName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LargeFontName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LargeFontName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MediumFontName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_MediumFontName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_SmallFontName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SmallFontName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_TinyFontName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_TinyFontName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bForceDisableFrameRateSmoothing(self:unreal.UIntPtr):Bool;
public static function set_bForceDisableFrameRateSmoothing(self:unreal.UIntPtr, value:Bool):Void;
public static function GetAllLocalPlayerControllers(self:unreal.UIntPtr, PlayerList:unreal.VariantPtr):Void;
public static function GetFirstLocalPlayerController(self:unreal.UIntPtr, world:unreal.UIntPtr):unreal.UIntPtr;
public static function OnTravelFailure(self:unreal.UIntPtr):unreal.VariantPtr;
public static function OnNetworkFailure(self:unreal.UIntPtr):unreal.VariantPtr;
public static function HandleDisconnect(self:unreal.UIntPtr, World:unreal.UIntPtr, NetDriver:unreal.UIntPtr):Void;
public static function GetWorldContextFromWorld(self:unreal.UIntPtr, InWorld:unreal.UIntPtr):unreal.VariantPtr;
public static function GetWorldContextFromWorldChecked(self:unreal.UIntPtr, InWorld:unreal.UIntPtr):unreal.VariantPtr;
public static function GetWorldContexts(self:unreal.UIntPtr):unreal.VariantPtr;
public static function GetMainAudioDevice(self:unreal.UIntPtr):unreal.VariantPtr;
public static function GetGameUserSettings(self:unreal.UIntPtr):unreal.UIntPtr;
public static function BlockTillLevelStreamingCompleted(self:unreal.UIntPtr, InWorld:unreal.UIntPtr):Void;
public static function get_TravelFailureEvent(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_TravelFailureEvent(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function UseSound(self:unreal.UIntPtr):Bool;
public static function GetNetMode(self:unreal.UIntPtr, World:unreal.UIntPtr):Int;
public static function Exec(self:unreal.UIntPtr, InWorld:unreal.UIntPtr, Cmd:unreal.UIntPtr, Out:unreal.VariantPtr):Bool;
public static function GetWorldFromContextObject(self:unreal.UIntPtr, obj:unreal.UIntPtr, bChecked:Bool):unreal.UIntPtr;
public static function AddOnScreenDebugMessage(self:unreal.UIntPtr, Key:Int, TimeToDisplay:cpp.Float32, DisplayColor:unreal.VariantPtr, DebugMessage:unreal.VariantPtr):Void;
public static function OnScreenDebugMessageExists(self:unreal.UIntPtr, Key:unreal.FakeUInt64):Bool;
public static function ClearOnScreenDebugMessages(self:unreal.UIntPtr):Void;
public static function ForceGarbageCollection(self:unreal.UIntPtr, bFullPurge:Bool):Void;
public static function StaticClass():unreal.UIntPtr;
}