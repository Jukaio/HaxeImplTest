// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/fbodyinstance.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class FBodyInstance_Glue {
public static function get_PhysicsBlendWeight(self:unreal.VariantPtr):cpp.Float32;
public static function set_PhysicsBlendWeight(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_StabilizationThresholdMultiplier(self:unreal.VariantPtr):cpp.Float32;
public static function set_StabilizationThresholdMultiplier(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_CustomSleepThresholdMultiplier(self:unreal.VariantPtr):cpp.Float32;
public static function set_CustomSleepThresholdMultiplier(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_MaxAngularVelocity(self:unreal.VariantPtr):cpp.Float32;
public static function set_MaxAngularVelocity(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_PhysMaterialOverride(self:unreal.VariantPtr):unreal.UIntPtr;
public static function set_PhysMaterialOverride(self:unreal.VariantPtr, value:unreal.UIntPtr):Void;
public static function get_WalkableSlopeOverride(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_WalkableSlopeOverride(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_InertiaTensorScale(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_InertiaTensorScale(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_MassScale(self:unreal.VariantPtr):cpp.Float32;
public static function set_MassScale(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_COMNudge(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_COMNudge(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_CustomDOFPlaneNormal(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_CustomDOFPlaneNormal(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_AngularDamping(self:unreal.VariantPtr):cpp.Float32;
public static function set_AngularDamping(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_LinearDamping(self:unreal.VariantPtr):cpp.Float32;
public static function set_LinearDamping(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_MassInKgOverride(self:unreal.VariantPtr):cpp.Float32;
public static function set_MassInKgOverride(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_MaxDepenetrationVelocity(self:unreal.VariantPtr):cpp.Float32;
public static function set_MaxDepenetrationVelocity(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_VelocitySolverIterationCount(self:unreal.VariantPtr):cpp.UInt8;
public static function set_VelocitySolverIterationCount(self:unreal.VariantPtr, value:cpp.UInt8):Void;
public static function get_PositionSolverIterationCount(self:unreal.VariantPtr):cpp.UInt8;
public static function set_PositionSolverIterationCount(self:unreal.VariantPtr, value:cpp.UInt8):Void;
public static function get_ResponseToChannels_DEPRECATED(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_ResponseToChannels_DEPRECATED(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_bOverrideMaxAngularVelocity(self:unreal.VariantPtr):Bool;
public static function set_bOverrideMaxAngularVelocity(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bLockZRotation(self:unreal.VariantPtr):Bool;
public static function set_bLockZRotation(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bLockYRotation(self:unreal.VariantPtr):Bool;
public static function set_bLockYRotation(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bLockXRotation(self:unreal.VariantPtr):Bool;
public static function set_bLockXRotation(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bLockZTranslation(self:unreal.VariantPtr):Bool;
public static function set_bLockZTranslation(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bLockYTranslation(self:unreal.VariantPtr):Bool;
public static function set_bLockYTranslation(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bLockXTranslation(self:unreal.VariantPtr):Bool;
public static function set_bLockXTranslation(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bLockRotation(self:unreal.VariantPtr):Bool;
public static function set_bLockRotation(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bLockTranslation(self:unreal.VariantPtr):Bool;
public static function set_bLockTranslation(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bNotifyRigidBodyCollision(self:unreal.VariantPtr):Bool;
public static function set_bNotifyRigidBodyCollision(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bIgnoreAnalyticCollisions(self:unreal.VariantPtr):Bool;
public static function set_bIgnoreAnalyticCollisions(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bUseCCD(self:unreal.VariantPtr):Bool;
public static function set_bUseCCD(self:unreal.VariantPtr, value:Bool):Void;
public static function get_DOFMode(self:unreal.VariantPtr):Int;
public static function set_DOFMode(self:unreal.VariantPtr, value:Int):Void;
public static function get_SleepFamily(self:unreal.VariantPtr):Int;
public static function set_SleepFamily(self:unreal.VariantPtr, value:Int):Void;
public static function equals(self:unreal.VariantPtr, other:unreal.VariantPtr):Bool;
}