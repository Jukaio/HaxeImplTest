// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/ucharactermovementcomponent.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UCharacterMovementComponent_Glue {
public static function get_AnimRootMotionVelocity(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_AnimRootMotionVelocity(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_RootMotionParams(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_RootMotionParams(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ServerCorrectionRootMotion(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ServerCorrectionRootMotion(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_CurrentRootMotion(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_CurrentRootMotion(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MinTimeBetweenTimeStampResets(self:unreal.UIntPtr):cpp.Float32;
public static function set_MinTimeBetweenTimeStampResets(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_PostPhysicsTickFunction(self:unreal.UIntPtr):unreal.VariantPtr;
public static function get_NavWalkingFloorDistTolerance(self:unreal.UIntPtr):cpp.Float32;
public static function set_NavWalkingFloorDistTolerance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NavMeshProjectionHeightScaleDown(self:unreal.UIntPtr):cpp.Float32;
public static function set_NavMeshProjectionHeightScaleDown(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NavMeshProjectionHeightScaleUp(self:unreal.UIntPtr):cpp.Float32;
public static function set_NavMeshProjectionHeightScaleUp(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NavMeshProjectionInterpSpeed(self:unreal.UIntPtr):cpp.Float32;
public static function set_NavMeshProjectionInterpSpeed(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NavMeshProjectionTimer(self:unreal.UIntPtr):cpp.Float32;
public static function set_NavMeshProjectionTimer(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NavMeshProjectionInterval(self:unreal.UIntPtr):cpp.Float32;
public static function set_NavMeshProjectionInterval(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_PendingLaunchVelocity(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PendingLaunchVelocity(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_AvoidanceWeight(self:unreal.UIntPtr):cpp.Float32;
public static function set_AvoidanceWeight(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_GroupsToIgnore(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_GroupsToIgnore(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_GroupsToAvoid(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_GroupsToAvoid(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_AvoidanceGroup(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_AvoidanceGroup(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_AvoidanceUID(self:unreal.UIntPtr):Int;
public static function set_AvoidanceUID(self:unreal.UIntPtr, value:Int):Void;
public static function get_RequestedVelocity(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_RequestedVelocity(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_AvoidanceConsiderationRadius(self:unreal.UIntPtr):cpp.Float32;
public static function set_AvoidanceConsiderationRadius(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bAllowPhysicsRotationDuringAnimRootMotion(self:unreal.UIntPtr):Bool;
public static function set_bAllowPhysicsRotationDuringAnimRootMotion(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bWasSimulatingRootMotion(self:unreal.UIntPtr):Bool;
public static function set_bWasSimulatingRootMotion(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bRequestedMoveUseAcceleration(self:unreal.UIntPtr):Bool;
public static function set_bRequestedMoveUseAcceleration(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseRVOAvoidance(self:unreal.UIntPtr):Bool;
public static function set_bUseRVOAvoidance(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bWantsToLeaveNavWalking(self:unreal.UIntPtr):Bool;
public static function set_bWantsToLeaveNavWalking(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bPerformingJumpOff(self:unreal.UIntPtr):Bool;
public static function set_bPerformingJumpOff(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseFlatBaseForFloorChecks(self:unreal.UIntPtr):Bool;
public static function set_bUseFlatBaseForFloorChecks(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bAlwaysCheckFloor(self:unreal.UIntPtr):Bool;
public static function set_bAlwaysCheckFloor(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bFastAttachedMove(self:unreal.UIntPtr):Bool;
public static function set_bFastAttachedMove(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bIgnoreBaseRotation(self:unreal.UIntPtr):Bool;
public static function set_bIgnoreBaseRotation(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCrouchMaintainsBaseLocation(self:unreal.UIntPtr):Bool;
public static function set_bCrouchMaintainsBaseLocation(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bWantsToCrouch(self:unreal.UIntPtr):Bool;
public static function set_bWantsToCrouch(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCheatFlying(self:unreal.UIntPtr):Bool;
public static function set_bCheatFlying(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bNotifyApex(self:unreal.UIntPtr):Bool;
public static function set_bNotifyApex(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bServerAcceptClientAuthoritativePosition(self:unreal.UIntPtr):Bool;
public static function set_bServerAcceptClientAuthoritativePosition(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bIgnoreClientMovementErrorChecksAndCorrection(self:unreal.UIntPtr):Bool;
public static function set_bIgnoreClientMovementErrorChecksAndCorrection(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bNetworkMovementModeChanged(self:unreal.UIntPtr):Bool;
public static function set_bNetworkMovementModeChanged(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bNetworkUpdateReceived(self:unreal.UIntPtr):Bool;
public static function set_bNetworkUpdateReceived(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bJustTeleported(self:unreal.UIntPtr):Bool;
public static function set_bJustTeleported(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bImpartBaseAngularVelocity(self:unreal.UIntPtr):Bool;
public static function set_bImpartBaseAngularVelocity(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bImpartBaseVelocityZ(self:unreal.UIntPtr):Bool;
public static function set_bImpartBaseVelocityZ(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bImpartBaseVelocityY(self:unreal.UIntPtr):Bool;
public static function set_bImpartBaseVelocityY(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bImpartBaseVelocityX(self:unreal.UIntPtr):Bool;
public static function set_bImpartBaseVelocityX(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bMaintainHorizontalGroundVelocity(self:unreal.UIntPtr):Bool;
public static function set_bMaintainHorizontalGroundVelocity(self:unreal.UIntPtr, value:Bool):Void;
public static function get_DefaultWaterMovementMode(self:unreal.UIntPtr):Int;
public static function set_DefaultWaterMovementMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_DefaultLandMovementMode(self:unreal.UIntPtr):Int;
public static function set_DefaultLandMovementMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_CurrentFloor(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_CurrentFloor(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_JumpOutOfWaterPitch(self:unreal.UIntPtr):cpp.Float32;
public static function set_JumpOutOfWaterPitch(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LedgeCheckThreshold(self:unreal.UIntPtr):cpp.Float32;
public static function set_LedgeCheckThreshold(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NetworkLargeClientCorrectionDistance(self:unreal.UIntPtr):cpp.Float32;
public static function set_NetworkLargeClientCorrectionDistance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NetworkMinTimeBetweenClientAdjustmentsLargeCorrection(self:unreal.UIntPtr):cpp.Float32;
public static function set_NetworkMinTimeBetweenClientAdjustmentsLargeCorrection(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NetworkMinTimeBetweenClientAdjustments(self:unreal.UIntPtr):cpp.Float32;
public static function set_NetworkMinTimeBetweenClientAdjustments(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NetworkMinTimeBetweenClientAckGoodMoves(self:unreal.UIntPtr):cpp.Float32;
public static function set_NetworkMinTimeBetweenClientAckGoodMoves(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NetworkNoSmoothUpdateDistance(self:unreal.UIntPtr):cpp.Float32;
public static function set_NetworkNoSmoothUpdateDistance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NetworkMaxSmoothUpdateDistance(self:unreal.UIntPtr):cpp.Float32;
public static function set_NetworkMaxSmoothUpdateDistance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NetProxyShrinkHalfHeight(self:unreal.UIntPtr):cpp.Float32;
public static function set_NetProxyShrinkHalfHeight(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NetProxyShrinkRadius(self:unreal.UIntPtr):cpp.Float32;
public static function set_NetProxyShrinkRadius(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ListenServerNetworkSimulatedSmoothRotationTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_ListenServerNetworkSimulatedSmoothRotationTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ListenServerNetworkSimulatedSmoothLocationTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_ListenServerNetworkSimulatedSmoothLocationTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NetworkSimulatedSmoothRotationTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_NetworkSimulatedSmoothRotationTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NetworkSimulatedSmoothLocationTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_NetworkSimulatedSmoothLocationTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxDepenetrationWithPawnAsProxy(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxDepenetrationWithPawnAsProxy(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxDepenetrationWithPawn(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxDepenetrationWithPawn(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxDepenetrationWithGeometryAsProxy(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxDepenetrationWithGeometryAsProxy(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxDepenetrationWithGeometry(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxDepenetrationWithGeometry(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxJumpApexAttemptsPerSimulation(self:unreal.UIntPtr):Int;
public static function set_MaxJumpApexAttemptsPerSimulation(self:unreal.UIntPtr, value:Int):Void;
public static function get_MaxSimulationIterations(self:unreal.UIntPtr):Int;
public static function set_MaxSimulationIterations(self:unreal.UIntPtr, value:Int):Void;
public static function get_MaxSimulationTimeStep(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxSimulationTimeStep(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_AnalogInputModifier(self:unreal.UIntPtr):cpp.Float32;
public static function set_AnalogInputModifier(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_PendingForceToApply(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PendingForceToApply(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PendingImpulseToApply(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PendingImpulseToApply(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ServerLastClientAdjustmentTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_ServerLastClientAdjustmentTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ServerLastClientGoodMoveAckTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_ServerLastClientGoodMoveAckTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ServerLastTransformUpdateTimeStamp(self:unreal.UIntPtr):cpp.Float32;
public static function set_ServerLastTransformUpdateTimeStamp(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LastUpdateVelocity(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LastUpdateVelocity(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LastUpdateLocation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LastUpdateLocation(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LastUpdateRotation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LastUpdateRotation(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_Acceleration(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_Acceleration(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_UpperImpactNormalScale_DEPRECATED(self:unreal.UIntPtr):cpp.Float32;
public static function set_UpperImpactNormalScale_DEPRECATED(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_CrouchedSpeedMultiplier_DEPRECATED(self:unreal.UIntPtr):cpp.Float32;
public static function set_CrouchedSpeedMultiplier_DEPRECATED(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bForceBraking_DEPRECATED(self:unreal.UIntPtr):Bool;
public static function set_bForceBraking_DEPRECATED(self:unreal.UIntPtr, value:Bool):Void;
public static function get_RepulsionForce(self:unreal.UIntPtr):cpp.Float32;
public static function set_RepulsionForce(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxTouchForce(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxTouchForce(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MinTouchForce(self:unreal.UIntPtr):cpp.Float32;
public static function set_MinTouchForce(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_TouchForceFactor(self:unreal.UIntPtr):cpp.Float32;
public static function set_TouchForceFactor(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_PushForcePointZOffsetFactor(self:unreal.UIntPtr):cpp.Float32;
public static function set_PushForcePointZOffsetFactor(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_PushForceFactor(self:unreal.UIntPtr):cpp.Float32;
public static function set_PushForceFactor(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_InitialPushForceFactor(self:unreal.UIntPtr):cpp.Float32;
public static function set_InitialPushForceFactor(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_StandingDownwardForceScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_StandingDownwardForceScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_Mass(self:unreal.UIntPtr):cpp.Float32;
public static function set_Mass(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_OutofWaterZ(self:unreal.UIntPtr):cpp.Float32;
public static function set_OutofWaterZ(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxOutOfWaterStepHeight(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxOutOfWaterStepHeight(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DeferredUpdatedMoveComponent(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_DeferredUpdatedMoveComponent(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_bScalePushForceToVelocity(self:unreal.UIntPtr):Bool;
public static function set_bScalePushForceToVelocity(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bPushForceUsingZOffset(self:unreal.UIntPtr):Bool;
public static function set_bPushForceUsingZOffset(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bPushForceScaledToMass(self:unreal.UIntPtr):Bool;
public static function set_bPushForceScaledToMass(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bTouchForceScaledToMass(self:unreal.UIntPtr):Bool;
public static function set_bTouchForceScaledToMass(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnablePhysicsInteraction(self:unreal.UIntPtr):Bool;
public static function set_bEnablePhysicsInteraction(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bDeferUpdateMoveComponent(self:unreal.UIntPtr):Bool;
public static function set_bDeferUpdateMoveComponent(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bNetworkAlwaysReplicateTransformUpdateTimestamp(self:unreal.UIntPtr):Bool;
public static function set_bNetworkAlwaysReplicateTransformUpdateTimestamp(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bNetworkSkipProxyPredictionOnNetUpdate(self:unreal.UIntPtr):Bool;
public static function set_bNetworkSkipProxyPredictionOnNetUpdate(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCanWalkOffLedgesWhenCrouching(self:unreal.UIntPtr):Bool;
public static function set_bCanWalkOffLedgesWhenCrouching(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCanWalkOffLedges(self:unreal.UIntPtr):Bool;
public static function set_bCanWalkOffLedges(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bShrinkProxyCapsule(self:unreal.UIntPtr):Bool;
public static function set_bShrinkProxyCapsule(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bForceNextFloorCheck(self:unreal.UIntPtr):Bool;
public static function set_bForceNextFloorCheck(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bRunPhysicsWithNoController(self:unreal.UIntPtr):Bool;
public static function set_bRunPhysicsWithNoController(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bForceMaxAccel(self:unreal.UIntPtr):Bool;
public static function set_bForceMaxAccel(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableServerDualMoveScopedMovementUpdates(self:unreal.UIntPtr):Bool;
public static function set_bEnableServerDualMoveScopedMovementUpdates(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableScopedMovementUpdates(self:unreal.UIntPtr):Bool;
public static function set_bEnableScopedMovementUpdates(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bSweepWhileNavWalking(self:unreal.UIntPtr):Bool;
public static function set_bSweepWhileNavWalking(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bOrientRotationToMovement(self:unreal.UIntPtr):Bool;
public static function set_bOrientRotationToMovement(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseControllerDesiredRotation(self:unreal.UIntPtr):Bool;
public static function set_bUseControllerDesiredRotation(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bApplyGravityWhileJumping(self:unreal.UIntPtr):Bool;
public static function set_bApplyGravityWhileJumping(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseSeparateBrakingFriction(self:unreal.UIntPtr):Bool;
public static function set_bUseSeparateBrakingFriction(self:unreal.UIntPtr, value:Bool):Void;
public static function get_RotationRate(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_RotationRate(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PerchAdditionalHeight(self:unreal.UIntPtr):cpp.Float32;
public static function set_PerchAdditionalHeight(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_PerchRadiusThreshold(self:unreal.UIntPtr):cpp.Float32;
public static function set_PerchRadiusThreshold(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_Buoyancy(self:unreal.UIntPtr):cpp.Float32;
public static function set_Buoyancy(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_CrouchedHalfHeight(self:unreal.UIntPtr):cpp.Float32;
public static function set_CrouchedHalfHeight(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_FallingLateralFriction(self:unreal.UIntPtr):cpp.Float32;
public static function set_FallingLateralFriction(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_AirControlBoostVelocityThreshold(self:unreal.UIntPtr):cpp.Float32;
public static function set_AirControlBoostVelocityThreshold(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_AirControlBoostMultiplier(self:unreal.UIntPtr):cpp.Float32;
public static function set_AirControlBoostMultiplier(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_AirControl(self:unreal.UIntPtr):cpp.Float32;
public static function set_AirControl(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_BrakingDecelerationFlying(self:unreal.UIntPtr):cpp.Float32;
public static function set_BrakingDecelerationFlying(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_BrakingDecelerationSwimming(self:unreal.UIntPtr):cpp.Float32;
public static function set_BrakingDecelerationSwimming(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_BrakingDecelerationFalling(self:unreal.UIntPtr):cpp.Float32;
public static function set_BrakingDecelerationFalling(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_BrakingDecelerationWalking(self:unreal.UIntPtr):cpp.Float32;
public static function set_BrakingDecelerationWalking(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_BrakingSubStepTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_BrakingSubStepTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_BrakingFriction(self:unreal.UIntPtr):cpp.Float32;
public static function set_BrakingFriction(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_BrakingFrictionFactor(self:unreal.UIntPtr):cpp.Float32;
public static function set_BrakingFrictionFactor(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MinAnalogWalkSpeed(self:unreal.UIntPtr):cpp.Float32;
public static function set_MinAnalogWalkSpeed(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxAcceleration(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxAcceleration(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxCustomMovementSpeed(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxCustomMovementSpeed(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxFlySpeed(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxFlySpeed(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxSwimSpeed(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxSwimSpeed(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxWalkSpeedCrouched(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxWalkSpeedCrouched(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxWalkSpeed(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxWalkSpeed(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_GroundFriction(self:unreal.UIntPtr):cpp.Float32;
public static function set_GroundFriction(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NetworkSmoothingMode(self:unreal.UIntPtr):Int;
public static function set_NetworkSmoothingMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_CustomMovementMode(self:unreal.UIntPtr):cpp.UInt8;
public static function set_CustomMovementMode(self:unreal.UIntPtr, value:cpp.UInt8):Void;
public static function get_MovementMode(self:unreal.UIntPtr):Int;
public static function set_MovementMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_JumpOffJumpZFactor(self:unreal.UIntPtr):cpp.Float32;
public static function set_JumpOffJumpZFactor(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_JumpZVelocity(self:unreal.UIntPtr):cpp.Float32;
public static function set_JumpZVelocity(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxStepHeight(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxStepHeight(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_GravityScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_GravityScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_CharacterOwner(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_CharacterOwner(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function GetLastUpdateLocation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function GetLastUpdateRotation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function GetLastUpdateVelocity(self:unreal.UIntPtr):unreal.VariantPtr;
public static function SetAvoidanceGroup(self:unreal.UIntPtr, GroupFlags:Int):Void;
public static function SetAvoidanceGroupMask(self:unreal.UIntPtr, GroupMask:unreal.VariantPtr):Void;
public static function SetGroupsToAvoid(self:unreal.UIntPtr, GroupFlags:Int):Void;
public static function SetGroupsToAvoidMask(self:unreal.UIntPtr, GroupMask:unreal.VariantPtr):Void;
public static function SetGroupsToIgnore(self:unreal.UIntPtr, GroupFlags:Int):Void;
public static function SetGroupsToIgnoreMask(self:unreal.UIntPtr, GroupMask:unreal.VariantPtr):Void;
public static function SetAvoidanceEnabled(self:unreal.UIntPtr, bEnable:Bool):Void;
public static function GetCharacterOwner(self:unreal.UIntPtr):unreal.UIntPtr;
public static function SetMovementMode(self:unreal.UIntPtr, NewMovementMode:Int, NewCustomMode:cpp.UInt8):Void;
public static function IsWalking(self:unreal.UIntPtr):Bool;
public static function DisableMovement(self:unreal.UIntPtr):Void;
public static function GetMovementBase(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GetImpartedMovementBaseVelocity(self:unreal.UIntPtr):unreal.VariantPtr;
public static function CalcVelocity(self:unreal.UIntPtr, DeltaTime:cpp.Float32, Friction:cpp.Float32, bFluid:Bool, BrakingDeceleration:cpp.Float32):Void;
public static function GetMaxJumpHeight(self:unreal.UIntPtr):cpp.Float32;
public static function GetMaxJumpHeightWithJumpTime(self:unreal.UIntPtr):cpp.Float32;
public static function GetMinAnalogSpeed(self:unreal.UIntPtr):cpp.Float32;
public static function K2_GetModifiedMaxAcceleration(self:unreal.UIntPtr):cpp.Float32;
public static function GetMaxAcceleration(self:unreal.UIntPtr):cpp.Float32;
public static function GetMaxBrakingDeceleration(self:unreal.UIntPtr):cpp.Float32;
public static function GetCurrentAcceleration(self:unreal.UIntPtr):unreal.VariantPtr;
public static function GetAnalogInputModifier(self:unreal.UIntPtr):cpp.Float32;
public static function ClearAccumulatedForces(self:unreal.UIntPtr):Void;
public static function AddImpulse(self:unreal.UIntPtr, Impulse:unreal.VariantPtr, bVelocityChange:Bool):Void;
public static function AddForce(self:unreal.UIntPtr, Force:unreal.VariantPtr):Void;
public static function GetPerchRadiusThreshold(self:unreal.UIntPtr):cpp.Float32;
public static function GetValidPerchRadius(self:unreal.UIntPtr):cpp.Float32;
public static function IsWalkable(self:unreal.UIntPtr, Hit:unreal.VariantPtr):Bool;
public static function K2_GetWalkableFloorAngle(self:unreal.UIntPtr):cpp.Float32;
public static function SetWalkableFloorAngle(self:unreal.UIntPtr, InWalkableFloorAngle:cpp.Float32):Void;
public static function K2_GetWalkableFloorZ(self:unreal.UIntPtr):cpp.Float32;
public static function SetWalkableFloorZ(self:unreal.UIntPtr, InWalkableFloorZ:cpp.Float32):Void;
public static function K2_FindFloor(self:unreal.UIntPtr, CapsuleLocation:unreal.VariantPtr, FloorResult:unreal.VariantPtr):Void;
public static function K2_ComputeFloorDist(self:unreal.UIntPtr, CapsuleLocation:unreal.VariantPtr, LineDistance:cpp.Float32, SweepDistance:cpp.Float32, SweepRadius:cpp.Float32, FloorResult:unreal.VariantPtr):Void;
public static function CapsuleTouched(self:unreal.UIntPtr, OverlappedComp:unreal.UIntPtr, Other:unreal.UIntPtr, OtherComp:unreal.UIntPtr, OtherBodyIndex:Int, bFromSweep:Bool, SweepResult:unreal.VariantPtr):Void;
public static function DoJump(self:unreal.UIntPtr, bReplayingMoves:Bool):Bool;
public static function Crouch(self:unreal.UIntPtr, bClientSimulation:Bool):Void;
public static function UnCrouch(self:unreal.UIntPtr, bClientSimulation:Bool):Void;
public static function CanCrouchInCurrentState(self:unreal.UIntPtr):Bool;
public static function GetMovementName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function StartFalling(self:unreal.UIntPtr, Iterations:Int, remainingTime:cpp.Float32, timeTick:cpp.Float32, Delta:unreal.VariantPtr, subLoc:unreal.VariantPtr):Void;
public static function PhysWalking(self:unreal.UIntPtr, deltaTime:cpp.Float32, Iterations:Int):Void;
public static function ScaleInputAcceleration(self:unreal.UIntPtr, InputAcceleration:unreal.VariantPtr):unreal.VariantPtr;
public static function StaticClass():unreal.UIntPtr;
}