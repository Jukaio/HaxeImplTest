/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.chaoscloth;

@:umodule("ChaosCloth")
@:glueCppIncludes("Public/ChaosCloth/ChaosClothConfig.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FChaosClothWeightedValue {
  
  /**
    Parameter value corresponding to the upper bound of the Weight Map.
    A Weight Map stores a series of Weight values assigned to each point, all between 0 and 1.
    The weights are used to interpolate the individual values from Low to High assigned to each different point.
    A Weight of 0 always corresponds to the Low parameter value, and a Weight of 1 to the High parameter value.
    The value for Low can be set to be bigger than for High in order to reverse the effect of the Weight Map.
  **/
  @:uproperty public var High : unreal.Float32;
  
  /**
    Parameter value corresponding to the lower bound of the Weight Map.
    A Weight Map stores a series of Weight values assigned to each point, all between 0 and 1.
    The weights are used to interpolate the individual values from Low to High assigned to each different point.
    A Weight of 0 always corresponds to the Low parameter value, and a Weight of 1 to the High parameter value.
    The value for Low can be set to be bigger than for High in order to reverse the effect of the Weight Map.
  **/
  @:uproperty public var Low : unreal.Float32;
  
}
