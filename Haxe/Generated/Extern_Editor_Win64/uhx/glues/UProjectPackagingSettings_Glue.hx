// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/editor/uprojectpackagingsettings.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UProjectPackagingSettings_Glue {
public static function get_DirectoriesToAlwaysStageAsNonUFSServer(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DirectoriesToAlwaysStageAsNonUFSServer(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DirectoriesToAlwaysStageAsUFSServer(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DirectoriesToAlwaysStageAsUFSServer(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DirectoriesToAlwaysStageAsNonUFS(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DirectoriesToAlwaysStageAsNonUFS(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DirectoriesToAlwaysStageAsUFS(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DirectoriesToAlwaysStageAsUFS(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_TestDirectoriesToNotSearch(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_TestDirectoriesToNotSearch(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DirectoriesToNeverCook(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DirectoriesToNeverCook(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DirectoriesToAlwaysCook(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DirectoriesToAlwaysCook(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MapsToCook(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_MapsToCook(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_EarlyDownloaderPakFileFiles_DEPRECATED(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_EarlyDownloaderPakFileFiles_DEPRECATED(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_IniSectionBlacklist(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_IniSectionBlacklist(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_IniKeyBlacklist(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_IniKeyBlacklist(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_CompressedChunkWildcard(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_CompressedChunkWildcard(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_NonUFSMovies(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_NonUFSMovies(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_UFSMovies(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_UFSMovies(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bSkipMovies(self:unreal.UIntPtr):Bool;
public static function set_bSkipMovies(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bSkipEditorContent(self:unreal.UIntPtr):Bool;
public static function set_bSkipEditorContent(self:unreal.UIntPtr, value:Bool):Void;
public static function get_GenerateEarlyDownloaderPakFile_DEPRECATED(self:unreal.UIntPtr):Bool;
public static function set_GenerateEarlyDownloaderPakFile_DEPRECATED(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEncryptPakIndex_DEPRECATED(self:unreal.UIntPtr):Bool;
public static function set_bEncryptPakIndex_DEPRECATED(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEncryptIniFiles_DEPRECATED(self:unreal.UIntPtr):Bool;
public static function set_bEncryptIniFiles_DEPRECATED(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCookMapsOnly(self:unreal.UIntPtr):Bool;
public static function set_bCookMapsOnly(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCookAll(self:unreal.UIntPtr):Bool;
public static function set_bCookAll(self:unreal.UIntPtr, value:Bool):Void;
public static function get_LocalizationTargetCatchAllChunkId(self:unreal.UIntPtr):Int;
public static function set_LocalizationTargetCatchAllChunkId(self:unreal.UIntPtr, value:Int):Void;
public static function get_LocalizationTargetsToChunk(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LocalizationTargetsToChunk(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_CulturesToStage(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_CulturesToStage(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_InternationalizationPreset(self:unreal.UIntPtr):Int;
public static function set_InternationalizationPreset(self:unreal.UIntPtr, value:Int):Void;
public static function get_IncludeCrashReporter(self:unreal.UIntPtr):Bool;
public static function set_IncludeCrashReporter(self:unreal.UIntPtr, value:Bool):Void;
public static function get_ApplocalPrerequisitesDirectory(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ApplocalPrerequisitesDirectory(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bSharedMaterialNativeLibraries(self:unreal.UIntPtr):Bool;
public static function set_bSharedMaterialNativeLibraries(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bDeterministicShaderCodeOrder(self:unreal.UIntPtr):Bool;
public static function set_bDeterministicShaderCodeOrder(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bShareMaterialShaderCode(self:unreal.UIntPtr):Bool;
public static function set_bShareMaterialShaderCode(self:unreal.UIntPtr, value:Bool):Void;
public static function get_IncludeAppLocalPrerequisites(self:unreal.UIntPtr):Bool;
public static function set_IncludeAppLocalPrerequisites(self:unreal.UIntPtr, value:Bool):Void;
public static function get_IncludePrerequisites(self:unreal.UIntPtr):Bool;
public static function set_IncludePrerequisites(self:unreal.UIntPtr, value:Bool):Void;
public static function get_HttpChunkInstallDataVersion(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_HttpChunkInstallDataVersion(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PakFileCompressionLevel_Distribution(self:unreal.UIntPtr):Int;
public static function set_PakFileCompressionLevel_Distribution(self:unreal.UIntPtr, value:Int):Void;
public static function get_PakFileCompressionLevel_TestShipping(self:unreal.UIntPtr):Int;
public static function set_PakFileCompressionLevel_TestShipping(self:unreal.UIntPtr, value:Int):Void;
public static function get_PakFileCompressionLevel_DebugDevelopment(self:unreal.UIntPtr):Int;
public static function set_PakFileCompressionLevel_DebugDevelopment(self:unreal.UIntPtr, value:Int):Void;
public static function get_PakFileCompressionMethod(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PakFileCompressionMethod(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PakFileAdditionalCompressionOptions(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PakFileAdditionalCompressionOptions(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bForceUseProjectCompressionFormatIgnoreHardwareOverride(self:unreal.UIntPtr):Bool;
public static function set_bForceUseProjectCompressionFormatIgnoreHardwareOverride(self:unreal.UIntPtr, value:Bool):Void;
public static function get_PakFileCompressionFormats(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PakFileCompressionFormats(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bCompressed(self:unreal.UIntPtr):Bool;
public static function set_bCompressed(self:unreal.UIntPtr, value:Bool):Void;
public static function get_HttpChunkInstallDataDirectory(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_HttpChunkInstallDataDirectory(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bBuildHttpChunkInstallData(self:unreal.UIntPtr):Bool;
public static function set_bBuildHttpChunkInstallData(self:unreal.UIntPtr, value:Bool):Void;
public static function get_MaxChunkSize(self:unreal.UIntPtr):unreal.Int64;
public static function set_MaxChunkSize(self:unreal.UIntPtr, value:unreal.Int64):Void;
public static function get_bForceOneChunkPerFile(self:unreal.UIntPtr):Bool;
public static function set_bForceOneChunkPerFile(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bChunkHardReferencesOnly(self:unreal.UIntPtr):Bool;
public static function set_bChunkHardReferencesOnly(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bGenerateNoChunks(self:unreal.UIntPtr):Bool;
public static function set_bGenerateNoChunks(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bGenerateChunks(self:unreal.UIntPtr):Bool;
public static function set_bGenerateChunks(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bMakeBinaryConfig(self:unreal.UIntPtr):Bool;
public static function set_bMakeBinaryConfig(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseIoStore(self:unreal.UIntPtr):Bool;
public static function set_bUseIoStore(self:unreal.UIntPtr, value:Bool):Void;
public static function get_UsePakFile(self:unreal.UIntPtr):Bool;
public static function set_UsePakFile(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bExcludeMonolithicEngineHeadersInNativizedCode(self:unreal.UIntPtr):Bool;
public static function set_bExcludeMonolithicEngineHeadersInNativizedCode(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bIncludeNativizedAssetsInProjectGeneration(self:unreal.UIntPtr):Bool;
public static function set_bIncludeNativizedAssetsInProjectGeneration(self:unreal.UIntPtr, value:Bool):Void;
public static function get_NativizeBlueprintAssets(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_NativizeBlueprintAssets(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_BlueprintNativizationMethod(self:unreal.UIntPtr):Int;
public static function set_BlueprintNativizationMethod(self:unreal.UIntPtr, value:Int):Void;
public static function get_IncludeDebugFiles(self:unreal.UIntPtr):Bool;
public static function set_IncludeDebugFiles(self:unreal.UIntPtr, value:Bool):Void;
public static function get_ForDistribution(self:unreal.UIntPtr):Bool;
public static function set_ForDistribution(self:unreal.UIntPtr, value:Bool):Void;
public static function get_FullRebuild(self:unreal.UIntPtr):Bool;
public static function set_FullRebuild(self:unreal.UIntPtr, value:Bool):Void;
public static function get_StagingDirectory(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_StagingDirectory(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_BuildTarget(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_BuildTarget(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_BuildConfiguration(self:unreal.UIntPtr):Int;
public static function set_BuildConfiguration(self:unreal.UIntPtr, value:Int):Void;
public static function get_Build(self:unreal.UIntPtr):Int;
public static function set_Build(self:unreal.UIntPtr, value:Int):Void;
public static function StaticClass():unreal.UIntPtr;
}