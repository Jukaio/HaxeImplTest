/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.animgraphruntime;

/**
  Parameters used by RBF solver
**/
@:umodule("AnimGraphRuntime")
@:glueCppIncludes("Public/RBF/RBFSolver.h")
@:uextern @:ustruct extern class FRBFParams {
  
  /**
    Maximum distance used for median
  **/
  @:uproperty public var MedianMax : unreal.Float32;
  
  /**
    Minimum distance used for median
  **/
  @:uproperty public var MedianMin : unreal.Float32;
  
  /**
    Rotation or position of median (used for normalization)
  **/
  @:uproperty public var MedianReference : unreal.FVector;
  
  /**
    Method to use for normalizing the weight
  **/
  @:uproperty public var NormalizeMethod : unreal.animgraphruntime.ERBFNormalizeMethod;
  
  /**
    Weight below which we shouldn't bother returning a contribution from a target
  **/
  @:uproperty public var WeightThreshold : unreal.Float32;
  
  /**
    Axis to use when DistanceMethod is SwingAngle
  **/
  @:uproperty public var TwistAxis : unreal.EBoneAxis;
  @:uproperty public var DistanceMethod : unreal.animgraphruntime.ERBFDistanceMethod;
  @:uproperty public var Function : unreal.animgraphruntime.ERBFFunctionType;
  
  /**
    Automatically pick the radius based on the average distance between targets
  **/
  @:uproperty public var bAutomaticRadius : Bool;
  
  /**
    Default radius for each target.
  **/
  @:uproperty public var Radius : unreal.Float32;
  
  /**
    Specifies the type of solver to use. The additive solver requires normalization, for the
                  most part, whereas the Interpolative solver is not as reliant on it. The interpolative
                  solver also has smoother blending, whereas the additive solver requires more targets but
                  has a more precise control over the influence of each target.
  **/
  @:uproperty public var SolverType : unreal.animgraphruntime.ERBFSolverType;
  
  /**
    How many dimensions input data has
  **/
  @:uproperty public var TargetDimensions : unreal.Int32;
  
}
