// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/steamvrinputdevice/usteamvrinputdevicefunctionlibrary.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class USteamVRInputDeviceFunctionLibrary_Glue {
public static function GetFingerCurlsAndSplays(Hand:Int, FingerCurls:unreal.VariantPtr, FingerSplays:unreal.VariantPtr, SummaryDataType:Int):Void;
public static function PlaySteamVR_HapticFeedback(Hand:Int, StartSecondsFromNow:cpp.Float32, DurationSeconds:cpp.Float32, Frequency:cpp.Float32, Amplitude:cpp.Float32):Void;
public static function GetCurlsAndSplaysState(LeftHandState:Bool, RightHandState:Bool):Void;
public static function GetSkeletalState(LeftHandState:Bool, RightHandState:Bool):Void;
public static function GetControllerFidelity(LeftControllerFidelity:unreal.UIntPtr, RightControllerFidelity:unreal.UIntPtr):Void;
public static function SetCurlsAndSplaysState(NewLeftHandState:Bool, NewRightHandState:Bool):Void;
public static function GetPoseSource(bUsingSkeletonPose:Bool):Void;
public static function SetPoseSource(bUseSkeletonPose:Bool):Void;
public static function GetSkeletalTransform(LeftHand:unreal.VariantPtr, RightHand:unreal.VariantPtr, bWithController:Bool):Void;
public static function GetLeftHandPoseData(Position:unreal.VariantPtr, Orientation:unreal.VariantPtr, AngularVelocity:unreal.VariantPtr, Velocity:unreal.VariantPtr):Void;
public static function GetRightHandPoseData(Position:unreal.VariantPtr, Orientation:unreal.VariantPtr, AngularVelocity:unreal.VariantPtr, Velocity:unreal.VariantPtr):Void;
public static function GetSteamVR_ActionArray(SteamVRActions:unreal.VariantPtr):Void;
public static function FindSteamVR_Action(ActionName:unreal.VariantPtr, bResult:Bool, FoundAction:unreal.VariantPtr, FoundActionSet:unreal.VariantPtr, ActionSet:unreal.VariantPtr):Void;
public static function GetSteamVR_ActionSetArray(SteamVRActionSets:unreal.VariantPtr):Void;
public static function GetSteamVR_OriginTrackedDeviceInfo(SteamVRAction:unreal.VariantPtr, InputOriginInfo:unreal.VariantPtr):Bool;
public static function FindSteamVR_OriginTrackedDeviceInfo(ActionName:unreal.VariantPtr, bResult:Bool, InputOriginInfo:unreal.VariantPtr, ActionSet:unreal.VariantPtr):Void;
public static function GetSteamVR_OriginLocalizedName(SteamVRAction:unreal.VariantPtr, LocalizedParts:unreal.VariantPtr, OriginLocalizedName:unreal.VariantPtr):Void;
public static function ShowSteamVR_ActionOrigin(SteamVRAction:unreal.VariantPtr, SteamVRActionSet:unreal.VariantPtr):Void;
public static function FindSteamVR_ActionOrigin(ActionName:unreal.VariantPtr, ActionSet:unreal.VariantPtr):Bool;
public static function GetSteamVR_HandPoseRelativeToNow(Position:unreal.VariantPtr, Orientation:unreal.VariantPtr, Hand:Int, PredictedSecondsFromNow:cpp.Float32):Bool;
public static function GetSteamVR_GlobalPredictedSecondsFromNow():cpp.Float32;
public static function SetSteamVR_GlobalPredictedSecondsFromNow(NewValue:cpp.Float32):cpp.Float32;
public static function ShowAllSteamVR_ActionOrigins():Void;
public static function GetSteamVR_InputBindingInfo(SteamVRActionHandle:unreal.VariantPtr):unreal.VariantPtr;
public static function FindSteamVR_InputBindingInfo(ActionName:unreal.VariantPtr, ActionSet:unreal.VariantPtr):unreal.VariantPtr;
public static function ResetSeatedPosition():Bool;
public static function GetUserIPD():cpp.Float32;
public static function StaticClass():unreal.UIntPtr;
}