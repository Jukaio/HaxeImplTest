// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/common/unreal/fmulticastscriptdelegate.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class FMulticastScriptDelegate_Glue {
public static function glueNew():unreal.VariantPtr;
public static function create():unreal.VariantPtr;
public static function createNew():unreal.VariantPtr;
public static function IsBound(self:unreal.VariantPtr):Bool;
public static function ContainsDelegate(self:unreal.VariantPtr, InDelegate:unreal.VariantPtr):Bool;
public static function Contains(self:unreal.VariantPtr, uobj:unreal.UIntPtr, functionName:unreal.VariantPtr):Bool;
public static function Remove(self:unreal.VariantPtr, InObject:unreal.UIntPtr, InFunctionName:unreal.VariantPtr):Void;
public static function RemoveAll(self:unreal.VariantPtr, Object:unreal.UIntPtr):Void;
public static function ProcessMulticastDelegate(self:unreal.VariantPtr, Parameters:unreal.AnyPtr):Void;
public static function Add(self:unreal.VariantPtr, InDelegate:unreal.VariantPtr):Void;
public static function AddUnique(self:unreal.VariantPtr, InDelegate:unreal.VariantPtr):Void;
public static function RemoveDelegate(self:unreal.VariantPtr, InDelegate:unreal.VariantPtr):Void;
public static function Clear(self:unreal.VariantPtr):Void;
public static function copyNew(self:unreal.VariantPtr):unreal.VariantPtr;
public static function copy(self:unreal.VariantPtr):unreal.VariantPtr;
public static function assign(self:unreal.VariantPtr, val:unreal.VariantPtr):Void;
public static function equals(self:unreal.VariantPtr, other:unreal.VariantPtr):Bool;
}