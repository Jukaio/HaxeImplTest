// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/oodlenetworkhandlercomponent/uoodlenetworktrainercommandlet.hx
package unreal.oodlenetworkhandlercomponent;
/**
  
  WARNING: This type was not defined as DLL export on its declaration. Because of that, some of its methods are inaccessible
  
  Commandlet for processing UE packet captures, through Oodle's training API, for generating compressed state dictionaries.
  
  
  Primary Commands:
  - "AutoGenerateDictionaries Changelist":
  - Iterates every directory recursively within "*Game*\Saved\Oodle\Server", and uses all capture files within each directory,
  to generate a dictionary stored in "*Game*\Content\Oodle", named "*Game**DirectoryName*.udic".
  
  - For example, packet captures in "OrionGame\Saved\Oodle\Server\Input", will be generated into a dictionary stored in
  "OrionGame\Content\Oodle\OrionGameInput.udic"
  
  - Each folder within "*Game*\Content\Oodle", should contain at least 100mb of packet captures.
  
  - Changelist is an optional parameter than will only use upac files that contain the changelist in their filenames. If
  omitted, all files in the directory are used.
  
  
  Secondary/Testing Commands:
  - "Enable":
  - Inserts the Oodle PacketHandler into the games packet handler component list, and initializes Oodle *Engine.ini settings
  
  
  - "MergePackets OutputFile PacketFile1,PacketFile2,PacketFileN":
  - Takes the specified packet capture files, and merges them into a single packet capture file
  
  - "MergePackets OutputFile All Directory":
  - As above, but merges all capture files in the specified directory.
  
  
  - "GenerateDictionary OutputFile FilenameFilter Changelist PacketFile1,PacketFile2,PacketFileN":
  - Takes the specified packet capture files, with an optional filter for a substring of a filename and changelist filter
  (use "all" to ignore either of these filters), and uses them to generate a network compression dictionary
  
  - "GenerateDictionary OutputFile FilenameFilter Changelist All Directory":
  - As above, but uses all capture files in the specified directory, to generate a network compression dictionary
  
  
  - "DebugDump OutputDirectory CaptureDirectory Changelist"
  - Recursively iterates all .ucap files in CaptureDirectory, and converts them to Oodle-example-code compatible .bin files,
  in OutputDirectory
  
  
  @todo #JohnB: Unimplemented commands:
  - "PacketInfo PacketFile":
  - Outputs information about the packet file, such as the MB amount of data recorded, per net connection channel, and data types
  - @todo #JohnB: Only implement, if deciding to actually capture/track this kind of data
  
**/

@:umodule("OodleNetworkHandlerComponent")
@:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
@:noClass
@:uextern
@:uclass
@:ueGluePath("uhx.glues.UOodleNetworkTrainerCommandlet_Glue")
#if (cppia && !LIVE_RELOAD_BUILD && !macro) @:build(uhx.compiletime.types.CompiledMetaCheck.build("unreal.oodlenetworkhandlercomponent.UOodleNetworkTrainerCommandlet")) #end
class UOodleNetworkTrainerCommandlet #if !macro extends unreal.UCommandlet #end {
  #if !macro 
  /**
    
    Whether or not random-trials have been disabled
    
  **/
  
  @:uproperty
  public var bNoTrials(get,set):Bool;
  /**
    
    The number of generations of random packet-selection trials
    
  **/
  
  @:uproperty
  public var TrialGenerations(get,set):Int;
  /**
    
    The randomness, in percent, of random packet-selection trials
    
  **/
  
  @:uproperty
  public var TrialRandomness(get,set):Int;
  /**
    
    The number of random packet-selection trials to run, when generating the dictionary, to try and optimize the dictionary
    
  **/
  
  @:uproperty
  public var DictionaryTrials(get,set):Int;
  /**
    
    Size of the dictionary to be generated
    
  **/
  
  @:uproperty
  public var DictionarySize(get,set):Int;
  /**
    
    Size of the hash table to use for the dictionary
    
  **/
  
  @:uproperty
  public var HashTableSize(get,set):Int;
  /**
    
    Whether or not compression testing should be performed after dictionary generation (uses up some of the packets)
    
  **/
  
  @:uproperty
  public var bCompressionTest(get,set):Bool;
  @:ifFeature("unreal.oodlenetworkhandlercomponent.UOodleNetworkTrainerCommandlet.*") public static function StaticClass():unreal.UClass {
    return cast unreal.UObject.StaticFindObjectFast(unreal.UClass.StaticClass(), null, new unreal.FName("OodleNetworkTrainerCommandlet"), false, true, unreal.EObjectFlags.RF_NoFlags);
  }
  static function __init__():Void {
    #if !cppia
    var func = cpp.Function.fromStaticFunction(wrapPointer).toFunction();
    uhx.ue.ClassMap.addWrapper(uhx.glues.UObject_Glue.StaticFindObjectFast(uhx.glues.UClass_Glue.StaticClass(), 0, new unreal.FName("OodleNetworkTrainerCommandlet"), false, true, unreal.EObjectFlags.RF_NoFlags), func);
    #else
    uhx.runtime.Helpers.addCppiaExternWrapper("OodleNetworkTrainerCommandlet", "unreal.oodlenetworkhandlercomponent.UOodleNetworkTrainerCommandlet");
    #end
  }
  
  #if !cppia
  static function wrapPointer(uobject:unreal.UIntPtr):unreal.UIntPtr {
    return uhx.internal.HaxeHelpers.dynamicToPointer(new unreal.oodlenetworkhandlercomponent.UOodleNetworkTrainerCommandlet(uobject));
  }
  #end
  inline public static function wrap(uobject:unreal.UIntPtr):unreal.oodlenetworkhandlercomponent.UOodleNetworkTrainerCommandlet {
    return cast uhx.ClassWrap.wrap(uobject);
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h")
  @:glueHeaderCode("static bool get_bNoTrials(unreal::UIntPtr self);")
  @:glueCppCode("bool uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::get_bNoTrials(unreal::UIntPtr self) {\n\treturn ( (UOodleNetworkTrainerCommandlet *) self )->bNoTrials;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  private function get_bNoTrials() : Bool {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "get_bNoTrials");
    #end
    #if cppia
    return unreal.ReflectAPI.bpGetField(this, "bNoTrials");
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    return uhx.glues.UOodleNetworkTrainerCommandlet_Glue.get_bNoTrials(uhx_arg_0);
    
    #end
    
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h")
  @:glueHeaderCode("static void set_bNoTrials(unreal::UIntPtr self, bool value);")
  @:glueCppCode("void uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::set_bNoTrials(unreal::UIntPtr self, bool value) {\n\t( (UOodleNetworkTrainerCommandlet *) self )->bNoTrials = value;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  @:final @:nonVirtual 
  @:nonVirtual
  private function set_bNoTrials(value : Bool) : Bool {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "set_bNoTrials");
    #end
    #if cppia
    unreal.ReflectAPI.bpSetField(this, "bNoTrials", value);
    return value;
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    var uhx_arg_1:Bool = value;
    uhx.glues.UOodleNetworkTrainerCommandlet_Glue.set_bNoTrials(uhx_arg_0, uhx_arg_1);
    return value;
    
    #end
    
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h", "<hxcpp.h>")
  @:glueHeaderCode("static int get_TrialGenerations(unreal::UIntPtr self);")
  @:glueCppCode("int uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::get_TrialGenerations(unreal::UIntPtr self) {\n\treturn ( (UOodleNetworkTrainerCommandlet *) self )->TrialGenerations;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  private function get_TrialGenerations() : Int {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "get_TrialGenerations");
    #end
    #if cppia
    return unreal.ReflectAPI.bpGetField(this, "TrialGenerations");
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    return uhx.glues.UOodleNetworkTrainerCommandlet_Glue.get_TrialGenerations(uhx_arg_0);
    
    #end
    
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h", "<hxcpp.h>")
  @:glueHeaderCode("static void set_TrialGenerations(unreal::UIntPtr self, int value);")
  @:glueCppCode("void uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::set_TrialGenerations(unreal::UIntPtr self, int value) {\n\t( (UOodleNetworkTrainerCommandlet *) self )->TrialGenerations = value;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  @:final @:nonVirtual 
  @:nonVirtual
  private function set_TrialGenerations(value : Int) : Int {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "set_TrialGenerations");
    #end
    #if cppia
    unreal.ReflectAPI.bpSetField(this, "TrialGenerations", value);
    return value;
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    var uhx_arg_1:Int = value;
    uhx.glues.UOodleNetworkTrainerCommandlet_Glue.set_TrialGenerations(uhx_arg_0, uhx_arg_1);
    return value;
    
    #end
    
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h", "<hxcpp.h>")
  @:glueHeaderCode("static int get_TrialRandomness(unreal::UIntPtr self);")
  @:glueCppCode("int uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::get_TrialRandomness(unreal::UIntPtr self) {\n\treturn ( (UOodleNetworkTrainerCommandlet *) self )->TrialRandomness;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  private function get_TrialRandomness() : Int {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "get_TrialRandomness");
    #end
    #if cppia
    return unreal.ReflectAPI.bpGetField(this, "TrialRandomness");
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    return uhx.glues.UOodleNetworkTrainerCommandlet_Glue.get_TrialRandomness(uhx_arg_0);
    
    #end
    
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h", "<hxcpp.h>")
  @:glueHeaderCode("static void set_TrialRandomness(unreal::UIntPtr self, int value);")
  @:glueCppCode("void uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::set_TrialRandomness(unreal::UIntPtr self, int value) {\n\t( (UOodleNetworkTrainerCommandlet *) self )->TrialRandomness = value;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  @:final @:nonVirtual 
  @:nonVirtual
  private function set_TrialRandomness(value : Int) : Int {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "set_TrialRandomness");
    #end
    #if cppia
    unreal.ReflectAPI.bpSetField(this, "TrialRandomness", value);
    return value;
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    var uhx_arg_1:Int = value;
    uhx.glues.UOodleNetworkTrainerCommandlet_Glue.set_TrialRandomness(uhx_arg_0, uhx_arg_1);
    return value;
    
    #end
    
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h", "<hxcpp.h>")
  @:glueHeaderCode("static int get_DictionaryTrials(unreal::UIntPtr self);")
  @:glueCppCode("int uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::get_DictionaryTrials(unreal::UIntPtr self) {\n\treturn ( (UOodleNetworkTrainerCommandlet *) self )->DictionaryTrials;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  private function get_DictionaryTrials() : Int {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "get_DictionaryTrials");
    #end
    #if cppia
    return unreal.ReflectAPI.bpGetField(this, "DictionaryTrials");
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    return uhx.glues.UOodleNetworkTrainerCommandlet_Glue.get_DictionaryTrials(uhx_arg_0);
    
    #end
    
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h", "<hxcpp.h>")
  @:glueHeaderCode("static void set_DictionaryTrials(unreal::UIntPtr self, int value);")
  @:glueCppCode("void uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::set_DictionaryTrials(unreal::UIntPtr self, int value) {\n\t( (UOodleNetworkTrainerCommandlet *) self )->DictionaryTrials = value;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  @:final @:nonVirtual 
  @:nonVirtual
  private function set_DictionaryTrials(value : Int) : Int {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "set_DictionaryTrials");
    #end
    #if cppia
    unreal.ReflectAPI.bpSetField(this, "DictionaryTrials", value);
    return value;
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    var uhx_arg_1:Int = value;
    uhx.glues.UOodleNetworkTrainerCommandlet_Glue.set_DictionaryTrials(uhx_arg_0, uhx_arg_1);
    return value;
    
    #end
    
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h", "<hxcpp.h>")
  @:glueHeaderCode("static int get_DictionarySize(unreal::UIntPtr self);")
  @:glueCppCode("int uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::get_DictionarySize(unreal::UIntPtr self) {\n\treturn ( (UOodleNetworkTrainerCommandlet *) self )->DictionarySize;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  private function get_DictionarySize() : Int {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "get_DictionarySize");
    #end
    #if cppia
    return unreal.ReflectAPI.bpGetField(this, "DictionarySize");
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    return uhx.glues.UOodleNetworkTrainerCommandlet_Glue.get_DictionarySize(uhx_arg_0);
    
    #end
    
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h", "<hxcpp.h>")
  @:glueHeaderCode("static void set_DictionarySize(unreal::UIntPtr self, int value);")
  @:glueCppCode("void uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::set_DictionarySize(unreal::UIntPtr self, int value) {\n\t( (UOodleNetworkTrainerCommandlet *) self )->DictionarySize = value;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  @:final @:nonVirtual 
  @:nonVirtual
  private function set_DictionarySize(value : Int) : Int {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "set_DictionarySize");
    #end
    #if cppia
    unreal.ReflectAPI.bpSetField(this, "DictionarySize", value);
    return value;
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    var uhx_arg_1:Int = value;
    uhx.glues.UOodleNetworkTrainerCommandlet_Glue.set_DictionarySize(uhx_arg_0, uhx_arg_1);
    return value;
    
    #end
    
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h", "<hxcpp.h>")
  @:glueHeaderCode("static int get_HashTableSize(unreal::UIntPtr self);")
  @:glueCppCode("int uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::get_HashTableSize(unreal::UIntPtr self) {\n\treturn ( (UOodleNetworkTrainerCommandlet *) self )->HashTableSize;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  private function get_HashTableSize() : Int {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "get_HashTableSize");
    #end
    #if cppia
    return unreal.ReflectAPI.bpGetField(this, "HashTableSize");
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    return uhx.glues.UOodleNetworkTrainerCommandlet_Glue.get_HashTableSize(uhx_arg_0);
    
    #end
    
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h", "<hxcpp.h>")
  @:glueHeaderCode("static void set_HashTableSize(unreal::UIntPtr self, int value);")
  @:glueCppCode("void uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::set_HashTableSize(unreal::UIntPtr self, int value) {\n\t( (UOodleNetworkTrainerCommandlet *) self )->HashTableSize = value;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  @:final @:nonVirtual 
  @:nonVirtual
  private function set_HashTableSize(value : Int) : Int {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "set_HashTableSize");
    #end
    #if cppia
    unreal.ReflectAPI.bpSetField(this, "HashTableSize", value);
    return value;
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    var uhx_arg_1:Int = value;
    uhx.glues.UOodleNetworkTrainerCommandlet_Glue.set_HashTableSize(uhx_arg_0, uhx_arg_1);
    return value;
    
    #end
    
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h")
  @:glueHeaderCode("static bool get_bCompressionTest(unreal::UIntPtr self);")
  @:glueCppCode("bool uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::get_bCompressionTest(unreal::UIntPtr self) {\n\treturn ( (UOodleNetworkTrainerCommandlet *) self )->bCompressionTest;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  private function get_bCompressionTest() : Bool {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "get_bCompressionTest");
    #end
    #if cppia
    return unreal.ReflectAPI.bpGetField(this, "bCompressionTest");
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    return uhx.glues.UOodleNetworkTrainerCommandlet_Glue.get_bCompressionTest(uhx_arg_0);
    
    #end
    
  }
  @:glueCppIncludes("OodleNetworkTrainerCommandlet.h")
  @:glueHeaderIncludes("IntPtr.h")
  @:glueHeaderCode("static void set_bCompressionTest(unreal::UIntPtr self, bool value);")
  @:glueCppCode("void uhx::glues::UOodleNetworkTrainerCommandlet_Glue_obj::set_bCompressionTest(unreal::UIntPtr self, bool value) {\n\t( (UOodleNetworkTrainerCommandlet *) self )->bCompressionTest = value;\n}")
  @:uproperty
  @:final @:nonVirtual 
  @:nonVirtual
  @:final @:nonVirtual 
  @:nonVirtual
  private function set_bCompressionTest(value : Bool) : Bool {
    #if (debug || UHX_CHECK_POINTER)
    uhx.internal.HaxeHelpers.checkObjectPointer(this, "set_bCompressionTest");
    #end
    #if cppia
    unreal.ReflectAPI.bpSetField(this, "bCompressionTest", value);
    return value;
    
    #else
    var uhx_arg_0:unreal.UIntPtr = uhx.internal.HaxeHelpers.getUObjectWrapped(this);
    var uhx_arg_1:Bool = value;
    uhx.glues.UOodleNetworkTrainerCommandlet_Glue.set_bCompressionTest(uhx_arg_0, uhx_arg_1);
    return value;
    
    #end
    
  }
  #end
  
}
