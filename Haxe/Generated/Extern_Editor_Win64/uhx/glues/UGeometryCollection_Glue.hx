// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/geometrycollectionengine/ugeometrycollection.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UGeometryCollection_Glue {
public static function get_ThumbnailInfo(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ThumbnailInfo(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_RemoveOnFractureMaterials(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_RemoveOnFractureMaterials(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_EnableRemovePiecesOnFracture(self:unreal.UIntPtr):Bool;
public static function set_EnableRemovePiecesOnFracture(self:unreal.UIntPtr, value:Bool):Void;
public static function get_SizeSpecificData(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SizeSpecificData(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MaximumCollisionParticles(self:unreal.UIntPtr):Int;
public static function set_MaximumCollisionParticles(self:unreal.UIntPtr, value:Int):Void;
public static function get_CollisionParticlesFraction(self:unreal.UIntPtr):cpp.Float32;
public static function set_CollisionParticlesFraction(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MinimumMassClamp(self:unreal.UIntPtr):cpp.Float32;
public static function set_MinimumMassClamp(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_Mass(self:unreal.UIntPtr):cpp.Float32;
public static function set_Mass(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bMassAsDensity(self:unreal.UIntPtr):Bool;
public static function set_bMassAsDensity(self:unreal.UIntPtr, value:Bool):Void;
public static function get_CollisionObjectReductionPercentage(self:unreal.UIntPtr):cpp.Float32;
public static function set_CollisionObjectReductionPercentage(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxClusterLevelSetResolution(self:unreal.UIntPtr):Int;
public static function set_MaxClusterLevelSetResolution(self:unreal.UIntPtr, value:Int):Void;
public static function get_MinClusterLevelSetResolution(self:unreal.UIntPtr):Int;
public static function set_MinClusterLevelSetResolution(self:unreal.UIntPtr, value:Int):Void;
public static function get_MaxLevelSetResolution(self:unreal.UIntPtr):Int;
public static function set_MaxLevelSetResolution(self:unreal.UIntPtr, value:Int):Void;
public static function get_MinLevelSetResolution(self:unreal.UIntPtr):Int;
public static function set_MinLevelSetResolution(self:unreal.UIntPtr, value:Int):Void;
public static function get_ImplicitType(self:unreal.UIntPtr):Int;
public static function set_ImplicitType(self:unreal.UIntPtr, value:Int):Void;
public static function get_CollisionType(self:unreal.UIntPtr):Int;
public static function set_CollisionType(self:unreal.UIntPtr, value:Int):Void;
public static function get_Materials(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_Materials(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_GeometrySource(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_GeometrySource(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ClusterConnectionType(self:unreal.UIntPtr):Int;
public static function set_ClusterConnectionType(self:unreal.UIntPtr, value:Int):Void;
public static function get_DamageThreshold(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DamageThreshold(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MaxClusterLevel(self:unreal.UIntPtr):Int;
public static function set_MaxClusterLevel(self:unreal.UIntPtr, value:Int):Void;
public static function get_ClusterGroupIndex(self:unreal.UIntPtr):Int;
public static function set_ClusterGroupIndex(self:unreal.UIntPtr, value:Int):Void;
public static function get_EnableClustering(self:unreal.UIntPtr):Bool;
public static function set_EnableClustering(self:unreal.UIntPtr, value:Bool):Void;
public static function StaticClass():unreal.UIntPtr;
}