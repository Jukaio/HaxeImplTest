/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

@:glueCppIncludes("Particles/ParticleSystemComponent.h")
@:uextern @:uclass extern class UFXSystemComponent extends unreal.UPrimitiveComponent {
  
  /**
    Change a named boolean parameter, ParticleSystemComponent converts to float.
  **/
  @:ufunction(BlueprintCallable) public function SetBoolParameter(ParameterName : unreal.FName, Param : Bool) : Void;
  
  /**
    Change a named int parameter
  **/
  @:ufunction(BlueprintCallable) public function SetIntParameter(ParameterName : unreal.FName, Param : unreal.Int32) : Void;
  
  /**
    Change a named float parameter
  **/
  @:ufunction(BlueprintCallable) public function SetFloatParameter(ParameterName : unreal.FName, Param : unreal.Float32) : Void;
  
  /**
    Set a named vector instance parameter on this ParticleSystemComponent.
    Updates the parameter if it already exists, or creates a new entry if not.
  **/
  @:ufunction(BlueprintCallable) public function SetVectorParameter(ParameterName : unreal.FName, Param : unreal.FVector) : Void;
  
  /**
    Set a named color instance parameter on this ParticleSystemComponent.
    Updates the parameter if it already exists, or creates a new entry if not.
  **/
  @:ufunction(BlueprintCallable) public function SetColorParameter(ParameterName : unreal.FName, Param : unreal.FLinearColor) : Void;
  
  /**
    Set a named actor instance parameter on this ParticleSystemComponent.
    Updates the parameter if it already exists, or creates a new entry if not.
  **/
  @:ufunction(BlueprintCallable) public function SetActorParameter(ParameterName : unreal.FName, Param : unreal.AActor) : Void;
  
  /**
    Get the referenced FXSystem asset.
  **/
  @:ufunction(BlueprintCallable) @:thisConst public function GetFXSystemAsset() : unreal.UFXSystemAsset;
  
  /**
    Enables/Disables a sub-emitter
    
    @param  EmitterName                     The name of the sub-emitter to set it on
    @param  bNewEnableState         The value to set it to
  **/
  @:ufunction(BlueprintCallable) public function SetEmitterEnable(EmitterName : unreal.FName, bNewEnableState : Bool) : Void;
  
  /**
    Set AutoAttachParent, AutoAttachSocketName, AutoAttachLocationRule, AutoAttachRotationRule, AutoAttachScaleRule to the specified parameters. Does not change bAutoManageAttachment; that must be set separately.
    @param  Parent                       Component to attach to.
    @param  SocketName           Socket on Parent to attach to.
    @param  LocationRule         Option for how we handle our location when we attach to Parent.
    @param  RotationRule         Option for how we handle our rotation when we attach to Parent.
    @param  ScaleRule            Option for how we handle our scale when we attach to Parent.
    @see bAutoManageAttachment, AutoAttachParent, AutoAttachSocketName, AutoAttachLocationRule, AutoAttachRotationRule, AutoAttachScaleRule
  **/
  @:ufunction(BlueprintCallable) public function SetAutoAttachmentParameters(Parent : unreal.USceneComponent, SocketName : unreal.FName, LocationRule : unreal.EAttachmentRule, RotationRule : unreal.EAttachmentRule, ScaleRule : unreal.EAttachmentRule) : Void;
  
  /**
    Sets whether we should automatically attach to AutoAttachParent when activated, and detach from our parent when completed.
    This overrides any current attachment that may be present at the time of activation (deferring initial attachment until activation, if AutoAttachParent is null).
    When enabled, detachment occurs regardless of whether AutoAttachParent is assigned, and the relative transform from the time of activation is restored.
    This also disables attachment on dedicated servers, where we don't actually activate even if bAutoActivate is true.
    @see SetAutoAttachmentParameters()
  **/
  @:ufunction(BlueprintCallable) public function SetUseAutoManageAttachment(bAutoManage : Bool) : Void;
  
  /**
    Deactivates this system and releases it to the pool on completion.
    Usage of this PSC reference after this call is unsafe.
    You should clear out your references to it.
  **/
  @:ufunction(BlueprintCallable) public function ReleaseToPool() : Void;
  
}
