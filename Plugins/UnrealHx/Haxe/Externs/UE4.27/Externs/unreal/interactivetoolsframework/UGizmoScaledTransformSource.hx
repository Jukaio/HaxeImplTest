/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.interactivetoolsframework;

/**
  UGizmoScaledTransformSource wraps another IGizmoTransformSource implementation and adds a
  separate scaling vector to the Transform. The main use of this class is to support scaling
  in a 3D gizmo without actually scaling the Gizmo itself. Generally our pattern is to apply
  the gizmo's position/rotation transform to the target object via a TransformProxy, but
  that does not work with Scaling. So this class stores the scaling vector separately, provided by
  an external source via FSeparateScaleProvider, and in GetTransform/SetTransform rewrites the
  Transform from the child IGizmoTransformSource with the new scale.
**/
@:umodule("InteractiveToolsFramework")
@:glueCppIncludes("BaseGizmos/TransformSources.h")
@:uextern @:uclass extern class UGizmoScaledTransformSource extends unreal.interactivetoolsframework.UGizmoBaseTransformSource {
  
}
