/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  Mesh instance-replacement settings
**/
@:glueCppIncludes("Classes/Engine/MeshMerging.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FMeshInstancingSettings {
  
  /**
    Whether to use the Instanced Static Mesh Compoment or the Hierarchical Instanced Static Mesh Compoment
  **/
  @:uproperty public var ISMComponentToUse : unreal.TSubclassOf<unreal.UInstancedStaticMeshComponent>;
  
  /**
    Whether split up instanced static mesh components based on their intersection with HLOD volumes
  **/
  @:uproperty public var bUseHLODVolumes : Bool;
  
  /**
    Whether to skip the conversion to an instanced static mesh for meshes with vertex colors.
    Instanced static meshes do not support vertex colors per-instance, so conversion will lose
    this data.
  **/
  @:uproperty public var bSkipMeshesWithVertexColors : Bool;
  
  /**
    How to replace the original actors when instancing
  **/
  @:uproperty public var MeshReplacementMethod : unreal.EMeshInstancingReplacementMethod;
  
  /**
    The number of static mesh instances needed before a mesh is replaced with an instanced version
  **/
  @:uproperty public var InstanceReplacementThreshold : unreal.Int32;
  
  /**
    The actor class to attach new instance static mesh components to
  **/
  @:uproperty public var ActorClassToUse : unreal.TSubclassOf<unreal.AActor>;
  
}
