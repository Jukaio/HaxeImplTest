// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/ugameplaystatics.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UGameplayStatics_Glue {
public static function SpawnObject(ObjectClass:unreal.UIntPtr, Outer:unreal.UIntPtr):unreal.UIntPtr;
public static function BeginSpawningActorFromBlueprint(WorldContextObject:unreal.UIntPtr, Blueprint:unreal.UIntPtr, SpawnTransform:unreal.VariantPtr, bNoCollisionFail:Bool):unreal.UIntPtr;
public static function BeginSpawningActorFromClass(WorldContextObject:unreal.UIntPtr, ActorClass:unreal.UIntPtr, SpawnTransform:unreal.VariantPtr, bNoCollisionFail:Bool, Owner:unreal.UIntPtr):unreal.UIntPtr;
public static function BeginDeferredActorSpawnFromClass(WorldContextObject:unreal.UIntPtr, ActorClass:unreal.UIntPtr, SpawnTransform:unreal.VariantPtr, CollisionHandlingOverride:Int, Owner:unreal.UIntPtr):unreal.UIntPtr;
public static function FinishSpawningActor(Actor:unreal.UIntPtr, SpawnTransform:unreal.VariantPtr):unreal.UIntPtr;
public static function GetActorArrayAverageLocation(Actors:unreal.VariantPtr):unreal.VariantPtr;
public static function GetActorArrayBounds(Actors:unreal.VariantPtr, bOnlyCollidingComponents:Bool, Center:unreal.VariantPtr, BoxExtent:unreal.VariantPtr):Void;
public static function GetActorOfClass(WorldContextObject:unreal.UIntPtr, ActorClass:unreal.UIntPtr):unreal.UIntPtr;
public static function GetAllActorsOfClass(WorldContextObject:unreal.UIntPtr, ActorClass:unreal.UIntPtr, OutActors:unreal.VariantPtr):Void;
public static function GetAllActorsWithInterface(WorldContextObject:unreal.UIntPtr, Interface:unreal.UIntPtr, OutActors:unreal.VariantPtr):Void;
public static function GetAllActorsWithTag(WorldContextObject:unreal.UIntPtr, Tag:unreal.VariantPtr, OutActors:unreal.VariantPtr):Void;
public static function GetAllActorsOfClassWithTag(WorldContextObject:unreal.UIntPtr, ActorClass:unreal.UIntPtr, Tag:unreal.VariantPtr, OutActors:unreal.VariantPtr):Void;
public static function FindNearestActor(Origin:unreal.VariantPtr, ActorsToCheck:unreal.VariantPtr, Distance:cpp.Float32):unreal.UIntPtr;
public static function GetGameInstance(WorldContextObject:unreal.UIntPtr):unreal.UIntPtr;
public static function GetPlayerController(WorldContextObject:unreal.UIntPtr, PlayerIndex:Int):unreal.UIntPtr;
public static function GetPlayerControllerFromID(WorldContextObject:unreal.UIntPtr, ControllerID:Int):unreal.UIntPtr;
public static function GetPlayerPawn(WorldContextObject:unreal.UIntPtr, PlayerIndex:Int):unreal.UIntPtr;
public static function GetPlayerCharacter(WorldContextObject:unreal.UIntPtr, PlayerIndex:Int):unreal.UIntPtr;
public static function GetPlayerCameraManager(WorldContextObject:unreal.UIntPtr, PlayerIndex:Int):unreal.UIntPtr;
public static function CreatePlayer(WorldContextObject:unreal.UIntPtr, ControllerId:Int, bSpawnPlayerController:Bool):unreal.UIntPtr;
public static function RemovePlayer(Player:unreal.UIntPtr, bDestroyPawn:Bool):Void;
public static function GetPlayerControllerID(Player:unreal.UIntPtr):Int;
public static function SetPlayerControllerID(Player:unreal.UIntPtr, ControllerId:Int):Void;
public static function LoadStreamLevel(WorldContextObject:unreal.UIntPtr, LevelName:unreal.VariantPtr, bMakeVisibleAfterLoad:Bool, bShouldBlockOnLoad:Bool, LatentInfo:unreal.VariantPtr):Void;
public static function UnloadStreamLevel(WorldContextObject:unreal.UIntPtr, LevelName:unreal.VariantPtr, LatentInfo:unreal.VariantPtr, bShouldBlockOnUnload:Bool):Void;
public static function GetStreamingLevel(WorldContextObject:unreal.UIntPtr, PackageName:unreal.VariantPtr):unreal.UIntPtr;
public static function FlushLevelStreaming(WorldContextObject:unreal.UIntPtr):Void;
public static function CancelAsyncLoading():Void;
public static function OpenLevel(WorldContextObject:unreal.UIntPtr, LevelName:unreal.VariantPtr, bAbsolute:Bool, Options:unreal.VariantPtr):Void;
public static function GetCurrentLevelName(WorldContextObject:unreal.UIntPtr, bRemovePrefixString:Bool):unreal.VariantPtr;
public static function GetGameMode(WorldContextObject:unreal.UIntPtr):unreal.UIntPtr;
public static function GetGameState(WorldContextObject:unreal.UIntPtr):unreal.UIntPtr;
public static function GetObjectClass(Object:unreal.UIntPtr):unreal.UIntPtr;
public static function GetGlobalTimeDilation(WorldContextObject:unreal.UIntPtr):cpp.Float32;
public static function SetGlobalTimeDilation(WorldContextObject:unreal.UIntPtr, TimeDilation:cpp.Float32):Void;
public static function SetGamePaused(WorldContextObject:unreal.UIntPtr, bPaused:Bool):Bool;
public static function IsGamePaused(WorldContextObject:unreal.UIntPtr):Bool;
public static function SetForceDisableSplitscreen(WorldContextObject:unreal.UIntPtr, bDisable:Bool):Void;
public static function IsSplitscreenForceDisabled(WorldContextObject:unreal.UIntPtr):Bool;
public static function SetEnableWorldRendering(WorldContextObject:unreal.UIntPtr, bEnable:Bool):Void;
public static function GetEnableWorldRendering(WorldContextObject:unreal.UIntPtr):Bool;
public static function GetViewportMouseCaptureMode(WorldContextObject:unreal.UIntPtr):Int;
public static function SetViewportMouseCaptureMode(WorldContextObject:unreal.UIntPtr, MouseCaptureMode:Int):Void;
public static function ApplyRadialDamage(WorldContextObject:unreal.UIntPtr, BaseDamage:cpp.Float32, Origin:unreal.VariantPtr, DamageRadius:cpp.Float32, DamageTypeClass:unreal.UIntPtr, IgnoreActors:unreal.VariantPtr, DamageCauser:unreal.UIntPtr, InstigatedByController:unreal.UIntPtr, bDoFullDamage:Bool, DamagePreventionChannel:Int):Bool;
public static function ApplyRadialDamageWithFalloff(WorldContextObject:unreal.UIntPtr, BaseDamage:cpp.Float32, MinimumDamage:cpp.Float32, Origin:unreal.VariantPtr, DamageInnerRadius:cpp.Float32, DamageOuterRadius:cpp.Float32, DamageFalloff:cpp.Float32, DamageTypeClass:unreal.UIntPtr, IgnoreActors:unreal.VariantPtr, DamageCauser:unreal.UIntPtr, InstigatedByController:unreal.UIntPtr, DamagePreventionChannel:Int):Bool;
public static function ApplyPointDamage(DamagedActor:unreal.UIntPtr, BaseDamage:cpp.Float32, HitFromDirection:unreal.VariantPtr, HitInfo:unreal.VariantPtr, EventInstigator:unreal.UIntPtr, DamageCauser:unreal.UIntPtr, DamageTypeClass:unreal.UIntPtr):cpp.Float32;
public static function ApplyDamage(DamagedActor:unreal.UIntPtr, BaseDamage:cpp.Float32, EventInstigator:unreal.UIntPtr, DamageCauser:unreal.UIntPtr, DamageTypeClass:unreal.UIntPtr):cpp.Float32;
public static function PlayWorldCameraShake(WorldContextObject:unreal.UIntPtr, Shake:unreal.UIntPtr, Epicenter:unreal.VariantPtr, InnerRadius:cpp.Float32, OuterRadius:cpp.Float32, Falloff:cpp.Float32, bOrientShakeTowardsEpicenter:Bool):Void;
public static function SpawnEmitterAtLocation(WorldContextObject:unreal.UIntPtr, EmitterTemplate:unreal.UIntPtr, Location:unreal.VariantPtr, Rotation:unreal.VariantPtr, Scale:unreal.VariantPtr, bAutoDestroy:Bool, PoolingMethod:Int, bAutoActivateSystem:Bool):unreal.UIntPtr;
public static function SpawnEmitterAttached(EmitterTemplate:unreal.UIntPtr, AttachToComponent:unreal.UIntPtr, AttachPointName:unreal.VariantPtr, Location:unreal.VariantPtr, Rotation:unreal.VariantPtr, Scale:unreal.VariantPtr, LocationType:Int, bAutoDestroy:Bool, PoolingMethod:Int, bAutoActivate:Bool):unreal.UIntPtr;
public static function AreAnyListenersWithinRange(WorldContextObject:unreal.UIntPtr, Location:unreal.VariantPtr, MaximumRange:cpp.Float32):Bool;
public static function GetClosestListenerLocation(WorldContextObject:unreal.UIntPtr, Location:unreal.VariantPtr, MaximumRange:cpp.Float32, bAllowAttenuationOverride:Bool, ListenerPosition:unreal.VariantPtr):Bool;
public static function SetGlobalPitchModulation(WorldContextObject:unreal.UIntPtr, PitchModulation:cpp.Float32, TimeSec:cpp.Float32):Void;
public static function SetSoundClassDistanceScale(WorldContextObject:unreal.UIntPtr, SoundClass:unreal.UIntPtr, DistanceAttenuationScale:cpp.Float32, TimeSec:cpp.Float32):Void;
public static function SetGlobalListenerFocusParameters(WorldContextObject:unreal.UIntPtr, FocusAzimuthScale:cpp.Float32, NonFocusAzimuthScale:cpp.Float32, FocusDistanceScale:cpp.Float32, NonFocusDistanceScale:cpp.Float32, FocusVolumeScale:cpp.Float32, NonFocusVolumeScale:cpp.Float32, FocusPriorityScale:cpp.Float32, NonFocusPriorityScale:cpp.Float32):Void;
public static function PlaySound2D(WorldContextObject:unreal.UIntPtr, Sound:unreal.UIntPtr, VolumeMultiplier:cpp.Float32, PitchMultiplier:cpp.Float32, StartTime:cpp.Float32, ConcurrencySettings:unreal.UIntPtr, OwningActor:unreal.UIntPtr, bIsUISound:Bool):Void;
public static function SpawnSound2D(WorldContextObject:unreal.UIntPtr, Sound:unreal.UIntPtr, VolumeMultiplier:cpp.Float32, PitchMultiplier:cpp.Float32, StartTime:cpp.Float32, ConcurrencySettings:unreal.UIntPtr, bPersistAcrossLevelTransition:Bool, bAutoDestroy:Bool):unreal.UIntPtr;
public static function CreateSound2D(WorldContextObject:unreal.UIntPtr, Sound:unreal.UIntPtr, VolumeMultiplier:cpp.Float32, PitchMultiplier:cpp.Float32, StartTime:cpp.Float32, ConcurrencySettings:unreal.UIntPtr, bPersistAcrossLevelTransition:Bool, bAutoDestroy:Bool):unreal.UIntPtr;
public static function PlaySoundAtLocation(WorldContextObject:unreal.UIntPtr, Sound:unreal.UIntPtr, Location:unreal.VariantPtr, Rotation:unreal.VariantPtr, VolumeMultiplier:cpp.Float32, PitchMultiplier:cpp.Float32, StartTime:cpp.Float32, AttenuationSettings:unreal.UIntPtr, ConcurrencySettings:unreal.UIntPtr, OwningActor:unreal.UIntPtr):Void;
public static function SpawnSoundAtLocation(WorldContextObject:unreal.UIntPtr, Sound:unreal.UIntPtr, Location:unreal.VariantPtr, Rotation:unreal.VariantPtr, VolumeMultiplier:cpp.Float32, PitchMultiplier:cpp.Float32, StartTime:cpp.Float32, AttenuationSettings:unreal.UIntPtr, ConcurrencySettings:unreal.UIntPtr, bAutoDestroy:Bool):unreal.UIntPtr;
public static function SpawnSoundAttached(Sound:unreal.UIntPtr, AttachToComponent:unreal.UIntPtr, AttachPointName:unreal.VariantPtr, Location:unreal.VariantPtr, Rotation:unreal.VariantPtr, LocationType:Int, bStopWhenAttachedToDestroyed:Bool, VolumeMultiplier:cpp.Float32, PitchMultiplier:cpp.Float32, StartTime:cpp.Float32, AttenuationSettings:unreal.UIntPtr, ConcurrencySettings:unreal.UIntPtr, bAutoDestroy:Bool):unreal.UIntPtr;
public static function PlayDialogue2D(WorldContextObject:unreal.UIntPtr, Dialogue:unreal.UIntPtr, Context:unreal.VariantPtr, VolumeMultiplier:cpp.Float32, PitchMultiplier:cpp.Float32, StartTime:cpp.Float32):Void;
public static function SpawnDialogue2D(WorldContextObject:unreal.UIntPtr, Dialogue:unreal.UIntPtr, Context:unreal.VariantPtr, VolumeMultiplier:cpp.Float32, PitchMultiplier:cpp.Float32, StartTime:cpp.Float32, bAutoDestroy:Bool):unreal.UIntPtr;
public static function PlayDialogueAtLocation(WorldContextObject:unreal.UIntPtr, Dialogue:unreal.UIntPtr, Context:unreal.VariantPtr, Location:unreal.VariantPtr, Rotation:unreal.VariantPtr, VolumeMultiplier:cpp.Float32, PitchMultiplier:cpp.Float32, StartTime:cpp.Float32, AttenuationSettings:unreal.UIntPtr):Void;
public static function SpawnDialogueAtLocation(WorldContextObject:unreal.UIntPtr, Dialogue:unreal.UIntPtr, Context:unreal.VariantPtr, Location:unreal.VariantPtr, Rotation:unreal.VariantPtr, VolumeMultiplier:cpp.Float32, PitchMultiplier:cpp.Float32, StartTime:cpp.Float32, AttenuationSettings:unreal.UIntPtr, bAutoDestroy:Bool):unreal.UIntPtr;
public static function SpawnDialogueAttached(Dialogue:unreal.UIntPtr, Context:unreal.VariantPtr, AttachToComponent:unreal.UIntPtr, AttachPointName:unreal.VariantPtr, Location:unreal.VariantPtr, Rotation:unreal.VariantPtr, LocationType:Int, bStopWhenAttachedToDestroyed:Bool, VolumeMultiplier:cpp.Float32, PitchMultiplier:cpp.Float32, StartTime:cpp.Float32, AttenuationSettings:unreal.UIntPtr, bAutoDestroy:Bool):unreal.UIntPtr;
public static function SpawnForceFeedbackAtLocation(WorldContextObject:unreal.UIntPtr, ForceFeedbackEffect:unreal.UIntPtr, Location:unreal.VariantPtr, Rotation:unreal.VariantPtr, bLooping:Bool, IntensityMultiplier:cpp.Float32, StartTime:cpp.Float32, AttenuationSettings:unreal.UIntPtr, bAutoDestroy:Bool):unreal.UIntPtr;
public static function SpawnForceFeedbackAttached(ForceFeedbackEffect:unreal.UIntPtr, AttachToComponent:unreal.UIntPtr, AttachPointName:unreal.VariantPtr, Location:unreal.VariantPtr, Rotation:unreal.VariantPtr, LocationType:Int, bStopWhenAttachedToDestroyed:Bool, bLooping:Bool, IntensityMultiplier:cpp.Float32, StartTime:cpp.Float32, AttenuationSettings:unreal.UIntPtr, bAutoDestroy:Bool):unreal.UIntPtr;
public static function SetSubtitlesEnabled(bEnabled:Bool):Void;
public static function AreSubtitlesEnabled():Bool;
public static function SetBaseSoundMix(WorldContextObject:unreal.UIntPtr, InSoundMix:unreal.UIntPtr):Void;
public static function PrimeSound(InSound:unreal.UIntPtr):Void;
public static function PrimeAllSoundsInSoundClass(InSoundClass:unreal.UIntPtr):Void;
public static function UnRetainAllSoundsInSoundClass(InSoundClass:unreal.UIntPtr):Void;
public static function SetSoundMixClassOverride(WorldContextObject:unreal.UIntPtr, InSoundMixModifier:unreal.UIntPtr, InSoundClass:unreal.UIntPtr, Volume:cpp.Float32, Pitch:cpp.Float32, FadeInTime:cpp.Float32, bApplyToChildren:Bool):Void;
public static function ClearSoundMixClassOverride(WorldContextObject:unreal.UIntPtr, InSoundMixModifier:unreal.UIntPtr, InSoundClass:unreal.UIntPtr, FadeOutTime:cpp.Float32):Void;
public static function PushSoundMixModifier(WorldContextObject:unreal.UIntPtr, InSoundMixModifier:unreal.UIntPtr):Void;
public static function PopSoundMixModifier(WorldContextObject:unreal.UIntPtr, InSoundMixModifier:unreal.UIntPtr):Void;
public static function ClearSoundMixModifiers(WorldContextObject:unreal.UIntPtr):Void;
public static function ActivateReverbEffect(WorldContextObject:unreal.UIntPtr, ReverbEffect:unreal.UIntPtr, TagName:unreal.VariantPtr, Priority:cpp.Float32, Volume:cpp.Float32, FadeTime:cpp.Float32):Void;
public static function DeactivateReverbEffect(WorldContextObject:unreal.UIntPtr, TagName:unreal.VariantPtr):Void;
public static function GetCurrentReverbEffect(WorldContextObject:unreal.UIntPtr):unreal.UIntPtr;
public static function SetMaxAudioChannelsScaled(WorldContextObject:unreal.UIntPtr, MaxChannelCountScale:cpp.Float32):Void;
public static function GetMaxAudioChannelCount(WorldContextObject:unreal.UIntPtr):Int;
public static function SpawnDecalAtLocation(WorldContextObject:unreal.UIntPtr, DecalMaterial:unreal.UIntPtr, DecalSize:unreal.VariantPtr, Location:unreal.VariantPtr, Rotation:unreal.VariantPtr, LifeSpan:cpp.Float32):unreal.UIntPtr;
public static function SpawnDecalAttached(DecalMaterial:unreal.UIntPtr, DecalSize:unreal.VariantPtr, AttachToComponent:unreal.UIntPtr, AttachPointName:unreal.VariantPtr, Location:unreal.VariantPtr, Rotation:unreal.VariantPtr, LocationType:Int, LifeSpan:cpp.Float32):unreal.UIntPtr;
public static function MakeHitResult(bBlockingHit:Bool, bInitialOverlap:Bool, Time:cpp.Float32, Distance:cpp.Float32, Location:unreal.VariantPtr, ImpactPoint:unreal.VariantPtr, Normal:unreal.VariantPtr, ImpactNormal:unreal.VariantPtr, PhysMat:unreal.UIntPtr, HitActor:unreal.UIntPtr, HitComponent:unreal.UIntPtr, HitBoneName:unreal.VariantPtr, HitItem:Int, ElementIndex:Int, FaceIndex:Int, TraceStart:unreal.VariantPtr, TraceEnd:unreal.VariantPtr):unreal.VariantPtr;
public static function GetSurfaceType(Hit:unreal.VariantPtr):Int;
public static function FindCollisionUV(Hit:unreal.VariantPtr, UVChannel:Int, UV:unreal.VariantPtr):Bool;
public static function CreateSaveGameObject(SaveGameClass:unreal.UIntPtr):unreal.UIntPtr;
public static function SaveGameToSlot(SaveGameObject:unreal.UIntPtr, SlotName:unreal.VariantPtr, UserIndex:Int):Bool;
public static function DoesSaveGameExist(SlotName:unreal.VariantPtr, UserIndex:Int):Bool;
public static function LoadGameFromSlot(SlotName:unreal.VariantPtr, UserIndex:Int):unreal.UIntPtr;
public static function DeleteGameInSlot(SlotName:unreal.VariantPtr, UserIndex:Int):Bool;
public static function GetWorldDeltaSeconds(WorldContextObject:unreal.UIntPtr):cpp.Float32;
public static function GetTimeSeconds(WorldContextObject:unreal.UIntPtr):cpp.Float32;
public static function GetUnpausedTimeSeconds(WorldContextObject:unreal.UIntPtr):cpp.Float32;
public static function GetRealTimeSeconds(WorldContextObject:unreal.UIntPtr):cpp.Float32;
public static function GetAudioTimeSeconds(WorldContextObject:unreal.UIntPtr):cpp.Float32;
public static function GetAccurateRealTime(Seconds:Int, PartialSeconds:cpp.Float32):Void;
public static function EnableLiveStreaming(Enable:Bool):Void;
public static function GetPlatformName():unreal.VariantPtr;
public static function BlueprintSuggestProjectileVelocity(WorldContextObject:unreal.UIntPtr, TossVelocity:unreal.VariantPtr, StartLocation:unreal.VariantPtr, EndLocation:unreal.VariantPtr, LaunchSpeed:cpp.Float32, OverrideGravityZ:cpp.Float32, TraceOption:Int, CollisionRadius:cpp.Float32, bFavorHighArc:Bool, bDrawDebug:Bool):Bool;
public static function Blueprint_PredictProjectilePath_ByTraceChannel(WorldContextObject:unreal.UIntPtr, OutHit:unreal.VariantPtr, OutPathPositions:unreal.VariantPtr, OutLastTraceDestination:unreal.VariantPtr, StartPos:unreal.VariantPtr, LaunchVelocity:unreal.VariantPtr, bTracePath:Bool, ProjectileRadius:cpp.Float32, TraceChannel:Int, bTraceComplex:Bool, ActorsToIgnore:unreal.VariantPtr, DrawDebugType:Int, DrawDebugTime:cpp.Float32, SimFrequency:cpp.Float32, MaxSimTime:cpp.Float32, OverrideGravityZ:cpp.Float32):Bool;
public static function Blueprint_PredictProjectilePath_Advanced(WorldContextObject:unreal.UIntPtr, PredictParams:unreal.VariantPtr, PredictResult:unreal.VariantPtr):Bool;
public static function SuggestProjectileVelocity_CustomArc(WorldContextObject:unreal.UIntPtr, OutLaunchVelocity:unreal.VariantPtr, StartPos:unreal.VariantPtr, EndPos:unreal.VariantPtr, OverrideGravityZ:cpp.Float32, ArcParam:cpp.Float32):Bool;
public static function GetWorldOriginLocation(WorldContextObject:unreal.UIntPtr):unreal.VariantPtr;
public static function SetWorldOriginLocation(WorldContextObject:unreal.UIntPtr, NewLocation:unreal.VariantPtr):Void;
public static function RebaseLocalOriginOntoZero(WorldContextObject:unreal.UIntPtr, WorldLocation:unreal.VariantPtr):unreal.VariantPtr;
public static function RebaseZeroOriginOntoLocal(WorldContextObject:unreal.UIntPtr, WorldLocation:unreal.VariantPtr):unreal.VariantPtr;
public static function GrassOverlappingSphereCount(WorldContextObject:unreal.UIntPtr, StaticMesh:unreal.UIntPtr, CenterPosition:unreal.VariantPtr, Radius:cpp.Float32):Int;
public static function DeprojectScreenToWorld(Player:unreal.UIntPtr, ScreenPosition:unreal.VariantPtr, WorldPosition:unreal.VariantPtr, WorldDirection:unreal.VariantPtr):Bool;
public static function ProjectWorldToScreen(Player:unreal.UIntPtr, WorldPosition:unreal.VariantPtr, ScreenPosition:unreal.VariantPtr, bPlayerViewportRelative:Bool):Bool;
public static function GetViewProjectionMatrix(DesiredView:unreal.VariantPtr, ViewMatrix:unreal.VariantPtr, ProjectionMatrix:unreal.VariantPtr, ViewProjectionMatrix:unreal.VariantPtr):Void;
public static function GetKeyValue(Pair:unreal.VariantPtr, Key:unreal.VariantPtr, Value:unreal.VariantPtr):Void;
public static function ParseOption(Options:unreal.VariantPtr, Key:unreal.VariantPtr):unreal.VariantPtr;
public static function HasOption(Options:unreal.VariantPtr, InKey:unreal.VariantPtr):Bool;
public static function GetIntOption(Options:unreal.VariantPtr, Key:unreal.VariantPtr, DefaultValue:Int):Int;
public static function HasLaunchOption(OptionToCheck:unreal.VariantPtr):Bool;
public static function AnnounceAccessibleString(AnnouncementString:unreal.VariantPtr):Void;
public static function StaticClass():unreal.UIntPtr;
}