/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.oculusinput;

@:umodule("OculusInput")
@:glueCppIncludes("OculusHandComponent.h")
@:uextern @:uclass extern class UOculusHandComponent extends unreal.UPoseableMeshComponent {
  
  /**
    Whether or not the runtime skeletal mesh has been loaded and initialized
  **/
  @:uproperty public var bSkeletalMeshInitialized : Bool;
  
  /**
    List of capsule colliders created for the skeletal mesh
  **/
  @:uproperty public var CollisionCapsules : unreal.TArray<unreal.oculusinput.FOculusCapsuleCollider>;
  
  /**
    Bone mapping for custom hand skeletal meshes
  **/
  @:uproperty public var BoneNameMappings : unreal.TMap<unreal.oculusinput.EBone, unreal.FName>;
  
  /**
    Material override for the runtime skeletal mesh
  **/
  @:uproperty public var MaterialOverride : unreal.UMaterialInterface;
  
  /**
    Whether or not the hand scale should update based on values from the runtime to match the users hand scale
  **/
  @:uproperty public var bUpdateHandScale : Bool;
  
  /**
    Whether or not to initialize physics capsules on the skeletal mesh
  **/
  @:uproperty public var bInitializePhysics : Bool;
  
  /**
    Material that gets applied to the hands when the system gesture is active
  **/
  @:uproperty public var SystemGestureMaterial : unreal.UMaterialInterface;
  
  /**
    Behavior for when the system gesture is actived
  **/
  @:uproperty public var SystemGestureBehavior : unreal.oculusinput.ESystemGestureBehavior;
  
  /**
    Behavior for when hand tracking loses high confidence tracking
  **/
  @:uproperty public var ConfidenceBehavior : unreal.oculusinput.EConfidenceBehavior;
  
  /**
    The hand mesh that will be applied to the skeleton
  **/
  @:uproperty public var MeshType : unreal.oculusinput.EOculusHandType;
  
  /**
    The hand skeleton that will be loaded
  **/
  @:uproperty public var SkeletonType : unreal.oculusinput.EOculusHandType;
  
}
