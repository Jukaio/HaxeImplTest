// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/fclothphysicsproperties_legacy.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class FClothPhysicsProperties_Legacy_Glue {
public static function get_FiberResistance(self:unreal.VariantPtr):cpp.Float32;
public static function set_FiberResistance(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_FiberExpansion(self:unreal.VariantPtr):cpp.Float32;
public static function set_FiberExpansion(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_FiberCompression(self:unreal.VariantPtr):cpp.Float32;
public static function set_FiberCompression(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_SolverFrequency(self:unreal.VariantPtr):cpp.Float32;
public static function set_SolverFrequency(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_SelfCollisionStiffness(self:unreal.VariantPtr):cpp.Float32;
public static function set_SelfCollisionStiffness(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_SelfCollisionSquashScale(self:unreal.VariantPtr):cpp.Float32;
public static function set_SelfCollisionSquashScale(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_SelfCollisionThickness(self:unreal.VariantPtr):cpp.Float32;
public static function set_SelfCollisionThickness(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_InertiaBlend(self:unreal.VariantPtr):cpp.Float32;
public static function set_InertiaBlend(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_MassScale(self:unreal.VariantPtr):cpp.Float32;
public static function set_MassScale(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_GravityScale(self:unreal.VariantPtr):cpp.Float32;
public static function set_GravityScale(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_StiffnessFrequency(self:unreal.VariantPtr):cpp.Float32;
public static function set_StiffnessFrequency(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_Drag(self:unreal.VariantPtr):cpp.Float32;
public static function set_Drag(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_TetherLimit(self:unreal.VariantPtr):cpp.Float32;
public static function set_TetherLimit(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_TetherStiffness(self:unreal.VariantPtr):cpp.Float32;
public static function set_TetherStiffness(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_Damping(self:unreal.VariantPtr):cpp.Float32;
public static function set_Damping(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_Friction(self:unreal.VariantPtr):cpp.Float32;
public static function set_Friction(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_ShearResistance(self:unreal.VariantPtr):cpp.Float32;
public static function set_ShearResistance(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_BendResistance(self:unreal.VariantPtr):cpp.Float32;
public static function set_BendResistance(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_HorizontalResistance(self:unreal.VariantPtr):cpp.Float32;
public static function set_HorizontalResistance(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_VerticalResistance(self:unreal.VariantPtr):cpp.Float32;
public static function set_VerticalResistance(self:unreal.VariantPtr, value:cpp.Float32):Void;
}