// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/motosynth/umotosynthsource.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UMotoSynthSource_Glue {
public static function get_GrainTable(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_GrainTable(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_SourceSampleRate(self:unreal.UIntPtr):Int;
public static function set_SourceSampleRate(self:unreal.UIntPtr, value:Int):Void;
public static function get_SourceDataPCM(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SourceDataPCM(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_SourceData_DEPRECATED(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SourceData_DEPRECATED(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_AnalysisInputFilePath(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_AnalysisInputFilePath(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bWriteAnalysisInputToFile(self:unreal.UIntPtr):Bool;
public static function set_bWriteAnalysisInputToFile(self:unreal.UIntPtr, value:Bool):Void;
public static function get_RPMEstimationOctaveOffset(self:unreal.UIntPtr):Int;
public static function set_RPMEstimationOctaveOffset(self:unreal.UIntPtr, value:Int):Void;
public static function get_RPMFirstCycleSampleEnd(self:unreal.UIntPtr):Int;
public static function set_RPMFirstCycleSampleEnd(self:unreal.UIntPtr, value:Int):Void;
public static function get_RPMCycleCalibrationSample(self:unreal.UIntPtr):Int;
public static function set_RPMCycleCalibrationSample(self:unreal.UIntPtr, value:Int):Void;
public static function get_SampleShiftOffset(self:unreal.UIntPtr):Int;
public static function set_SampleShiftOffset(self:unreal.UIntPtr, value:Int):Void;
public static function get_bEnableNormalizationForAnalysis(self:unreal.UIntPtr):Bool;
public static function set_bEnableNormalizationForAnalysis(self:unreal.UIntPtr, value:Bool):Void;
public static function get_DynamicsProcessorReleaseTimeMsec(self:unreal.UIntPtr):cpp.Float32;
public static function set_DynamicsProcessorReleaseTimeMsec(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DynamicsProcessorAttackTimeMsec(self:unreal.UIntPtr):cpp.Float32;
public static function set_DynamicsProcessorAttackTimeMsec(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DynamicsProcessorThreshold(self:unreal.UIntPtr):cpp.Float32;
public static function set_DynamicsProcessorThreshold(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DynamicsKneeBandwidth(self:unreal.UIntPtr):cpp.Float32;
public static function set_DynamicsKneeBandwidth(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DynamicsProcessorRatio(self:unreal.UIntPtr):cpp.Float32;
public static function set_DynamicsProcessorRatio(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DynamicsProcessorInputGainDb(self:unreal.UIntPtr):cpp.Float32;
public static function set_DynamicsProcessorInputGainDb(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DynamicsProcessorLookahead(self:unreal.UIntPtr):cpp.Float32;
public static function set_DynamicsProcessorLookahead(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bEnableDynamicsProcessorForAnalysis(self:unreal.UIntPtr):Bool;
public static function set_bEnableDynamicsProcessorForAnalysis(self:unreal.UIntPtr, value:Bool):Void;
public static function get_HighPassFilterFrequency(self:unreal.UIntPtr):cpp.Float32;
public static function set_HighPassFilterFrequency(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LowPassFilterFrequency(self:unreal.UIntPtr):cpp.Float32;
public static function set_LowPassFilterFrequency(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bEnableFilteringForAnalysis(self:unreal.UIntPtr):Bool;
public static function set_bEnableFilteringForAnalysis(self:unreal.UIntPtr, value:Bool):Void;
public static function get_RPMSynthVolume(self:unreal.UIntPtr):cpp.Float32;
public static function set_RPMSynthVolume(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_RPMCurve(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_RPMCurve(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DownSampleFactor(self:unreal.UIntPtr):cpp.Float32;
public static function set_DownSampleFactor(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bConvertTo8Bit(self:unreal.UIntPtr):Bool;
public static function set_bConvertTo8Bit(self:unreal.UIntPtr, value:Bool):Void;
public static function get_SoundWaveSource(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_SoundWaveSource(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function PerformGrainTableAnalysis(self:unreal.UIntPtr):Void;
public static function PlayToneMatch(self:unreal.UIntPtr):Void;
public static function StopToneMatch(self:unreal.UIntPtr):Void;
public static function StaticClass():unreal.UIntPtr;
}