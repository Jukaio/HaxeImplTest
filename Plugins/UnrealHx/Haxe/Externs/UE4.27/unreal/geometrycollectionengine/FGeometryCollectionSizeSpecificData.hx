/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.geometrycollectionengine;

@:umodule("GeometryCollectionEngine")
@:glueCppIncludes("Public/GeometryCollection/GeometryCollectionObject.h")
@:uextern @:ustruct extern class FGeometryCollectionSizeSpecificData {
  
  /**
    Max number of particles.
  **/
  @:uproperty public var MaximumCollisionParticles : unreal.Int32;
  
  /**
    Number of particles on the triangulated surface to use for collisions.
  **/
  @:uproperty public var CollisionParticlesFraction : unreal.Float32;
  
  /**
    *  Resolution on the smallest axes for the level set. (def: 10)
  **/
  @:uproperty public var CollisionObjectReductionPercentage : unreal.Int32;
  
  /**
    *  Resolution on the smallest axes for the level set. (def: 10)
  **/
  @:uproperty public var MaxClusterLevelSetResolution : unreal.Int32;
  
  /**
    *  Resolution on the smallest axes for the level set. (def: 5)
  **/
  @:uproperty public var MinClusterLevelSetResolution : unreal.Int32;
  
  /**
    *  Resolution on the smallest axes for the level set. (def: 10)
  **/
  @:uproperty public var MaxLevelSetResolution : unreal.Int32;
  
  /**
    *  Resolution on the smallest axes for the level set. (def: 5)
  **/
  @:uproperty public var MinLevelSetResolution : unreal.Int32;
  
  /**
    *  CollisionType defines how to initialize the rigid collision structures.
  **/
  @:uproperty public var ImplicitType : unreal.chaos.EImplicitTypeEnum;
  
  /**
    *  CollisionType defines how to initialize the rigid collision structures.
  **/
  @:uproperty public var CollisionType : unreal.chaos.ECollisionTypeEnum;
  
  /**
    The max size these settings apply to
  **/
  @:uproperty public var MaxSize : unreal.Float32;
  
}
