// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/agamesession.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class AGameSession_Glue {
public static function get_SessionName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SessionName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bRequiresPushToTalk(self:unreal.UIntPtr):Bool;
public static function set_bRequiresPushToTalk(self:unreal.UIntPtr, value:Bool):Void;
public static function get_MaxSplitscreensPerConnection(self:unreal.UIntPtr):cpp.UInt8;
public static function set_MaxSplitscreensPerConnection(self:unreal.UIntPtr, value:cpp.UInt8):Void;
public static function get_MaxPartySize(self:unreal.UIntPtr):Int;
public static function set_MaxPartySize(self:unreal.UIntPtr, value:Int):Void;
public static function get_MaxPlayers(self:unreal.UIntPtr):Int;
public static function set_MaxPlayers(self:unreal.UIntPtr, value:Int):Void;
public static function get_MaxSpectators(self:unreal.UIntPtr):Int;
public static function set_MaxSpectators(self:unreal.UIntPtr, value:Int):Void;
public static function HandleStartMatchRequest(self:unreal.UIntPtr):Bool;
public static function HandleMatchIsWaitingToStart(self:unreal.UIntPtr):Void;
public static function HandleMatchHasStarted(self:unreal.UIntPtr):Void;
public static function HandleMatchHasEnded(self:unreal.UIntPtr):Void;
public static function KickPlayer(self:unreal.UIntPtr, kickerPlayer:unreal.UIntPtr, kickReason:unreal.VariantPtr):Bool;
public static function InitOptions(self:unreal.UIntPtr, Options:unreal.VariantPtr):Void;
public static function RegisterServer(self:unreal.UIntPtr):Void;
public static function RegisterServerFailed(self:unreal.UIntPtr):Void;
public static function RegisterPlayer(self:unreal.UIntPtr, NewPlayer:unreal.UIntPtr, UniqueId:unreal.VariantPtr, bWasFromInvite:Bool):Void;
public static function AtCapacity(self:unreal.UIntPtr, bSpectator:Bool):Bool;
public static function StaticClass():unreal.UIntPtr;
}