// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/agamemodebase.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class AGameModeBase_Glue {
public static function get_bUseSeamlessTravel(self:unreal.UIntPtr):Bool;
public static function set_bUseSeamlessTravel(self:unreal.UIntPtr, value:Bool):Void;
public static function get_DefaultPlayerName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DefaultPlayerName(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ServerStatReplicator(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ServerStatReplicator(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_GameState(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_GameState(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_GameSession(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_GameSession(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ServerStatReplicatorClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ServerStatReplicatorClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ReplaySpectatorPlayerControllerClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ReplaySpectatorPlayerControllerClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_SpectatorClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_SpectatorClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_DefaultPawnClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_DefaultPawnClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_HUDClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_HUDClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_PlayerStateClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PlayerStateClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_PlayerControllerClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PlayerControllerClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_GameStateClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_GameStateClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_GameSessionClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_GameSessionClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_OptionsString(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OptionsString(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function GetDefaultPawnClassForController(self:unreal.UIntPtr, InController:unreal.UIntPtr):unreal.UIntPtr;
public static function GetNumPlayers(self:unreal.UIntPtr):Int;
public static function GetNumSpectators(self:unreal.UIntPtr):Int;
public static function StartPlay(self:unreal.UIntPtr):Void;
public static function HasMatchStarted(self:unreal.UIntPtr):Bool;
public static function HasMatchEnded(self:unreal.UIntPtr):Bool;
public static function ShouldReset(self:unreal.UIntPtr, ActorToReset:unreal.UIntPtr):Bool;
public static function ResetLevel(self:unreal.UIntPtr):Void;
public static function ReturnToMainMenuHost(self:unreal.UIntPtr):Void;
public static function K2_PostLogin(self:unreal.UIntPtr, NewPlayer:unreal.UIntPtr):Void;
public static function K2_OnLogout(self:unreal.UIntPtr, ExitingController:unreal.UIntPtr):Void;
public static function HandleStartingNewPlayer(self:unreal.UIntPtr, NewPlayer:unreal.UIntPtr):Void;
public static function MustSpectate(self:unreal.UIntPtr, NewPlayerController:unreal.UIntPtr):Bool;
public static function CanSpectate(self:unreal.UIntPtr, Viewer:unreal.UIntPtr, ViewTarget:unreal.UIntPtr):Bool;
public static function ChangeName(self:unreal.UIntPtr, Controller:unreal.UIntPtr, NewName:unreal.VariantPtr, bNameChange:Bool):Void;
public static function K2_OnChangeName(self:unreal.UIntPtr, Other:unreal.UIntPtr, NewName:unreal.VariantPtr, bNameChange:Bool):Void;
public static function ChoosePlayerStart(self:unreal.UIntPtr, Player:unreal.UIntPtr):unreal.UIntPtr;
public static function FindPlayerStart(self:unreal.UIntPtr, Player:unreal.UIntPtr, IncomingName:unreal.VariantPtr):unreal.UIntPtr;
public static function K2_FindPlayerStart(self:unreal.UIntPtr, Player:unreal.UIntPtr, IncomingName:unreal.VariantPtr):unreal.UIntPtr;
public static function PlayerCanRestart(self:unreal.UIntPtr, Player:unreal.UIntPtr):Bool;
public static function RestartPlayer(self:unreal.UIntPtr, NewPlayer:unreal.UIntPtr):Void;
public static function RestartPlayerAtPlayerStart(self:unreal.UIntPtr, NewPlayer:unreal.UIntPtr, StartSpot:unreal.UIntPtr):Void;
public static function RestartPlayerAtTransform(self:unreal.UIntPtr, NewPlayer:unreal.UIntPtr, SpawnTransform:unreal.VariantPtr):Void;
public static function SpawnDefaultPawnFor(self:unreal.UIntPtr, NewPlayer:unreal.UIntPtr, StartSpot:unreal.UIntPtr):unreal.UIntPtr;
public static function SpawnDefaultPawnAtTransform(self:unreal.UIntPtr, NewPlayer:unreal.UIntPtr, SpawnTransform:unreal.VariantPtr):unreal.UIntPtr;
public static function InitStartSpot(self:unreal.UIntPtr, StartSpot:unreal.UIntPtr, NewPlayer:unreal.UIntPtr):Void;
public static function K2_OnRestartPlayer(self:unreal.UIntPtr, NewPlayer:unreal.UIntPtr):Void;
public static function InitializeHUDForPlayer(self:unreal.UIntPtr, NewPlayer:unreal.UIntPtr):Void;
public static function K2_OnSwapPlayerControllers(self:unreal.UIntPtr, OldPC:unreal.UIntPtr, NewPC:unreal.UIntPtr):Void;
public static function get_bStartPlayersAsSpectators(self:unreal.UIntPtr):Bool;
public static function set_bStartPlayersAsSpectators(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bPauseable(self:unreal.UIntPtr):Bool;
public static function set_bPauseable(self:unreal.UIntPtr, value:Bool):Void;
public static function ShouldSpawnAtStartSpot(self:unreal.UIntPtr, player:unreal.UIntPtr):Bool;
public static function PreLogin(self:unreal.UIntPtr, Options:unreal.VariantPtr, Address:unreal.VariantPtr, UniqueId:unreal.VariantPtr, ErrorMessage:unreal.VariantPtr):Void;
public static function InitNewPlayer(self:unreal.UIntPtr, NewPlayerController:unreal.UIntPtr, UniqueId:unreal.VariantPtr, Options:unreal.VariantPtr, Portal:unreal.VariantPtr):unreal.VariantPtr;
public static function InitGameState(self:unreal.UIntPtr):Void;
public static function PostLogin(self:unreal.UIntPtr, NewPlayer:unreal.UIntPtr):Void;
public static function Logout(self:unreal.UIntPtr, Exiting:unreal.UIntPtr):Void;
public static function SetPlayerDefaults(self:unreal.UIntPtr, PlayerPawn:unreal.UIntPtr):Void;
public static function InitSeamlessTravelPlayer(self:unreal.UIntPtr, Controller:unreal.UIntPtr):Void;
public static function PostSeamlessTravel(self:unreal.UIntPtr):Void;
public static function GetSeamlessTravelActorList(self:unreal.UIntPtr, bToEntry:Bool, actorList:unreal.VariantPtr):Void;
public static function AllowCheats(self:unreal.UIntPtr, P:unreal.UIntPtr):Bool;
public static function PlayerCanRestart_Implementation(self:unreal.UIntPtr, Player:unreal.UIntPtr):Bool;
public static function ChoosePlayerStart_Implementation(self:unreal.UIntPtr, player:unreal.UIntPtr):unreal.UIntPtr;
public static function GetDefaultPawnClassForController_Implementation(self:unreal.UIntPtr, inController:unreal.UIntPtr):unreal.UIntPtr;
public static function HandleStartingNewPlayer_Implementation(self:unreal.UIntPtr, NewPlayer:unreal.UIntPtr):Void;
public static function MustSpectate_Implementation(self:unreal.UIntPtr, NewPlayerController:unreal.UIntPtr):Bool;
public static function FinishRestartPlayer(self:unreal.UIntPtr, NewPlayer:unreal.UIntPtr, StartRotation:unreal.VariantPtr):Void;
public static function StaticClass():unreal.UIntPtr;
}