/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.audiosynesthesia;

/**
  ULoudnessNRTSettings
  
  Settings for a ULoudnessNRT analyzer.
**/
@:umodule("AudioSynesthesia")
@:glueCppIncludes("LoudnessNRT.h")
@:uextern @:uclass extern class ULoudnessNRTSettings extends unreal.audiosynesthesia.UAudioSynesthesiaNRTSettings {
  
  /**
    dB level to denote silence.  Used when calculating normalized loudness.
  **/
  @:uproperty public var NoiseFloorDb : unreal.Float32;
  
  /**
    Type of equal loudness curve used in calculations
  **/
  @:uproperty public var CurveType : unreal.audiosynesthesia.ELoudnessNRTCurveTypeEnum;
  
  /**
    Maximum analysis frequency for calculating loudness.
  **/
  @:uproperty public var MaximumFrequency : unreal.Float32;
  
  /**
    Minimum analysis frequency for calculating loudness.
  **/
  @:uproperty public var MinimumFrequency : unreal.Float32;
  
  /**
    Number of seconds between loudness measurements
  **/
  @:uproperty public var AnalysisPeriod : unreal.Float32;
  
}
