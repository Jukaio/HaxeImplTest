/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.synthesis;

@:umodule("Synthesis")
@:glueCppIncludes("Classes/SubmixEffects/SubmixEffectConvolutionReverb.h")
@:uextern @:ustruct extern class FSubmixEffectConvolutionReverbSettings {
  @:deprecated @:uproperty public var AllowHardwareAcceleration_DEPRECATED : Bool;
  @:deprecated @:uproperty public var ImpulseResponse_DEPRECATED : unreal.synthesis.UAudioImpulseResponse;
  @:deprecated @:uproperty public var SurroundRearChannelBleedAmount_DEPRECATED : unreal.Float32;
  
  /**
    If true, send Surround Rear Channel Bleed Amount sends front left to back right and vice versa
  **/
  @:uproperty public var bSurroundRearChannelFlip : Bool;
  
  /**
    If true, rear channel bleed sends will have their phase inverted.
  **/
  @:uproperty public var bInvertRearChannelBleedPhase : Bool;
  
  /**
    Amout of audio to be sent to rear channels in quad/surround configurations
  **/
  @:uproperty public var SurroundRearChannelBleedDb : unreal.Float32;
  
  /**
    If true, the reverberated audio is upmixed or downmixed to match the submix
           * output audio format. If false, the reverberated audio's channels are matched
           * to the submixs output audio channels.
  **/
  @:uproperty public var bMixReverbOutputToOutputChannelFormat : Bool;
  
  /**
    If true, the submix input audio is downmixed to match the IR asset audio channel
           * format. If false, the input audio's channels are matched to the IR assets
           * audio channels.
  **/
  @:uproperty public var bMixInputChannelFormatToImpulseResponseFormat : Bool;
  
  /**
    If true, input audio is directly routed to output audio with applying any effect.
  **/
  @:uproperty public var bBypass : Bool;
  
  /**
    Used to account for energy added by convolution with "loud" Impulse Responses.
           * This value is not directly editable in the editor because it is copied from the
           * associated UAudioImpulseResponse.
  **/
  @:uproperty public var NormalizationVolumeDb : unreal.Float32;
  
}
