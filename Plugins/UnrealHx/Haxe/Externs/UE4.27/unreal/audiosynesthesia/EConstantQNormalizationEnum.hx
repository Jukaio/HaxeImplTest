/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.audiosynesthesia;

/**
  EConstantQNormalizationEnum
  
  Enumeration of available normalization schemes for ConstantQ frequency domain windows.
**/
@:umodule("AudioSynesthesia")
@:glueCppIncludes("Classes/ConstantQNRT.h")
@:uname("EConstantQNormalizationEnum")
@:class @:uextern @:uenum extern enum EConstantQNormalizationEnum {
  
  /**
    Normalize bands by euclidean norm. Good when using magnitude spectrum.
    @DisplayName Equal Euclidean Norm
  **/
  @DisplayName("Equal Euclidean Norm")
  EqualEuclideanNorm;
  
  /**
    Normalize bands by energy. Good when using power spectrum.
    @DisplayName Equal Energy
  **/
  @DisplayName("Equal Energy")
  EqualEnergy;
  
  /**
    Normalize bands by their maximum values. Will result in relatively strong high frequences because the upper constant Q bands have larger bandwidths.
    @DisplayName Equal Amplitude
  **/
  @DisplayName("Equal Amplitude")
  EqualAmplitude;
  
}
