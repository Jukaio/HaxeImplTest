/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.geometrycollectionengine;

@:umodule("GeometryCollectionEngine")
@:glueCppIncludes("GeometryCollection/StaticMeshSimulationComponent.h")
@:uextern @:uclass extern class UStaticMeshSimulationComponent extends unreal.UActorComponent implements unreal.chaossolverengine.IChaosNotifyHandlerInterface {
  @:uproperty public var OnChaosPhysicsCollision : unreal.chaossolverengine.FOnChaosPhysicsCollision;
  
  /**
    Chaos RBD Solver
  **/
  @:uproperty public var ChaosSolverActor : unreal.chaossolverengine.AChaosSolverActor;
  
  /**
    Physical Properties
  **/
  @:uproperty public var PhysicalMaterial : unreal.physicscore.UChaosPhysicalMaterial;
  
  /**
    Damage threshold for clusters.
  **/
  @:uproperty public var DamageThreshold : unreal.Float32;
  @:uproperty public var InitialAngularVelocity : unreal.FVector;
  @:uproperty public var InitialLinearVelocity : unreal.FVector;
  @:uproperty public var InitialVelocityType : unreal.chaos.EInitialVelocityTypeEnum;
  
  /**
    *  Resolution on the smallest axes for the level set. (def: 10)
  **/
  @:uproperty public var MaxLevelSetResolution : unreal.Int32;
  
  /**
    *  Resolution on the smallest axes for the level set. (def: 5)
  **/
  @:uproperty public var MinLevelSetResolution : unreal.Int32;
  
  /**
    CollisionType defines how to initialize the rigid collision structures.
  **/
  @:uproperty public var ImplicitType : unreal.chaos.EImplicitTypeEnum;
  
  /**
    CollisionType defines how to initialize the rigid collision structures.
  **/
  @:uproperty public var CollisionType : unreal.chaos.ECollisionTypeEnum;
  
  /**
    Mass in Kg
  **/
  @:uproperty public var Mass : unreal.Float32;
  
  /**
    ObjectType defines how to initialize the rigid collision structures.
  **/
  @:uproperty public var ObjectType : unreal.chaos.EObjectStateTypeEnum;
  
  /**
    If true, this component will get collision notification events (@see IChaosNotifyHandlerInterface)
  **/
  @:uproperty public var bNotifyCollisions : Bool;
  
  /**
    When Simulating is enabled the Component will initialize its rigid bodies within the solver.
  **/
  @:uproperty public var Simulating : Bool;
  @:ufunction(BlueprintImplementableEvent) public function ReceivePhysicsCollision(CollisionInfo : unreal.Const<unreal.PRef<unreal.chaossolverengine.FChaosPhysicsCollisionInfo>>) : Void;
  
  /**
    Changes whether or not this component will get future break notifications.
  **/
  @:ufunction(BlueprintCallable) @:final public function ForceRecreatePhysicsState() : Void;
  // ChaosNotifyHandlerInterface interface implementation
  
}
