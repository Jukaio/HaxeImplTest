// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/common/unreal/fstringimpl.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class FStringImpl_Glue {
public static function create(text:unreal.UIntPtr):unreal.VariantPtr;
public static function createEmpty():unreal.VariantPtr;
public static function createNew(text:unreal.UIntPtr):unreal.VariantPtr;
public static function op_Dereference(self:unreal.VariantPtr):unreal.UIntPtr;
public static function IsEmpty(self:unreal.VariantPtr):Bool;
public static function ToBool(self:unreal.VariantPtr):Bool;
public static function Empty(self:unreal.VariantPtr, slack:Int):Void;
public static function Len(self:unreal.VariantPtr):Int;
public static function Append(self:unreal.VariantPtr, text:unreal.VariantPtr):unreal.VariantPtr;
public static function AppendText(self:unreal.VariantPtr, text:unreal.UIntPtr, count:Int):unreal.VariantPtr;
public static function InsertAt(self:unreal.VariantPtr, index:Int, chars:unreal.VariantPtr):Void;
public static function Compare(self:unreal.VariantPtr, Other:unreal.VariantPtr, SearchCase:Int):Int;
public static function RemoveFromStart(self:unreal.VariantPtr, str:unreal.VariantPtr, SearchCase:Int):Bool;
public static function RemoveFromEnd(self:unreal.VariantPtr, InSuffix:unreal.VariantPtr, SearchCase:Int):Bool;
public static function Split(self:unreal.VariantPtr, InS:unreal.VariantPtr, LeftS:unreal.VariantPtr, RightS:unreal.VariantPtr, SearchCase:Int, SearchDir:Int):Bool;
public static function ToLowerInline(self:unreal.VariantPtr):Void;
public static function ToUpperInline(self:unreal.VariantPtr):Void;
public static function copyNew(self:unreal.VariantPtr):unreal.VariantPtr;
public static function copy(self:unreal.VariantPtr):unreal.VariantPtr;
public static function assign(self:unreal.VariantPtr, val:unreal.VariantPtr):Void;
public static function equals(self:unreal.VariantPtr, other:unreal.VariantPtr):Bool;
}