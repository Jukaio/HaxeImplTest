// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/animationmodifiers/uanimationblueprintlibrary.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UAnimationBlueprintLibrary_Glue {
public static function GetNumFrames(AnimationSequence:unreal.UIntPtr, NumFrames:Int):Void;
public static function GetAnimationTrackNames(AnimationSequence:unreal.UIntPtr, TrackNames:unreal.VariantPtr):Void;
public static function GetAnimationCurveNames(AnimationSequence:unreal.UIntPtr, CurveType:Int, CurveNames:unreal.VariantPtr):Void;
public static function GetRawTrackPositionData(AnimationSequence:unreal.UIntPtr, TrackName:unreal.VariantPtr, PositionData:unreal.VariantPtr):Void;
public static function GetRawTrackRotationData(AnimationSequence:unreal.UIntPtr, TrackName:unreal.VariantPtr, RotationData:unreal.VariantPtr):Void;
public static function GetRawTrackScaleData(AnimationSequence:unreal.UIntPtr, TrackName:unreal.VariantPtr, ScaleData:unreal.VariantPtr):Void;
public static function GetRawTrackData(AnimationSequence:unreal.UIntPtr, TrackName:unreal.VariantPtr, PositionKeys:unreal.VariantPtr, RotationKeys:unreal.VariantPtr, ScalingKeys:unreal.VariantPtr):Void;
public static function IsValidRawAnimationTrackName(AnimationSequence:unreal.UIntPtr, TrackName:unreal.VariantPtr):Bool;
public static function SetBoneCompressionSettings(AnimationSequence:unreal.UIntPtr, CompressionSettings:unreal.UIntPtr):Void;
public static function SetCurveCompressionSettings(AnimationSequence:unreal.UIntPtr, CompressionSettings:unreal.UIntPtr):Void;
public static function GetAdditiveAnimationType(AnimationSequence:unreal.UIntPtr, AdditiveAnimationType:unreal.UIntPtr):Void;
public static function SetAdditiveAnimationType(AnimationSequence:unreal.UIntPtr, AdditiveAnimationType:Int):Void;
public static function GetAdditiveBasePoseType(AnimationSequence:unreal.UIntPtr, AdditiveBasePoseType:unreal.UIntPtr):Void;
public static function SetAdditiveBasePoseType(AnimationSequence:unreal.UIntPtr, AdditiveBasePoseType:Int):Void;
public static function GetAnimationInterpolationType(AnimationSequence:unreal.UIntPtr, InterpolationType:unreal.UIntPtr):Void;
public static function SetAnimationInterpolationType(AnimationSequence:unreal.UIntPtr, InterpolationType:Int):Void;
public static function IsRootMotionEnabled(AnimationSequence:unreal.UIntPtr):Bool;
public static function SetRootMotionEnabled(AnimationSequence:unreal.UIntPtr, bEnabled:Bool):Void;
public static function GetRootMotionLockType(AnimationSequence:unreal.UIntPtr, LockType:unreal.UIntPtr):Void;
public static function SetRootMotionLockType(AnimationSequence:unreal.UIntPtr, RootMotionLockType:Int):Void;
public static function IsRootMotionLockForced(AnimationSequence:unreal.UIntPtr):Bool;
public static function SetIsRootMotionLockForced(AnimationSequence:unreal.UIntPtr, bForced:Bool):Void;
public static function GetAnimationSyncMarkers(AnimationSequence:unreal.UIntPtr, Markers:unreal.VariantPtr):Void;
public static function GetUniqueMarkerNames(AnimationSequence:unreal.UIntPtr, MarkerNames:unreal.VariantPtr):Void;
public static function AddAnimationSyncMarker(AnimationSequence:unreal.UIntPtr, MarkerName:unreal.VariantPtr, Time:cpp.Float32, NotifyTrackName:unreal.VariantPtr):Void;
public static function IsValidAnimationSyncMarkerName(AnimationSequence:unreal.UIntPtr, MarkerName:unreal.VariantPtr):Bool;
public static function RemoveAnimationSyncMarkersByName(AnimationSequence:unreal.UIntPtr, MarkerName:unreal.VariantPtr):Int;
public static function RemoveAnimationSyncMarkersByTrack(AnimationSequence:unreal.UIntPtr, NotifyTrackName:unreal.VariantPtr):Int;
public static function RemoveAllAnimationSyncMarkers(AnimationSequence:unreal.UIntPtr):Void;
public static function GetAnimationNotifyEvents(AnimationSequence:unreal.UIntPtr, NotifyEvents:unreal.VariantPtr):Void;
public static function GetAnimationNotifyEventNames(AnimationSequence:unreal.UIntPtr, EventNames:unreal.VariantPtr):Void;
public static function AddAnimationNotifyEvent(AnimationSequence:unreal.UIntPtr, NotifyTrackName:unreal.VariantPtr, StartTime:cpp.Float32, NotifyClass:unreal.UIntPtr):unreal.UIntPtr;
public static function AddAnimationNotifyStateEvent(AnimationSequence:unreal.UIntPtr, NotifyTrackName:unreal.VariantPtr, StartTime:cpp.Float32, Duration:cpp.Float32, NotifyStateClass:unreal.UIntPtr):unreal.UIntPtr;
public static function AddAnimationNotifyEventObject(AnimationSequence:unreal.UIntPtr, StartTime:cpp.Float32, Notify:unreal.UIntPtr, NotifyTrackName:unreal.VariantPtr):Void;
public static function AddAnimationNotifyStateEventObject(AnimationSequence:unreal.UIntPtr, StartTime:cpp.Float32, Duration:cpp.Float32, NotifyState:unreal.UIntPtr, NotifyTrackName:unreal.VariantPtr):Void;
public static function RemoveAnimationNotifyEventsByName(AnimationSequence:unreal.UIntPtr, NotifyName:unreal.VariantPtr):Int;
public static function RemoveAnimationNotifyEventsByTrack(AnimationSequence:unreal.UIntPtr, NotifyTrackName:unreal.VariantPtr):Int;
public static function ReplaceAnimNotifyStates(AnimationSequence:unreal.UIntPtr, OldNotifyClass:unreal.UIntPtr, NewNotifyClass:unreal.UIntPtr, OnNotifyStateReplaced:unreal.VariantPtr):Void;
public static function ReplaceAnimNotifies(AnimationSequence:unreal.UIntPtr, OldNotifyClass:unreal.UIntPtr, NewNotifyClass:unreal.UIntPtr, OnNotifyReplaced:unreal.VariantPtr):Void;
public static function CopyAnimNotifiesFromSequence(SrcAnimSequence:unreal.UIntPtr, DestAnimSequence:unreal.UIntPtr):Void;
public static function GetAnimationNotifyTrackNames(AnimationSequence:unreal.UIntPtr, TrackNames:unreal.VariantPtr):Void;
public static function AddAnimationNotifyTrack(AnimationSequence:unreal.UIntPtr, NotifyTrackName:unreal.VariantPtr, TrackColor:unreal.VariantPtr):Void;
public static function RemoveAnimationNotifyTrack(AnimationSequence:unreal.UIntPtr, NotifyTrackName:unreal.VariantPtr):Void;
public static function RemoveAllAnimationNotifyTracks(AnimationSequence:unreal.UIntPtr):Void;
public static function IsValidAnimNotifyTrackName(AnimationSequence:unreal.UIntPtr, NotifyTrackName:unreal.VariantPtr):Bool;
public static function GetAnimNotifyEventTriggerTime(NotifyEvent:unreal.VariantPtr):cpp.Float32;
public static function GetAnimationSyncMarkersForTrack(AnimationSequence:unreal.UIntPtr, NotifyTrackName:unreal.VariantPtr, Markers:unreal.VariantPtr):Void;
public static function GetAnimationNotifyEventsForTrack(AnimationSequence:unreal.UIntPtr, NotifyTrackName:unreal.VariantPtr, Events:unreal.VariantPtr):Void;
public static function AddCurve(AnimationSequence:unreal.UIntPtr, CurveName:unreal.VariantPtr, CurveType:Int, bMetaDataCurve:Bool):Void;
public static function RemoveCurve(AnimationSequence:unreal.UIntPtr, CurveName:unreal.VariantPtr, bRemoveNameFromSkeleton:Bool):Void;
public static function RemoveAllCurveData(AnimationSequence:unreal.UIntPtr):Void;
public static function AddTransformationCurveKey(AnimationSequence:unreal.UIntPtr, CurveName:unreal.VariantPtr, Time:cpp.Float32, Transform:unreal.VariantPtr):Void;
public static function AddTransformationCurveKeys(AnimationSequence:unreal.UIntPtr, CurveName:unreal.VariantPtr, Times:unreal.VariantPtr, Transforms:unreal.VariantPtr):Void;
public static function AddFloatCurveKey(AnimationSequence:unreal.UIntPtr, CurveName:unreal.VariantPtr, Time:cpp.Float32, Value:cpp.Float32):Void;
public static function AddFloatCurveKeys(AnimationSequence:unreal.UIntPtr, CurveName:unreal.VariantPtr, Times:unreal.VariantPtr, Values:unreal.VariantPtr):Void;
public static function AddVectorCurveKey(AnimationSequence:unreal.UIntPtr, CurveName:unreal.VariantPtr, Time:cpp.Float32, Vector:unreal.VariantPtr):Void;
public static function AddVectorCurveKeys(AnimationSequence:unreal.UIntPtr, CurveName:unreal.VariantPtr, Times:unreal.VariantPtr, Vectors:unreal.VariantPtr):Void;
public static function DoesBoneNameExist(AnimationSequence:unreal.UIntPtr, BoneName:unreal.VariantPtr, bExists:Bool):Void;
public static function GetFloatKeys(AnimationSequence:unreal.UIntPtr, CurveName:unreal.VariantPtr, Times:unreal.VariantPtr, Values:unreal.VariantPtr):Void;
public static function GetVectorKeys(AnimationSequence:unreal.UIntPtr, CurveName:unreal.VariantPtr, Times:unreal.VariantPtr, Values:unreal.VariantPtr):Void;
public static function GetTransformationKeys(AnimationSequence:unreal.UIntPtr, CurveName:unreal.VariantPtr, Times:unreal.VariantPtr, Values:unreal.VariantPtr):Void;
public static function RemoveBoneAnimation(AnimationSequence:unreal.UIntPtr, BoneName:unreal.VariantPtr, bIncludeChildren:Bool, bFinalize:Bool):Void;
public static function RemoveAllBoneAnimation(AnimationSequence:unreal.UIntPtr):Void;
public static function FinalizeBoneAnimation(AnimationSequence:unreal.UIntPtr):Void;
public static function DoesCurveExist(AnimationSequence:unreal.UIntPtr, CurveName:unreal.VariantPtr, CurveType:Int):Bool;
public static function AddMetaDataObject(AnimationSequence:unreal.UIntPtr, MetaDataObject:unreal.UIntPtr):Void;
public static function RemoveAllMetaData(AnimationSequence:unreal.UIntPtr):Void;
public static function RemoveMetaData(AnimationSequence:unreal.UIntPtr, MetaDataObject:unreal.UIntPtr):Void;
public static function RemoveMetaDataOfClass(AnimationSequence:unreal.UIntPtr, MetaDataClass:unreal.UIntPtr):Void;
public static function GetMetaData(AnimationSequence:unreal.UIntPtr, MetaData:unreal.VariantPtr):Void;
public static function GetMetaDataOfClass(AnimationSequence:unreal.UIntPtr, MetaDataClass:unreal.UIntPtr, MetaDataOfClass:unreal.VariantPtr):Void;
public static function ContainsMetaDataOfClass(AnimationSequence:unreal.UIntPtr, MetaDataClass:unreal.UIntPtr):Bool;
public static function GetBonePoseForTime(AnimationSequence:unreal.UIntPtr, BoneName:unreal.VariantPtr, Time:cpp.Float32, bExtractRootMotion:Bool, Pose:unreal.VariantPtr):Void;
public static function GetBonePoseForFrame(AnimationSequence:unreal.UIntPtr, BoneName:unreal.VariantPtr, Frame:Int, bExtractRootMotion:Bool, Pose:unreal.VariantPtr):Void;
public static function GetBonePosesForTime(AnimationSequence:unreal.UIntPtr, BoneNames:unreal.VariantPtr, Time:cpp.Float32, bExtractRootMotion:Bool, Poses:unreal.VariantPtr, PreviewMesh:unreal.UIntPtr):Void;
public static function GetBonePosesForFrame(AnimationSequence:unreal.UIntPtr, BoneNames:unreal.VariantPtr, Frame:Int, bExtractRootMotion:Bool, Poses:unreal.VariantPtr, PreviewMesh:unreal.UIntPtr):Void;
public static function AddVirtualBone(AnimationSequence:unreal.UIntPtr, SourceBoneName:unreal.VariantPtr, TargetBoneName:unreal.VariantPtr, VirtualBoneName:unreal.VariantPtr):Void;
public static function RemoveVirtualBone(AnimationSequence:unreal.UIntPtr, VirtualBoneName:unreal.VariantPtr):Void;
public static function RemoveVirtualBones(AnimationSequence:unreal.UIntPtr, VirtualBoneNames:unreal.VariantPtr):Void;
public static function RemoveAllVirtualBones(AnimationSequence:unreal.UIntPtr):Void;
public static function GetSequenceLength(AnimationSequence:unreal.UIntPtr, Length:cpp.Float32):Void;
public static function GetRateScale(AnimationSequence:unreal.UIntPtr, RateScale:cpp.Float32):Void;
public static function SetRateScale(AnimationSequence:unreal.UIntPtr, RateScale:cpp.Float32):Void;
public static function GetFrameAtTime(AnimationSequence:unreal.UIntPtr, Time:cpp.Float32, Frame:Int):Void;
public static function GetTimeAtFrame(AnimationSequence:unreal.UIntPtr, Frame:Int, Time:cpp.Float32):Void;
public static function IsValidTime(AnimationSequence:unreal.UIntPtr, Time:cpp.Float32, IsValid:Bool):Void;
public static function FindBonePathToRoot(AnimationSequence:unreal.UIntPtr, BoneName:unreal.VariantPtr, BonePath:unreal.VariantPtr):Void;
public static function StaticClass():unreal.UIntPtr;
}