/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.fieldsystemengine;

/**
  Compute an operation between 2 incoming fields
**/
@:umodule("FieldSystemEngine")
@:glueCppIncludes("Field/FieldSystemObjects.h")
@:uextern @:uclass extern class UOperatorField extends unreal.fieldsystemengine.UFieldNodeBase {
  
  /**
    Type of operation you want to perform between the 2 fields
  **/
  @:uproperty public var Operation : unreal.chaos.EFieldOperationType;
  
  /**
    Left field to be processed
  **/
  @:uproperty public var LeftField : unreal.fieldsystemengine.UFieldNodeBase;
  
  /**
    Right field to be processed
  **/
  @:uproperty public var RightField : unreal.fieldsystemengine.UFieldNodeBase;
  
  /**
    Magnitude of the operator field
  **/
  @:uproperty public var Magnitude : unreal.Float32;
  
  /**
    Compute an operation between 2 incoming fields
    @param    Magnitude Magnitude of the operator field
    @param    LeftField Input field A to be processed
    @param    RightField Input field B to be processed
    @param    Operation Type of math operation you want to perform between the 2 fields
  **/
  @:ufunction(BlueprintCallable) @:final public function SetOperatorField(@:bpopt("1.0") Magnitude : unreal.Float32, LeftField : unreal.Const<unreal.fieldsystemengine.UFieldNodeBase>, RightField : unreal.Const<unreal.fieldsystemengine.UFieldNodeBase>, Operation : unreal.chaos.EFieldOperationType) : unreal.fieldsystemengine.UOperatorField;
  
}
