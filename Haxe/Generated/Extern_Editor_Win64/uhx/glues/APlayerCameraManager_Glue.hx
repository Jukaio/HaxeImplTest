// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/aplayercameramanager.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class APlayerCameraManager_Glue {
public static function get_ViewRollMax(self:unreal.UIntPtr):cpp.Float32;
public static function set_ViewRollMax(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ViewRollMin(self:unreal.UIntPtr):cpp.Float32;
public static function set_ViewRollMin(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ViewYawMax(self:unreal.UIntPtr):cpp.Float32;
public static function set_ViewYawMax(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ViewYawMin(self:unreal.UIntPtr):cpp.Float32;
public static function set_ViewYawMin(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ViewPitchMax(self:unreal.UIntPtr):cpp.Float32;
public static function set_ViewPitchMax(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ViewPitchMin(self:unreal.UIntPtr):cpp.Float32;
public static function set_ViewPitchMin(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bGameCameraCutThisFrame(self:unreal.UIntPtr):Bool;
public static function set_bGameCameraCutThisFrame(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseClientSideCameraUpdates(self:unreal.UIntPtr):Bool;
public static function set_bUseClientSideCameraUpdates(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bClientSimulatingViewTarget(self:unreal.UIntPtr):Bool;
public static function set_bClientSimulatingViewTarget(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bDefaultConstrainAspectRatio(self:unreal.UIntPtr):Bool;
public static function set_bDefaultConstrainAspectRatio(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bIsOrthographic(self:unreal.UIntPtr):Bool;
public static function set_bIsOrthographic(self:unreal.UIntPtr, value:Bool):Void;
public static function get_AnimCameraActor(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_AnimCameraActor(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_FreeAnims(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_FreeAnims(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ActiveAnims(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ActiveAnims(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PostProcessBlendCache(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PostProcessBlendCache(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_CachedCameraShakeMod(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_CachedCameraShakeMod(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_CameraLensEffects(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_CameraLensEffects(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnAudioFadeChangeEvent(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnAudioFadeChangeEvent(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ViewTargetOffset(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ViewTargetOffset(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_FreeCamOffset(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_FreeCamOffset(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_FreeCamDistance(self:unreal.UIntPtr):cpp.Float32;
public static function set_FreeCamDistance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DefaultModifiers(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_DefaultModifiers(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ModifierList(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ModifierList(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PendingViewTarget(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PendingViewTarget(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ViewTarget(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ViewTarget(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LastFrameCameraCache(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LastFrameCameraCache(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_CameraCache(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_CameraCache(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DefaultAspectRatio(self:unreal.UIntPtr):cpp.Float32;
public static function set_DefaultAspectRatio(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DefaultOrthoWidth(self:unreal.UIntPtr):cpp.Float32;
public static function set_DefaultOrthoWidth(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DefaultFOV(self:unreal.UIntPtr):cpp.Float32;
public static function set_DefaultFOV(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_PCOwner(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PCOwner(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function PhotographyCameraModify(self:unreal.UIntPtr, NewCameraLocation:unreal.VariantPtr, PreviousCameraLocation:unreal.VariantPtr, OriginalCameraLocation:unreal.VariantPtr, ResultCameraLocation:unreal.VariantPtr):Void;
public static function OnPhotographySessionStart(self:unreal.UIntPtr):Void;
public static function OnPhotographySessionEnd(self:unreal.UIntPtr):Void;
public static function OnPhotographyMultiPartCaptureStart(self:unreal.UIntPtr):Void;
public static function OnPhotographyMultiPartCaptureEnd(self:unreal.UIntPtr):Void;
public static function BlueprintUpdateCamera(self:unreal.UIntPtr, CameraTarget:unreal.UIntPtr, NewCameraLocation:unreal.VariantPtr, NewCameraRotation:unreal.VariantPtr, NewCameraFOV:cpp.Float32):Bool;
public static function GetOwningPlayerController(self:unreal.UIntPtr):unreal.UIntPtr;
public static function AddNewCameraModifier(self:unreal.UIntPtr, ModifierClass:unreal.UIntPtr):unreal.UIntPtr;
public static function FindCameraModifierByClass(self:unreal.UIntPtr, ModifierClass:unreal.UIntPtr):unreal.UIntPtr;
public static function RemoveCameraModifier(self:unreal.UIntPtr, ModifierToRemove:unreal.UIntPtr):Bool;
public static function GetFOVAngle(self:unreal.UIntPtr):cpp.Float32;
public static function GetCameraRotation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function GetCameraLocation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function AddCameraLensEffect(self:unreal.UIntPtr, LensEffectEmitterClass:unreal.UIntPtr):unreal.UIntPtr;
public static function RemoveCameraLensEffect(self:unreal.UIntPtr, Emitter:unreal.UIntPtr):Void;
public static function ClearCameraLensEffects(self:unreal.UIntPtr):Void;
public static function StartCameraShake(self:unreal.UIntPtr, ShakeClass:unreal.UIntPtr, Scale:cpp.Float32, PlaySpace:Int, UserPlaySpaceRot:unreal.VariantPtr):unreal.UIntPtr;
public static function StartCameraShakeFromSource(self:unreal.UIntPtr, ShakeClass:unreal.UIntPtr, SourceComponent:unreal.UIntPtr, Scale:cpp.Float32, PlaySpace:Int, UserPlaySpaceRot:unreal.VariantPtr):unreal.UIntPtr;
public static function StopCameraShake(self:unreal.UIntPtr, ShakeInstance:unreal.UIntPtr, bImmediately:Bool):Void;
public static function StopAllInstancesOfCameraShake(self:unreal.UIntPtr, Shake:unreal.UIntPtr, bImmediately:Bool):Void;
public static function StopAllCameraShakes(self:unreal.UIntPtr, bImmediately:Bool):Void;
public static function StopAllInstancesOfCameraShakeFromSource(self:unreal.UIntPtr, Shake:unreal.UIntPtr, SourceComponent:unreal.UIntPtr, bImmediately:Bool):Void;
public static function StopAllCameraShakesFromSource(self:unreal.UIntPtr, SourceComponent:unreal.UIntPtr, bImmediately:Bool):Void;
public static function StartCameraFade(self:unreal.UIntPtr, FromAlpha:cpp.Float32, ToAlpha:cpp.Float32, Duration:cpp.Float32, Color:unreal.VariantPtr, bShouldFadeAudio:Bool, bHoldWhenFinished:Bool):Void;
public static function StopCameraFade(self:unreal.UIntPtr):Void;
public static function SetManualCameraFade(self:unreal.UIntPtr, InFadeAmount:cpp.Float32, Color:unreal.VariantPtr, bInFadeAudio:Bool):Void;
public static function PlayCameraAnim(self:unreal.UIntPtr, Anim:unreal.UIntPtr, Rate:cpp.Float32, Scale:cpp.Float32, BlendInTime:cpp.Float32, BlendOutTime:cpp.Float32, bLoop:Bool, bRandomStartTime:Bool, Duration:cpp.Float32, PlaySpace:Int, UserPlaySpaceRot:unreal.VariantPtr):unreal.UIntPtr;
public static function StopAllInstancesOfCameraAnim(self:unreal.UIntPtr, Anim:unreal.UIntPtr, bImmediate:Bool):Void;
public static function StopCameraAnimInst(self:unreal.UIntPtr, AnimInst:unreal.UIntPtr, bImmediate:Bool):Void;
public static function StopAllCameraAnims(self:unreal.UIntPtr, bImmediate:Bool):Void;
public static function SetGameCameraCutThisFrame(self:unreal.UIntPtr):Void;
public static function SwapPendingViewTargetWhenUsingClientSideCameraUpdates(self:unreal.UIntPtr):Void;
public static function UpdateCamera(self:unreal.UIntPtr, DeltaTime:cpp.Float32):Void;
public static function SetViewTarget(self:unreal.UIntPtr, NewViewTarget:unreal.UIntPtr, TransitionParams:unreal.VariantPtr):Void;
public static function GetViewTarget(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GetViewTargetPawn(self:unreal.UIntPtr):unreal.UIntPtr;
public static function StaticClass():unreal.UIntPtr;
}