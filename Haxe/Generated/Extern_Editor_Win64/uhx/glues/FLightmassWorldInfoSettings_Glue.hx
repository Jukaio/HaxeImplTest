// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/flightmassworldinfosettings.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class FLightmassWorldInfoSettings_Glue {
public static function get_MaxOcclusionDistance(self:unreal.VariantPtr):cpp.Float32;
public static function set_MaxOcclusionDistance(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_FullyOccludedSamplesFraction(self:unreal.VariantPtr):cpp.Float32;
public static function set_FullyOccludedSamplesFraction(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_OcclusionExponent(self:unreal.VariantPtr):cpp.Float32;
public static function set_OcclusionExponent(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_IndirectIlluminationOcclusionFraction(self:unreal.VariantPtr):cpp.Float32;
public static function set_IndirectIlluminationOcclusionFraction(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_DirectIlluminationOcclusionFraction(self:unreal.VariantPtr):cpp.Float32;
public static function set_DirectIlluminationOcclusionFraction(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_VolumeLightSamplePlacementScale(self:unreal.VariantPtr):cpp.Float32;
public static function set_VolumeLightSamplePlacementScale(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_VolumetricLightmapSphericalHarmonicSmoothing(self:unreal.VariantPtr):cpp.Float32;
public static function set_VolumetricLightmapSphericalHarmonicSmoothing(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_VolumetricLightmapMaximumBrickMemoryMb(self:unreal.VariantPtr):cpp.Float32;
public static function set_VolumetricLightmapMaximumBrickMemoryMb(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_VolumetricLightmapDetailCellSize(self:unreal.VariantPtr):cpp.Float32;
public static function set_VolumetricLightmapDetailCellSize(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_bCompressLightmaps(self:unreal.VariantPtr):Bool;
public static function set_bCompressLightmaps(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bVisualizeAmbientOcclusion(self:unreal.VariantPtr):Bool;
public static function set_bVisualizeAmbientOcclusion(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bVisualizeMaterialDiffuse(self:unreal.VariantPtr):Bool;
public static function set_bVisualizeMaterialDiffuse(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bGenerateAmbientOcclusionMaterialMask(self:unreal.VariantPtr):Bool;
public static function set_bGenerateAmbientOcclusionMaterialMask(self:unreal.VariantPtr, value:Bool):Void;
public static function get_bUseAmbientOcclusion(self:unreal.VariantPtr):Bool;
public static function set_bUseAmbientOcclusion(self:unreal.VariantPtr, value:Bool):Void;
public static function get_VolumeLightingMethod(self:unreal.VariantPtr):Int;
public static function set_VolumeLightingMethod(self:unreal.VariantPtr, value:Int):Void;
public static function get_DiffuseBoost(self:unreal.VariantPtr):cpp.Float32;
public static function set_DiffuseBoost(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_EmissiveBoost(self:unreal.VariantPtr):cpp.Float32;
public static function set_EmissiveBoost(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_EnvironmentIntensity(self:unreal.VariantPtr):cpp.Float32;
public static function set_EnvironmentIntensity(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_EnvironmentColor(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_EnvironmentColor(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_IndirectLightingSmoothness(self:unreal.VariantPtr):cpp.Float32;
public static function set_IndirectLightingSmoothness(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_IndirectLightingQuality(self:unreal.VariantPtr):cpp.Float32;
public static function set_IndirectLightingQuality(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_NumSkyLightingBounces(self:unreal.VariantPtr):Int;
public static function set_NumSkyLightingBounces(self:unreal.VariantPtr, value:Int):Void;
public static function get_NumIndirectLightingBounces(self:unreal.VariantPtr):Int;
public static function set_NumIndirectLightingBounces(self:unreal.VariantPtr, value:Int):Void;
public static function get_StaticLightingLevelScale(self:unreal.VariantPtr):cpp.Float32;
public static function set_StaticLightingLevelScale(self:unreal.VariantPtr, value:cpp.Float32):Void;
}