// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/uworld.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UWorld_Glue {
public static function get_WorldComposition(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_WorldComposition(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_PhysicsField(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PhysicsField(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_EditorViews(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_EditorViews(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bAreConstraintsDirty(self:unreal.UIntPtr):Bool;
public static function set_bAreConstraintsDirty(self:unreal.UIntPtr, value:Bool):Void;
public static function get_MyParticleEventManager(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_MyParticleEventManager(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_DemoNetDriver(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_DemoNetDriver(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_StreamingLevelsPrefix(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_StreamingLevelsPrefix(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PerModuleDataObjects(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PerModuleDataObjects(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ExtraReferencedObjects(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ExtraReferencedObjects(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PhysicsCollisionHandler(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PhysicsCollisionHandler(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_NetworkManager(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_NetworkManager(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ForegroundLineBatcher(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ForegroundLineBatcher(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_PersistentLineBatcher(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PersistentLineBatcher(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_LineBatcher(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_LineBatcher(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_NetDriver(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_NetDriver(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_PersistentLevel(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PersistentLevel(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ThumbnailInfo(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ThumbnailInfo(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ActiveGroupActors(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ActiveGroupActors(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_Layers(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_Layers(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function HandleTimelineScrubbed(self:unreal.UIntPtr):Void;
public static function K2_GetWorldSettings(self:unreal.UIntPtr):unreal.UIntPtr;
public static function get_RealTimeSeconds(self:unreal.UIntPtr):cpp.Float32;
public static function set_RealTimeSeconds(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_Scene(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_Scene(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_URL(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_URL(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function GetNetMode(self:unreal.UIntPtr):Int;
public static function GetGameState(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GetGameInstance(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GetGameViewport(self:unreal.UIntPtr):unreal.UIntPtr;
public static function IsPlayInEditor(self:unreal.UIntPtr):Bool;
public static function IsClient(self:unreal.UIntPtr):Bool;
public static function IsServer(self:unreal.UIntPtr):Bool;
public static function IsPaused(self:unreal.UIntPtr):Bool;
public static function IsCameraMoveable(self:unreal.UIntPtr):Bool;
public static function GetControllerIterator(self:unreal.UIntPtr):unreal.VariantPtr;
public static function GetFirstPlayerController(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GetPawnIterator(self:unreal.UIntPtr):unreal.VariantPtr;
public static function GetPhysicsScene(self:unreal.UIntPtr):unreal.VariantPtr;
public static function SpawnActor(self:unreal.UIntPtr, cls:unreal.UIntPtr, location:unreal.VariantPtr, rotator:unreal.VariantPtr, spawnParameters:unreal.VariantPtr):unreal.UIntPtr;
public static function DestroyActor(self:unreal.UIntPtr, actor:unreal.UIntPtr, bNetForce:Bool, bShouldModifyLevel:Bool):Bool;
public static function GetAuthGameMode(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GetTimeSeconds(self:unreal.UIntPtr):cpp.Float32;
public static function GetRealTimeSeconds(self:unreal.UIntPtr):cpp.Float32;
public static function GetAudioTimeSeconds(self:unreal.UIntPtr):cpp.Float32;
public static function GetDeltaSeconds(self:unreal.UIntPtr):cpp.Float32;
public static function TimeSince(self:unreal.UIntPtr, Time:cpp.Float32):cpp.Float32;
public static function GetLocalURL(self:unreal.UIntPtr):unreal.VariantPtr;
public static function GetAddressURL(self:unreal.UIntPtr):unreal.VariantPtr;
public static function GetMapName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function ServerTravel(self:unreal.UIntPtr, InURL:unreal.VariantPtr, bAbsolute:Bool, bShouldSkipGameNotify:Bool):Void;
public static function IsInSeamlessTravel(self:unreal.UIntPtr):Bool;
public static function GetTimerManager(self:unreal.UIntPtr):unreal.VariantPtr;
public static function LineTraceSingleByChannel(self:unreal.UIntPtr, OutHit:unreal.VariantPtr, Start:unreal.VariantPtr, End:unreal.VariantPtr, TraceChannel:Int, Params:unreal.VariantPtr, ResponseParams:unreal.VariantPtr):Bool;
public static function LineTraceMultiByChannel(self:unreal.UIntPtr, OutHits:unreal.VariantPtr, Start:unreal.VariantPtr, End:unreal.VariantPtr, TraceChannel:Int, Params:unreal.VariantPtr, ResponseParams:unreal.VariantPtr):Bool;
public static function AsyncLineTraceByChannel(self:unreal.UIntPtr, InTraceType:Int, Start:unreal.VariantPtr, End:unreal.VariantPtr, TraceChannel:Int, Params:unreal.VariantPtr, ResponseParam:unreal.VariantPtr):unreal.VariantPtr;
public static function SweepSingleByChannel(self:unreal.UIntPtr, OutHit:unreal.VariantPtr, Start:unreal.VariantPtr, End:unreal.VariantPtr, Rot:unreal.VariantPtr, TraceChannel:Int, Shape:unreal.VariantPtr, Params:unreal.VariantPtr, ResponseParams:unreal.VariantPtr):Bool;
public static function SweepMultiByChannel(self:unreal.UIntPtr, OutHits:unreal.VariantPtr, Start:unreal.VariantPtr, End:unreal.VariantPtr, Rot:unreal.VariantPtr, TraceChannel:Int, Shape:unreal.VariantPtr, Params:unreal.VariantPtr, ResponseParams:unreal.VariantPtr):Bool;
public static function SpawnActorDeferred(self:unreal.UIntPtr, aClass:unreal.UIntPtr, transform:unreal.VariantPtr, owner:unreal.UIntPtr, instigator:unreal.UIntPtr, collisionHandlingOverride:Int):unreal.UIntPtr;
public static function OverlapBlockingTestByChannel(self:unreal.UIntPtr, pos:unreal.VariantPtr, rot:unreal.VariantPtr, traceChannel:Int, collisionShape:unreal.VariantPtr, params:unreal.VariantPtr, responseParam:unreal.VariantPtr):Bool;
public static function OverlapMultiByChannel(self:unreal.UIntPtr, OutOverlaps:unreal.VariantPtr, Pos:unreal.VariantPtr, Rot:unreal.VariantPtr, TraceChannel:Int, CollisionShape:unreal.VariantPtr, Params:unreal.VariantPtr, ResponseParam:unreal.VariantPtr):Bool;
public static function OverlapMultiByProfile(self:unreal.UIntPtr, OutOverlaps:unreal.VariantPtr, Pos:unreal.VariantPtr, Rot:unreal.VariantPtr, ProfileName:unreal.VariantPtr, CollisionShape:unreal.VariantPtr, Params:unreal.VariantPtr):Bool;
public static function QueryTraceData(self:unreal.UIntPtr, Handle:unreal.VariantPtr, OutData:unreal.VariantPtr):Bool;
public static function GetWorldSettings(self:unreal.UIntPtr, bCheckStreamingPesistent:Bool, bChecked:Bool):unreal.UIntPtr;
public static function GetParameterCollectionInstance(self:unreal.UIntPtr, Collection:unreal.UIntPtr):unreal.UIntPtr;
public static function AreActorsInitialized(self:unreal.UIntPtr):Bool;
public static function get_ViewLocationsRenderedLastFrame(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ViewLocationsRenderedLastFrame(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function FindTeleportSpot(self:unreal.UIntPtr, TestActor:unreal.UIntPtr, PlaceLocation:unreal.VariantPtr, PlaceRotation:unreal.VariantPtr):Bool;
public static function GetGravityZ(self:unreal.UIntPtr):cpp.Float32;
public static function IsVisibilityRequestPending(self:unreal.UIntPtr):Bool;
public static function UpdateLevelStreaming(self:unreal.UIntPtr):Void;
public static function get_bIsLevelStreamingFrozen(self:unreal.UIntPtr):Bool;
public static function set_bIsLevelStreamingFrozen(self:unreal.UIntPtr, value:Bool):Void;
public static function GetStreamingLevels(self:unreal.UIntPtr):unreal.VariantPtr;
public static function get_bShouldSimulatePhysics(self:unreal.UIntPtr):Bool;
public static function set_bShouldSimulatePhysics(self:unreal.UIntPtr, value:Bool):Void;
public static function FlushLevelStreaming(self:unreal.UIntPtr, FlushType:Int):Void;
public static function StaticClass():unreal.UIntPtr;
}