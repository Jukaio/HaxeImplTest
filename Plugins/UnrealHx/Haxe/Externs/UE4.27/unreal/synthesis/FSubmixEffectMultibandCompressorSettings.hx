/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.synthesis;

/**
  A submix dynamics processor
**/
@:umodule("Synthesis")
@:glueCppIncludes("Classes/SubmixEffects/SubmixEffectMultiBandCompressor.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FSubmixEffectMultibandCompressorSettings {
  
  /**
    Each band is a full dynamics processor, affecting at a unique frequency range
  **/
  @:uproperty public var Bands : unreal.TArray<unreal.synthesis.FDynamicsBandSettings>;
  
  /**
    Turning off FourPole mode will use cheaper, shallower 2-pole crossovers
  **/
  @:uproperty public var bFourPole : Bool;
  
  /**
    Toggles treating the attack and release envelopes as analog-style vs digital-style. Analog will respond a bit more naturally/slower.
  **/
  @:uproperty public var bAnalogMode : Bool;
  
  /**
    Whether or not to average all channels of audio before inputing into the dynamics processor
  **/
  @:uproperty public var bLinkChannels : Bool;
  
  /**
    The amount of time to look ahead of the current audio. Allows for transients to be included in dynamics processing.
  **/
  @:uproperty public var LookAheadMsec : unreal.Float32;
  
  /**
    Controls how quickly the bands will react to a signal above its threshold
  **/
  @:uproperty public var PeakMode : unreal.audiomixer.ESubmixEffectDynamicsPeakMode;
  
  /**
    Controls how each band will react to audio above its threshold
  **/
  @:uproperty public var DynamicsProcessorType : unreal.audiomixer.ESubmixEffectDynamicsProcessorType;
  
}
