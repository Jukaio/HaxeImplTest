/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.toolmenus;

@:umodule("ToolMenus")
@:glueCppIncludes("ToolMenus.h")
@:uextern @:uclass extern class UToolMenus extends unreal.UObject {
  @:ufunction(BlueprintCallable) static public function Get() : unreal.toolmenus.UToolMenus;
  
  /**
    Registers a menu by name
    @param       Parent  Optional name of a menu to layer on top of.
    @param       Type    Type of menu that will be generated such as: ToolBar, VerticalToolBar, etc..
    @param       bWarnIfAlreadyRegistered        Display warning if already registered
    @return      ToolMenu        Menu object
  **/
  @:ufunction(BlueprintCallable) @:final public function RegisterMenu(Name : unreal.FName, @:opt("None") Parent : unreal.Const<unreal.FName>, @:opt("Menu") Type : unreal.slate.EMultiBoxType, bWarnIfAlreadyRegistered : Bool = true) : unreal.toolmenus.UToolMenu;
  
  /**
    Extends a menu without registering the menu or claiming ownership of it. Ok to call even if menu does not exist yet.
    @param       Name    Name of the menu to extend
    @return      ToolMenu        Menu object
  **/
  @:ufunction(BlueprintCallable) @:final public function ExtendMenu(Name : unreal.Const<unreal.FName>) : unreal.toolmenus.UToolMenu;
  
  /**
    Finds an existing menu that has been registered or extended.
    @param       Name    Name of the menu to find.
    @return      ToolMenu        Menu object. Returns null if not found.
  **/
  @:ufunction(BlueprintCallable) @:final public function FindMenu(Name : unreal.Const<unreal.FName>) : unreal.toolmenus.UToolMenu;
  
  /**
    Determines if a menu has already been registered.
    @param       Name    Name of the menu to find.
    @return      bool    True if menu has already been registered.
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function IsMenuRegistered(Name : unreal.Const<unreal.FName>) : Bool;
  
  /**
    Rebuilds all widgets generated from a specific menu.
  **/
  @:ufunction(BlueprintCallable) @:final public function RefreshMenuWidget(Name : unreal.Const<unreal.FName>) : Bool;
  
  /**
    Rebuilds all currently generated widgets next tick.
  **/
  @:ufunction(BlueprintCallable) @:final public function RefreshAllWidgets() : Void;
  
  /**
    Registers menu entry object from blueprint/script
  **/
  @:ufunction(BlueprintCallable) static public function AddMenuEntryObject(MenuEntryObject : unreal.toolmenus.UToolMenuEntryScript) : Bool;
  
  /**
    Removes all entries that were registered under a specific owner name
  **/
  @:ufunction(BlueprintCallable) @:final public function UnregisterOwnerByName(InOwnerName : unreal.FName) : Void;
  
  /**
    Sets a section's displayed label text.
  **/
  @:ufunction(BlueprintCallable) @:final public function SetSectionLabel(MenuName : unreal.Const<unreal.FName>, SectionName : unreal.Const<unreal.FName>, Label : unreal.Const<unreal.FText>) : Void;
  
  /**
    Sets where to insert a section into a menu when generating relative to other section names.
  **/
  @:ufunction(BlueprintCallable) @:final public function SetSectionPosition(MenuName : unreal.Const<unreal.FName>, SectionName : unreal.Const<unreal.FName>, OtherSectionName : unreal.Const<unreal.FName>, PositionType : unreal.Const<unreal.toolmenus.EToolMenuInsertType>) : Void;
  
  /**
    Removes a menu entry from a given menu and section
  **/
  @:ufunction(BlueprintCallable) @:final public function RemoveEntry(MenuName : unreal.Const<unreal.FName>, Section : unreal.Const<unreal.FName>, Name : unreal.Const<unreal.FName>) : Void;
  
  /**
    Removes a section from a given menu
  **/
  @:ufunction(BlueprintCallable) @:final public function RemoveSection(MenuName : unreal.Const<unreal.FName>, Section : unreal.Const<unreal.FName>) : Void;
  
  /**
    Unregisters a menu by name
  **/
  @:ufunction(BlueprintCallable) @:final public function RemoveMenu(MenuName : unreal.Const<unreal.FName>) : Void;
  
  /**
    Finds a context object of a given class if it exists
  **/
  @:ufunction(BlueprintCallable) static public function FindContext(InContext : unreal.Const<unreal.PRef<unreal.toolmenus.FToolMenuContext>>, InClass : unreal.UClass) : unreal.UObject;
  
}
