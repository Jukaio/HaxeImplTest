// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/ftexturelodgroup.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class FTextureLODGroup_Glue {
public static function get_LossyCompressionAmount(self:unreal.VariantPtr):Int;
public static function set_LossyCompressionAmount(self:unreal.VariantPtr, value:Int):Void;
public static function get_VirtualTextureTileSizeBias(self:unreal.VariantPtr):Int;
public static function set_VirtualTextureTileSizeBias(self:unreal.VariantPtr, value:Int):Void;
public static function get_VirtualTextureTileCountBias(self:unreal.VariantPtr):Int;
public static function set_VirtualTextureTileCountBias(self:unreal.VariantPtr, value:Int):Void;
public static function get_DownscaleOptions(self:unreal.VariantPtr):Int;
public static function set_DownscaleOptions(self:unreal.VariantPtr, value:Int):Void;
public static function get_Downscale(self:unreal.VariantPtr):cpp.Float32;
public static function set_Downscale(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_DuplicateNonOptionalMips(self:unreal.VariantPtr):Bool;
public static function set_DuplicateNonOptionalMips(self:unreal.VariantPtr, value:Bool):Void;
public static function get_HighPriorityLoad(self:unreal.VariantPtr):Bool;
public static function set_HighPriorityLoad(self:unreal.VariantPtr, value:Bool):Void;
public static function get_MipLoadOptions(self:unreal.VariantPtr):Int;
public static function set_MipLoadOptions(self:unreal.VariantPtr, value:Int):Void;
public static function get_MipFilter(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_MipFilter(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_MinMagFilter(self:unreal.VariantPtr):unreal.VariantPtr;
public static function set_MinMagFilter(self:unreal.VariantPtr, value:unreal.VariantPtr):Void;
public static function get_OptionalMaxLODSize(self:unreal.VariantPtr):Int;
public static function set_OptionalMaxLODSize(self:unreal.VariantPtr, value:Int):Void;
public static function get_OptionalLODBias(self:unreal.VariantPtr):Int;
public static function set_OptionalLODBias(self:unreal.VariantPtr, value:Int):Void;
public static function get_MaxLODSize_Smallest(self:unreal.VariantPtr):Int;
public static function set_MaxLODSize_Smallest(self:unreal.VariantPtr, value:Int):Void;
public static function get_MaxLODSize_Smaller(self:unreal.VariantPtr):Int;
public static function set_MaxLODSize_Smaller(self:unreal.VariantPtr, value:Int):Void;
public static function get_MaxLODSize(self:unreal.VariantPtr):Int;
public static function set_MaxLODSize(self:unreal.VariantPtr, value:Int):Void;
public static function get_MinLODSize(self:unreal.VariantPtr):Int;
public static function set_MinLODSize(self:unreal.VariantPtr, value:Int):Void;
public static function get_MipGenSettings(self:unreal.VariantPtr):Int;
public static function set_MipGenSettings(self:unreal.VariantPtr, value:Int):Void;
public static function get_NumStreamedMips(self:unreal.VariantPtr):Int;
public static function set_NumStreamedMips(self:unreal.VariantPtr, value:Int):Void;
public static function get_LODBias_Smallest(self:unreal.VariantPtr):Int;
public static function set_LODBias_Smallest(self:unreal.VariantPtr, value:Int):Void;
public static function get_LODBias_Smaller(self:unreal.VariantPtr):Int;
public static function set_LODBias_Smaller(self:unreal.VariantPtr, value:Int):Void;
public static function get_LODBias(self:unreal.VariantPtr):Int;
public static function set_LODBias(self:unreal.VariantPtr, value:Int):Void;
public static function get_Group(self:unreal.VariantPtr):Int;
public static function set_Group(self:unreal.VariantPtr, value:Int):Void;
public static function copyNew(self:unreal.VariantPtr):unreal.VariantPtr;
public static function copy(self:unreal.VariantPtr):unreal.VariantPtr;
public static function assign(self:unreal.VariantPtr, val:unreal.VariantPtr):Void;
public static function equals(self:unreal.VariantPtr, other:unreal.VariantPtr):Bool;
}