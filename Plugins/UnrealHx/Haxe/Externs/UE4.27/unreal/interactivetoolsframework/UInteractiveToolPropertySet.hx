/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.interactivetoolsframework;

/**
  A UInteractiveTool contains a set of UObjects that contain "properties" of the Tool, ie
  the configuration flags, parameters, etc that control the Tool. Currently any UObject
  can be added as a property set, however there is no automatic mechanism for those child
  UObjects to notify the Tool when a property changes.
  
  If you make your property set UObjects subclasses of UInteractiveToolPropertySet, then
  when the Tool Properties are changed *in the Editor*, the parent Tool will be automatically notified.
  You can override UInteractiveTool::OnPropertyModified() to act on these notifications
**/
@:umodule("InteractiveToolsFramework")
@:glueCppIncludes("InteractiveTool.h")
@:uextern @:uclass extern class UInteractiveToolPropertySet extends unreal.UObject {
  
  /**
    CachedProperties should only ever be set to an instance of the subclass, ideally via GetPropertyCache().
  **/
  @:uproperty private var CachedProperties : unreal.interactivetoolsframework.UInteractiveToolPropertySet;
  
}
