// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/ukismettextlibrary.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UKismetTextLibrary_Glue {
public static function Conv_VectorToText(InVec:unreal.VariantPtr):unreal.VariantPtr;
public static function Conv_Vector2dToText(InVec:unreal.VariantPtr):unreal.VariantPtr;
public static function Conv_RotatorToText(InRot:unreal.VariantPtr):unreal.VariantPtr;
public static function Conv_TransformToText(InTrans:unreal.VariantPtr):unreal.VariantPtr;
public static function Conv_ObjectToText(InObj:unreal.UIntPtr):unreal.VariantPtr;
public static function Conv_ColorToText(InColor:unreal.VariantPtr):unreal.VariantPtr;
public static function Conv_TextToString(InText:unreal.VariantPtr):unreal.VariantPtr;
public static function Conv_StringToText(InString:unreal.VariantPtr):unreal.VariantPtr;
public static function Conv_NameToText(InName:unreal.VariantPtr):unreal.VariantPtr;
public static function TextIsEmpty(InText:unreal.VariantPtr):Bool;
public static function TextIsTransient(InText:unreal.VariantPtr):Bool;
public static function TextIsCultureInvariant(InText:unreal.VariantPtr):Bool;
public static function TextToLower(InText:unreal.VariantPtr):unreal.VariantPtr;
public static function TextToUpper(InText:unreal.VariantPtr):unreal.VariantPtr;
public static function TextTrimPreceding(InText:unreal.VariantPtr):unreal.VariantPtr;
public static function TextTrimTrailing(InText:unreal.VariantPtr):unreal.VariantPtr;
public static function TextTrimPrecedingAndTrailing(InText:unreal.VariantPtr):unreal.VariantPtr;
public static function GetEmptyText():unreal.VariantPtr;
public static function FindTextInLocalizationTable(Namespace:unreal.VariantPtr, Key:unreal.VariantPtr, OutText:unreal.VariantPtr):Bool;
public static function EqualEqual_TextText(A:unreal.VariantPtr, B:unreal.VariantPtr):Bool;
public static function EqualEqual_IgnoreCase_TextText(A:unreal.VariantPtr, B:unreal.VariantPtr):Bool;
public static function NotEqual_TextText(A:unreal.VariantPtr, B:unreal.VariantPtr):Bool;
public static function NotEqual_IgnoreCase_TextText(A:unreal.VariantPtr, B:unreal.VariantPtr):Bool;
public static function Conv_BoolToText(InBool:Bool):unreal.VariantPtr;
public static function Conv_ByteToText(Value:cpp.UInt8):unreal.VariantPtr;
public static function Conv_IntToText(Value:Int, bAlwaysSign:Bool, bUseGrouping:Bool, MinimumIntegralDigits:Int, MaximumIntegralDigits:Int):unreal.VariantPtr;
public static function Conv_Int64ToText(Value:unreal.Int64, bAlwaysSign:Bool, bUseGrouping:Bool, MinimumIntegralDigits:Int, MaximumIntegralDigits:Int):unreal.VariantPtr;
public static function Conv_FloatToText(Value:cpp.Float32, RoundingMode:Int, bAlwaysSign:Bool, bUseGrouping:Bool, MinimumIntegralDigits:Int, MaximumIntegralDigits:Int, MinimumFractionalDigits:Int, MaximumFractionalDigits:Int):unreal.VariantPtr;
public static function AsCurrencyBase(BaseValue:Int, CurrencyCode:unreal.VariantPtr):unreal.VariantPtr;
public static function AsCurrency_Integer(Value:Int, RoundingMode:Int, bAlwaysSign:Bool, bUseGrouping:Bool, MinimumIntegralDigits:Int, MaximumIntegralDigits:Int, MinimumFractionalDigits:Int, MaximumFractionalDigits:Int, CurrencyCode:unreal.VariantPtr):unreal.VariantPtr;
public static function AsCurrency_Float(Value:cpp.Float32, RoundingMode:Int, bAlwaysSign:Bool, bUseGrouping:Bool, MinimumIntegralDigits:Int, MaximumIntegralDigits:Int, MinimumFractionalDigits:Int, MaximumFractionalDigits:Int, CurrencyCode:unreal.VariantPtr):unreal.VariantPtr;
public static function AsPercent_Float(Value:cpp.Float32, RoundingMode:Int, bAlwaysSign:Bool, bUseGrouping:Bool, MinimumIntegralDigits:Int, MaximumIntegralDigits:Int, MinimumFractionalDigits:Int, MaximumFractionalDigits:Int):unreal.VariantPtr;
public static function AsDate_DateTime(InDateTime:unreal.VariantPtr):unreal.VariantPtr;
public static function AsTimeZoneDate_DateTime(InDateTime:unreal.VariantPtr, InTimeZone:unreal.VariantPtr):unreal.VariantPtr;
public static function AsDateTime_DateTime(In:unreal.VariantPtr):unreal.VariantPtr;
public static function AsTimeZoneDateTime_DateTime(InDateTime:unreal.VariantPtr, InTimeZone:unreal.VariantPtr):unreal.VariantPtr;
public static function AsTime_DateTime(In:unreal.VariantPtr):unreal.VariantPtr;
public static function AsTimeZoneTime_DateTime(InDateTime:unreal.VariantPtr, InTimeZone:unreal.VariantPtr):unreal.VariantPtr;
public static function AsTimespan_Timespan(InTimespan:unreal.VariantPtr):unreal.VariantPtr;
public static function Format(InPattern:unreal.VariantPtr, InArgs:unreal.VariantPtr):unreal.VariantPtr;
public static function TextIsFromStringTable(Text:unreal.VariantPtr):Bool;
public static function TextFromStringTable(TableId:unreal.VariantPtr, Key:unreal.VariantPtr):unreal.VariantPtr;
public static function StringTableIdAndKeyFromText(Text:unreal.VariantPtr, OutTableId:unreal.VariantPtr, OutKey:unreal.VariantPtr):Bool;
public static function IsPolyglotDataValid(PolyglotData:unreal.VariantPtr, IsValid:Bool, ErrorMessage:unreal.VariantPtr):Void;
public static function PolyglotDataToText(PolyglotData:unreal.VariantPtr):unreal.VariantPtr;
public static function StaticClass():unreal.UIntPtr;
}