// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/ugameusersettings.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UGameUserSettings_Glue {
public static function GetDefaultResolution():unreal.VariantPtr;
public static function GetDefaultWindowPosition():unreal.VariantPtr;
public static function GetDefaultWindowMode():Int;
public static function GetSyncInterval():Int;
public static function GetFramePace():Int;
public static function GetGameUserSettings():unreal.UIntPtr;
public static function get_HDRDisplayOutputNits(self:unreal.UIntPtr):Int;
public static function set_HDRDisplayOutputNits(self:unreal.UIntPtr, value:Int):Void;
public static function get_LastGPUBenchmarkMultiplier(self:unreal.UIntPtr):cpp.Float32;
public static function set_LastGPUBenchmarkMultiplier(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LastGPUBenchmarkSteps(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LastGPUBenchmarkSteps(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LastCPUBenchmarkSteps(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LastCPUBenchmarkSteps(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LastGPUBenchmarkResult(self:unreal.UIntPtr):cpp.Float32;
public static function set_LastGPUBenchmarkResult(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LastCPUBenchmarkResult(self:unreal.UIntPtr):cpp.Float32;
public static function set_LastCPUBenchmarkResult(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LastRecommendedScreenHeight(self:unreal.UIntPtr):cpp.Float32;
public static function set_LastRecommendedScreenHeight(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LastRecommendedScreenWidth(self:unreal.UIntPtr):cpp.Float32;
public static function set_LastRecommendedScreenWidth(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LastUserConfirmedDesiredScreenHeight(self:unreal.UIntPtr):Int;
public static function set_LastUserConfirmedDesiredScreenHeight(self:unreal.UIntPtr, value:Int):Void;
public static function get_LastUserConfirmedDesiredScreenWidth(self:unreal.UIntPtr):Int;
public static function set_LastUserConfirmedDesiredScreenWidth(self:unreal.UIntPtr, value:Int):Void;
public static function get_DesiredScreenHeight(self:unreal.UIntPtr):Int;
public static function set_DesiredScreenHeight(self:unreal.UIntPtr, value:Int):Void;
public static function get_DesiredScreenWidth(self:unreal.UIntPtr):Int;
public static function set_DesiredScreenWidth(self:unreal.UIntPtr, value:Int):Void;
public static function get_FrameRateLimit(self:unreal.UIntPtr):cpp.Float32;
public static function set_FrameRateLimit(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LastConfirmedAudioQualityLevel(self:unreal.UIntPtr):Int;
public static function set_LastConfirmedAudioQualityLevel(self:unreal.UIntPtr, value:Int):Void;
public static function get_AudioQualityLevel(self:unreal.UIntPtr):Int;
public static function set_AudioQualityLevel(self:unreal.UIntPtr, value:Int):Void;
public static function get_Version(self:unreal.UIntPtr):cpp.UInt32;
public static function set_Version(self:unreal.UIntPtr, value:cpp.UInt32):Void;
public static function get_PreferredFullscreenMode(self:unreal.UIntPtr):Int;
public static function set_PreferredFullscreenMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_LastConfirmedFullscreenMode(self:unreal.UIntPtr):Int;
public static function set_LastConfirmedFullscreenMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_FullscreenMode(self:unreal.UIntPtr):Int;
public static function set_FullscreenMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_WindowPosY(self:unreal.UIntPtr):Int;
public static function set_WindowPosY(self:unreal.UIntPtr, value:Int):Void;
public static function get_WindowPosX(self:unreal.UIntPtr):Int;
public static function set_WindowPosX(self:unreal.UIntPtr, value:Int):Void;
public static function get_LastUserConfirmedResolutionSizeY(self:unreal.UIntPtr):cpp.UInt32;
public static function set_LastUserConfirmedResolutionSizeY(self:unreal.UIntPtr, value:cpp.UInt32):Void;
public static function get_LastUserConfirmedResolutionSizeX(self:unreal.UIntPtr):cpp.UInt32;
public static function set_LastUserConfirmedResolutionSizeX(self:unreal.UIntPtr, value:cpp.UInt32):Void;
public static function get_ResolutionSizeY(self:unreal.UIntPtr):cpp.UInt32;
public static function set_ResolutionSizeY(self:unreal.UIntPtr, value:cpp.UInt32):Void;
public static function get_ResolutionSizeX(self:unreal.UIntPtr):cpp.UInt32;
public static function set_ResolutionSizeX(self:unreal.UIntPtr, value:cpp.UInt32):Void;
public static function get_bUseDynamicResolution(self:unreal.UIntPtr):Bool;
public static function set_bUseDynamicResolution(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseVSync(self:unreal.UIntPtr):Bool;
public static function set_bUseVSync(self:unreal.UIntPtr, value:Bool):Void;
public static function ApplySettings(self:unreal.UIntPtr, bCheckForCommandLineOverrides:Bool):Void;
public static function ApplyNonResolutionSettings(self:unreal.UIntPtr):Void;
public static function ApplyResolutionSettings(self:unreal.UIntPtr, bCheckForCommandLineOverrides:Bool):Void;
public static function GetScreenResolution(self:unreal.UIntPtr):unreal.VariantPtr;
public static function GetLastConfirmedScreenResolution(self:unreal.UIntPtr):unreal.VariantPtr;
public static function GetDesktopResolution(self:unreal.UIntPtr):unreal.VariantPtr;
public static function SetScreenResolution(self:unreal.UIntPtr, Resolution:unreal.VariantPtr):Void;
public static function GetFullscreenMode(self:unreal.UIntPtr):Int;
public static function GetLastConfirmedFullscreenMode(self:unreal.UIntPtr):Int;
public static function SetFullscreenMode(self:unreal.UIntPtr, InFullscreenMode:Int):Void;
public static function GetPreferredFullscreenMode(self:unreal.UIntPtr):Int;
public static function SetVSyncEnabled(self:unreal.UIntPtr, bEnable:Bool):Void;
public static function IsVSyncEnabled(self:unreal.UIntPtr):Bool;
public static function SetDynamicResolutionEnabled(self:unreal.UIntPtr, bEnable:Bool):Void;
public static function IsDynamicResolutionEnabled(self:unreal.UIntPtr):Bool;
public static function IsScreenResolutionDirty(self:unreal.UIntPtr):Bool;
public static function IsFullscreenModeDirty(self:unreal.UIntPtr):Bool;
public static function IsVSyncDirty(self:unreal.UIntPtr):Bool;
public static function IsDynamicResolutionDirty(self:unreal.UIntPtr):Bool;
public static function ConfirmVideoMode(self:unreal.UIntPtr):Void;
public static function RevertVideoMode(self:unreal.UIntPtr):Void;
public static function SetBenchmarkFallbackValues(self:unreal.UIntPtr):Void;
public static function SetAudioQualityLevel(self:unreal.UIntPtr, QualityLevel:Int):Void;
public static function GetAudioQualityLevel(self:unreal.UIntPtr):Int;
public static function SetFrameRateLimit(self:unreal.UIntPtr, NewLimit:cpp.Float32):Void;
public static function GetFrameRateLimit(self:unreal.UIntPtr):cpp.Float32;
public static function SetOverallScalabilityLevel(self:unreal.UIntPtr, Value:Int):Void;
public static function GetOverallScalabilityLevel(self:unreal.UIntPtr):Int;
public static function GetResolutionScaleInformation(self:unreal.UIntPtr, CurrentScaleNormalized:cpp.Float32, CurrentScaleValue:Int, MinScaleValue:Int, MaxScaleValue:Int):Void;
public static function GetResolutionScaleInformationEx(self:unreal.UIntPtr, CurrentScaleNormalized:cpp.Float32, CurrentScaleValue:cpp.Float32, MinScaleValue:cpp.Float32, MaxScaleValue:cpp.Float32):Void;
public static function GetResolutionScaleNormalized(self:unreal.UIntPtr):cpp.Float32;
public static function SetResolutionScaleValue(self:unreal.UIntPtr, NewScaleValue:Int):Void;
public static function SetResolutionScaleValueEx(self:unreal.UIntPtr, NewScaleValue:cpp.Float32):Void;
public static function SetResolutionScaleNormalized(self:unreal.UIntPtr, NewScaleNormalized:cpp.Float32):Void;
public static function SetViewDistanceQuality(self:unreal.UIntPtr, Value:Int):Void;
public static function GetViewDistanceQuality(self:unreal.UIntPtr):Int;
public static function SetShadowQuality(self:unreal.UIntPtr, Value:Int):Void;
public static function GetShadowQuality(self:unreal.UIntPtr):Int;
public static function SetAntiAliasingQuality(self:unreal.UIntPtr, Value:Int):Void;
public static function GetAntiAliasingQuality(self:unreal.UIntPtr):Int;
public static function SetTextureQuality(self:unreal.UIntPtr, Value:Int):Void;
public static function GetTextureQuality(self:unreal.UIntPtr):Int;
public static function SetVisualEffectQuality(self:unreal.UIntPtr, Value:Int):Void;
public static function GetVisualEffectQuality(self:unreal.UIntPtr):Int;
public static function SetPostProcessingQuality(self:unreal.UIntPtr, Value:Int):Void;
public static function GetPostProcessingQuality(self:unreal.UIntPtr):Int;
public static function SetFoliageQuality(self:unreal.UIntPtr, Value:Int):Void;
public static function GetFoliageQuality(self:unreal.UIntPtr):Int;
public static function SetShadingQuality(self:unreal.UIntPtr, Value:Int):Void;
public static function GetShadingQuality(self:unreal.UIntPtr):Int;
public static function IsDirty(self:unreal.UIntPtr):Bool;
public static function ValidateSettings(self:unreal.UIntPtr):Void;
public static function LoadSettings(self:unreal.UIntPtr, bForceReload:Bool):Void;
public static function SaveSettings(self:unreal.UIntPtr):Void;
public static function ResetToCurrentSettings(self:unreal.UIntPtr):Void;
public static function SetToDefaults(self:unreal.UIntPtr):Void;
public static function GetDefaultResolutionScale(self:unreal.UIntPtr):cpp.Float32;
public static function GetRecommendedResolutionScale(self:unreal.UIntPtr):cpp.Float32;
public static function RunHardwareBenchmark(self:unreal.UIntPtr, WorkScale:Int, CPUMultiplier:cpp.Float32, GPUMultiplier:cpp.Float32):Void;
public static function ApplyHardwareBenchmarkResults(self:unreal.UIntPtr):Void;
public static function SupportsHDRDisplayOutput(self:unreal.UIntPtr):Bool;
public static function EnableHDRDisplayOutput(self:unreal.UIntPtr, bEnable:Bool, DisplayNits:Int):Void;
public static function GetCurrentHDRDisplayNits(self:unreal.UIntPtr):Int;
public static function IsHDREnabled(self:unreal.UIntPtr):Bool;
public static function get_ScalabilityQuality(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ScalabilityQuality(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function StaticClass():unreal.UIntPtr;
}