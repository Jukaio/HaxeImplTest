// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/physicscore/uphysicssettingscore.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UPhysicsSettingsCore_Glue {
public static function get_SolverOptions(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SolverOptions(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_DefaultShapeComplexity(self:unreal.UIntPtr):Int;
public static function set_DefaultShapeComplexity(self:unreal.UIntPtr, value:Int):Void;
public static function get_bSimulateSkeletalMeshOnDedicatedServer(self:unreal.UIntPtr):Bool;
public static function set_bSimulateSkeletalMeshOnDedicatedServer(self:unreal.UIntPtr, value:Bool):Void;
public static function get_MaxContactOffset(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxContactOffset(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MinContactOffset(self:unreal.UIntPtr):cpp.Float32;
public static function set_MinContactOffset(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ContactOffsetMultiplier(self:unreal.UIntPtr):cpp.Float32;
public static function set_ContactOffsetMultiplier(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxDepenetrationVelocity(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxDepenetrationVelocity(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxAngularVelocity(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxAngularVelocity(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_RestitutionCombineMode(self:unreal.UIntPtr):Int;
public static function set_RestitutionCombineMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_FrictionCombineMode(self:unreal.UIntPtr):Int;
public static function set_FrictionCombineMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_BounceThresholdVelocity(self:unreal.UIntPtr):cpp.Float32;
public static function set_BounceThresholdVelocity(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bDefaultHasComplexCollision_DEPRECATED(self:unreal.UIntPtr):Bool;
public static function set_bDefaultHasComplexCollision_DEPRECATED(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnable2DPhysics(self:unreal.UIntPtr):Bool;
public static function set_bEnable2DPhysics(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bWarnMissingLocks(self:unreal.UIntPtr):Bool;
public static function set_bWarnMissingLocks(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableStabilization(self:unreal.UIntPtr):Bool;
public static function set_bEnableStabilization(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnablePCM(self:unreal.UIntPtr):Bool;
public static function set_bEnablePCM(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableShapeSharing(self:unreal.UIntPtr):Bool;
public static function set_bEnableShapeSharing(self:unreal.UIntPtr, value:Bool):Void;
public static function get_TriangleMeshTriangleMinAreaThreshold(self:unreal.UIntPtr):cpp.Float32;
public static function set_TriangleMeshTriangleMinAreaThreshold(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_RagdollAggregateThreshold(self:unreal.UIntPtr):Int;
public static function set_RagdollAggregateThreshold(self:unreal.UIntPtr, value:Int):Void;
public static function get_SimulateScratchMemorySize(self:unreal.UIntPtr):Int;
public static function set_SimulateScratchMemorySize(self:unreal.UIntPtr, value:Int):Void;
public static function get_DefaultFluidFriction(self:unreal.UIntPtr):cpp.Float32;
public static function set_DefaultFluidFriction(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DefaultTerminalVelocity(self:unreal.UIntPtr):cpp.Float32;
public static function set_DefaultTerminalVelocity(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_DefaultGravityZ(self:unreal.UIntPtr):cpp.Float32;
public static function set_DefaultGravityZ(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function StaticClass():unreal.UIntPtr;
}