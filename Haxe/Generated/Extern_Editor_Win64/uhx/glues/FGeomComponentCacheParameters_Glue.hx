// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/geometrycollectionengine/fgeomcomponentcacheparameters.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class FGeomComponentCacheParameters_Glue {
public static function get_TrailingMinVolumeThreshold(self:unreal.VariantPtr):cpp.Float32;
public static function set_TrailingMinVolumeThreshold(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_TrailingMinSpeedThreshold(self:unreal.VariantPtr):cpp.Float32;
public static function set_TrailingMinSpeedThreshold(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_TrailingDataSizeMax(self:unreal.VariantPtr):Int;
public static function set_TrailingDataSizeMax(self:unreal.VariantPtr, value:Int):Void;
public static function get_DoGenerateTrailingData(self:unreal.VariantPtr):Bool;
public static function set_DoGenerateTrailingData(self:unreal.VariantPtr, value:Bool):Void;
public static function get_SaveTrailingData(self:unreal.VariantPtr):Bool;
public static function set_SaveTrailingData(self:unreal.VariantPtr, value:Bool):Void;
public static function get_MaxBreakingPerCell(self:unreal.VariantPtr):Int;
public static function set_MaxBreakingPerCell(self:unreal.VariantPtr, value:Int):Void;
public static function get_BreakingDataSpatialHashRadius(self:unreal.VariantPtr):cpp.Float32;
public static function set_BreakingDataSpatialHashRadius(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_DoBreakingDataSpatialHash(self:unreal.VariantPtr):Bool;
public static function set_DoBreakingDataSpatialHash(self:unreal.VariantPtr, value:Bool):Void;
public static function get_BreakingDataSizeMax(self:unreal.VariantPtr):Int;
public static function set_BreakingDataSizeMax(self:unreal.VariantPtr, value:Int):Void;
public static function get_DoGenerateBreakingData(self:unreal.VariantPtr):Bool;
public static function set_DoGenerateBreakingData(self:unreal.VariantPtr, value:Bool):Void;
public static function get_SaveBreakingData(self:unreal.VariantPtr):Bool;
public static function set_SaveBreakingData(self:unreal.VariantPtr, value:Bool):Void;
public static function get_MaxCollisionPerCell(self:unreal.VariantPtr):Int;
public static function set_MaxCollisionPerCell(self:unreal.VariantPtr, value:Int):Void;
public static function get_CollisionDataSpatialHashRadius(self:unreal.VariantPtr):cpp.Float32;
public static function set_CollisionDataSpatialHashRadius(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_DoCollisionDataSpatialHash(self:unreal.VariantPtr):Bool;
public static function set_DoCollisionDataSpatialHash(self:unreal.VariantPtr, value:Bool):Void;
public static function get_CollisionDataSizeMax(self:unreal.VariantPtr):Int;
public static function set_CollisionDataSizeMax(self:unreal.VariantPtr, value:Int):Void;
public static function get_DoGenerateCollisionData(self:unreal.VariantPtr):Bool;
public static function set_DoGenerateCollisionData(self:unreal.VariantPtr, value:Bool):Void;
public static function get_SaveCollisionData(self:unreal.VariantPtr):Bool;
public static function set_SaveCollisionData(self:unreal.VariantPtr, value:Bool):Void;
public static function get_ReverseCacheBeginTime(self:unreal.VariantPtr):cpp.Float32;
public static function set_ReverseCacheBeginTime(self:unreal.VariantPtr, value:cpp.Float32):Void;
public static function get_TargetCache(self:unreal.VariantPtr):unreal.UIntPtr;
public static function set_TargetCache(self:unreal.VariantPtr, value:unreal.UIntPtr):Void;
public static function get_CacheMode(self:unreal.VariantPtr):Int;
public static function set_CacheMode(self:unreal.VariantPtr, value:Int):Void;
}