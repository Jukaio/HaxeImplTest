// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/uparticlemodulerequired.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UParticleModuleRequired_Glue {
public static function get_NamedMaterialOverrides(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_NamedMaterialOverrides(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_NormalsCylinderDirection(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_NormalsCylinderDirection(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_EmitterDurationLow(self:unreal.UIntPtr):cpp.Float32;
public static function set_EmitterDurationLow(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MaxDrawCount(self:unreal.UIntPtr):Int;
public static function set_MaxDrawCount(self:unreal.UIntPtr, value:Int):Void;
public static function get_CutoutTexture(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_CutoutTexture(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_EmitterLoops(self:unreal.UIntPtr):Int;
public static function set_EmitterLoops(self:unreal.UIntPtr, value:Int):Void;
public static function get_AlphaThreshold(self:unreal.UIntPtr):cpp.Float32;
public static function set_AlphaThreshold(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NormalsSphereCenter(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_NormalsSphereCenter(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bDurationRecalcEachLoop(self:unreal.UIntPtr):Bool;
public static function set_bDurationRecalcEachLoop(self:unreal.UIntPtr, value:Bool):Void;
public static function get_BoundingMode(self:unreal.UIntPtr):Int;
public static function set_BoundingMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_UVFlippingMode(self:unreal.UIntPtr):Int;
public static function set_UVFlippingMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_MacroUVRadius(self:unreal.UIntPtr):cpp.Float32;
public static function set_MacroUVRadius(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MacroUVPosition(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_MacroUVPosition(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_RandomImageChanges(self:unreal.UIntPtr):Int;
public static function set_RandomImageChanges(self:unreal.UIntPtr, value:Int):Void;
public static function get_RandomImageTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_RandomImageTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_SubImages_Vertical(self:unreal.UIntPtr):Int;
public static function set_SubImages_Vertical(self:unreal.UIntPtr, value:Int):Void;
public static function get_SubImages_Horizontal(self:unreal.UIntPtr):Int;
public static function set_SubImages_Horizontal(self:unreal.UIntPtr, value:Int):Void;
public static function get_bOrbitModuleAffectsVelocityAlignment(self:unreal.UIntPtr):Bool;
public static function set_bOrbitModuleAffectsVelocityAlignment(self:unreal.UIntPtr, value:Bool):Void;
public static function get_EmitterNormalsMode(self:unreal.UIntPtr):Int;
public static function set_EmitterNormalsMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_OpacitySourceMode(self:unreal.UIntPtr):Int;
public static function set_OpacitySourceMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_bUseMaxDrawCount(self:unreal.UIntPtr):Bool;
public static function set_bUseMaxDrawCount(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bOverrideSystemMacroUV(self:unreal.UIntPtr):Bool;
public static function set_bOverrideSystemMacroUV(self:unreal.UIntPtr, value:Bool):Void;
public static function get_ParticleBurstMethod(self:unreal.UIntPtr):Int;
public static function set_ParticleBurstMethod(self:unreal.UIntPtr, value:Int):Void;
public static function get_bEmitterDelayUseRange(self:unreal.UIntPtr):Bool;
public static function set_bEmitterDelayUseRange(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bScaleUV(self:unreal.UIntPtr):Bool;
public static function set_bScaleUV(self:unreal.UIntPtr, value:Bool):Void;
public static function get_InterpolationMethod(self:unreal.UIntPtr):Int;
public static function set_InterpolationMethod(self:unreal.UIntPtr, value:Int):Void;
public static function get_bDelayFirstLoopOnly(self:unreal.UIntPtr):Bool;
public static function set_bDelayFirstLoopOnly(self:unreal.UIntPtr, value:Bool):Void;
public static function get_EmitterDelayLow(self:unreal.UIntPtr):cpp.Float32;
public static function set_EmitterDelayLow(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_EmitterDelay(self:unreal.UIntPtr):cpp.Float32;
public static function set_EmitterDelay(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_BurstList(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_BurstList(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_SpawnRate(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SpawnRate(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_EmitterDuration(self:unreal.UIntPtr):cpp.Float32;
public static function set_EmitterDuration(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bEmitterDurationUseRange(self:unreal.UIntPtr):Bool;
public static function set_bEmitterDurationUseRange(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bRemoveHMDRoll(self:unreal.UIntPtr):Bool;
public static function set_bRemoveHMDRoll(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseLegacyEmitterTime(self:unreal.UIntPtr):Bool;
public static function set_bUseLegacyEmitterTime(self:unreal.UIntPtr, value:Bool):Void;
public static function get_SortMode(self:unreal.UIntPtr):Int;
public static function set_SortMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_bKillOnCompleted(self:unreal.UIntPtr):Bool;
public static function set_bKillOnCompleted(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bKillOnDeactivate(self:unreal.UIntPtr):Bool;
public static function set_bKillOnDeactivate(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseLocalSpace(self:unreal.UIntPtr):Bool;
public static function set_bUseLocalSpace(self:unreal.UIntPtr, value:Bool):Void;
public static function get_ScreenAlignment(self:unreal.UIntPtr):Int;
public static function set_ScreenAlignment(self:unreal.UIntPtr, value:Int):Void;
public static function get_EmitterRotation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_EmitterRotation(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_EmitterOrigin(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_EmitterOrigin(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MaxFacingCameraBlendDistance(self:unreal.UIntPtr):cpp.Float32;
public static function set_MaxFacingCameraBlendDistance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MinFacingCameraBlendDistance(self:unreal.UIntPtr):cpp.Float32;
public static function set_MinFacingCameraBlendDistance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_Material(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_Material(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function StaticClass():unreal.UIntPtr;
}