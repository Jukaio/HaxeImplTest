/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.magicleap;

@:umodule("MagicLeap")
@:glueCppIncludes("MagicLeapHMDFunctionLibrary.h")
@:uextern @:uclass extern class UMagicLeapHMDFunctionLibrary extends unreal.UBlueprintFunctionLibrary {
  @:ufunction(BlueprintCallable) static public function SetBasePosition(InBasePosition : unreal.Const<unreal.PRef<unreal.FVector>>) : Void;
  @:ufunction(BlueprintCallable) static public function SetBaseOrientation(InBaseOrientation : unreal.Const<unreal.PRef<unreal.FQuat>>) : Void;
  @:ufunction(BlueprintCallable) static public function SetBaseRotation(InBaseRotation : unreal.Const<unreal.PRef<unreal.FRotator>>) : Void;
  
  /**
    Set the actor whose location is used as the focus point. The focus distance is the distance from the HMD to the focus point.
    
    @param InFocusActor                   The actor that will be set as the new focus actor.
    @param bSetStabilizationActor  True if the function should set the stabilization depth actor to match the passed in focus actor. (RECOMMENDED TO STAY CHECKED)
  **/
  @:ufunction(BlueprintCallable) static public function SetFocusActor(InFocusActor : unreal.Const<unreal.AActor>, bSetStabilizationActor : Bool = true) : Void;
  
  /**
    Set the actor whose location is used as the depth for timewarp stabilization.
    
    @param InStabilizationDepthActor  The actor that will be set as the new stabilization depth actor.
    @param bSetFocusActor                         True if the function should set the focus actor to match the passed in stabilization depth actor. (RECOMMENDED TO STAY CHECKED)
  **/
  @:ufunction(BlueprintCallable) static public function SetStabilizationDepthActor(InStabilizationDepthActor : unreal.Const<unreal.AActor>, bSetFocusActor : Bool = true) : Void;
  @:ufunction(BlueprintCallable) static public function GetMLSDKVersionMajor() : unreal.Int32;
  @:ufunction(BlueprintCallable) static public function GetMLSDKVersionMinor() : unreal.Int32;
  @:ufunction(BlueprintCallable) static public function GetMLSDKVersionRevision() : unreal.Int32;
  @:ufunction(BlueprintCallable) static public function GetMLSDKVersion() : unreal.FString;
  @:ufunction(BlueprintCallable) static public function GetMinimumAPILevel() : unreal.Int32;
  @:ufunction(BlueprintCallable) static public function GetPlatformAPILevel() : unreal.Int32;
  
  /**
    Returns true if this code is executing on the ML HMD, false otherwise (e.g. it's executing on PC)
  **/
  @:ufunction(BlueprintCallable) static public function IsRunningOnMagicLeapHMD() : Bool;
  @:ufunction(BlueprintCallable) static public function GetHeadTrackingState(State : unreal.PRef<unreal.magicleap.FMagicLeapHeadTrackingState>) : Bool;
  
  /**
    Get map events.
    A developer must be aware of certain events that can occur under degenerative conditions
    in order to cleanly handle it. The most important event to be aware of is when a map changes.
    In the case that a new map session begins, or recovery fails, all formerly cached transform
    and world reconstruction data (raycast, planes, mesh) is invalidated and must be updated.
    @param MapEvents Set of map events occured since the last frame. Valid only if function returns true.
    @return true if call get map events from the platform succeeded, false otherwise.
  **/
  @:ufunction(BlueprintCallable) static public function GetHeadTrackingMapEvents(MapEvents : unreal.PRef<unreal.TSet<unreal.magicleap.EMagicLeapHeadTrackingMapEvent>>) : Bool;
  
  /**
    Notifies lifecycle that the app is ready to run (dismisses the loading logo).
    @note This MUST be called if you have checked bManualCallToAppReady in LuminRuntimeSettings.  Failure to do so will cause the
    application to remain in the loading state.
  **/
  @:ufunction(BlueprintCallable) static public function SetAppReady() : Bool;
  @:ufunction(BlueprintCallable) static public function GetGraphicsClientPerformanceInfo(PerformanceInfo : unreal.PRef<unreal.magicleap.FMagicLeapGraphicsClientPerformanceInfo>) : Bool;
  
}
