// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/uphysicsconstraintcomponent.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UPhysicsConstraintComponent_Glue {
public static function get_ConstraintInstance(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ConstraintInstance(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnConstraintBroken(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnConstraintBroken(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ConstraintSetup_DEPRECATED(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ConstraintSetup_DEPRECATED(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ComponentName2(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ComponentName2(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ConstraintActor2(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ConstraintActor2(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ComponentName1(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ComponentName1(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ConstraintActor1(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ConstraintActor1(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function SetConstrainedComponents(self:unreal.UIntPtr, Component1:unreal.UIntPtr, BoneName1:unreal.VariantPtr, Component2:unreal.UIntPtr, BoneName2:unreal.VariantPtr):Void;
public static function BreakConstraint(self:unreal.UIntPtr):Void;
public static function SetLinearPositionDrive(self:unreal.UIntPtr, bEnableDriveX:Bool, bEnableDriveY:Bool, bEnableDriveZ:Bool):Void;
public static function SetLinearVelocityDrive(self:unreal.UIntPtr, bEnableDriveX:Bool, bEnableDriveY:Bool, bEnableDriveZ:Bool):Void;
public static function SetAngularOrientationDrive(self:unreal.UIntPtr, bEnableSwingDrive:Bool, bEnableTwistDrive:Bool):Void;
public static function SetOrientationDriveTwistAndSwing(self:unreal.UIntPtr, bEnableTwistDrive:Bool, bEnableSwingDrive:Bool):Void;
public static function SetOrientationDriveSLERP(self:unreal.UIntPtr, bEnableSLERP:Bool):Void;
public static function SetAngularVelocityDrive(self:unreal.UIntPtr, bEnableSwingDrive:Bool, bEnableTwistDrive:Bool):Void;
public static function SetAngularVelocityDriveTwistAndSwing(self:unreal.UIntPtr, bEnableTwistDrive:Bool, bEnableSwingDrive:Bool):Void;
public static function SetAngularVelocityDriveSLERP(self:unreal.UIntPtr, bEnableSLERP:Bool):Void;
public static function SetAngularDriveMode(self:unreal.UIntPtr, DriveMode:Int):Void;
public static function SetLinearPositionTarget(self:unreal.UIntPtr, InPosTarget:unreal.VariantPtr):Void;
public static function SetLinearVelocityTarget(self:unreal.UIntPtr, InVelTarget:unreal.VariantPtr):Void;
public static function SetLinearDriveParams(self:unreal.UIntPtr, PositionStrength:cpp.Float32, VelocityStrength:cpp.Float32, InForceLimit:cpp.Float32):Void;
public static function SetAngularOrientationTarget(self:unreal.UIntPtr, InPosTarget:unreal.VariantPtr):Void;
public static function SetAngularVelocityTarget(self:unreal.UIntPtr, InVelTarget:unreal.VariantPtr):Void;
public static function SetAngularDriveParams(self:unreal.UIntPtr, PositionStrength:cpp.Float32, VelocityStrength:cpp.Float32, InForceLimit:cpp.Float32):Void;
public static function SetLinearXLimit(self:unreal.UIntPtr, ConstraintType:Int, LimitSize:cpp.Float32):Void;
public static function SetLinearYLimit(self:unreal.UIntPtr, ConstraintType:Int, LimitSize:cpp.Float32):Void;
public static function SetLinearZLimit(self:unreal.UIntPtr, ConstraintType:Int, LimitSize:cpp.Float32):Void;
public static function SetAngularSwing1Limit(self:unreal.UIntPtr, MotionType:Int, Swing1LimitAngle:cpp.Float32):Void;
public static function SetAngularSwing2Limit(self:unreal.UIntPtr, MotionType:Int, Swing2LimitAngle:cpp.Float32):Void;
public static function SetAngularTwistLimit(self:unreal.UIntPtr, ConstraintType:Int, TwistLimitAngle:cpp.Float32):Void;
public static function SetLinearBreakable(self:unreal.UIntPtr, bLinearBreakable:Bool, LinearBreakThreshold:cpp.Float32):Void;
public static function SetLinearPlasticity(self:unreal.UIntPtr, bLinearPlasticity:Bool, LinearPlasticityThreshold:cpp.Float32):Void;
public static function SetAngularBreakable(self:unreal.UIntPtr, bAngularBreakable:Bool, AngularBreakThreshold:cpp.Float32):Void;
public static function SetAngularPlasticity(self:unreal.UIntPtr, bAngularPlasticity:Bool, AngularPlasticityThreshold:cpp.Float32):Void;
public static function GetCurrentTwist(self:unreal.UIntPtr):cpp.Float32;
public static function GetCurrentSwing1(self:unreal.UIntPtr):cpp.Float32;
public static function GetCurrentSwing2(self:unreal.UIntPtr):cpp.Float32;
public static function SetConstraintReferenceFrame(self:unreal.UIntPtr, Frame:Int, RefFrame:unreal.VariantPtr):Void;
public static function SetConstraintReferencePosition(self:unreal.UIntPtr, Frame:Int, RefPosition:unreal.VariantPtr):Void;
public static function SetConstraintReferenceOrientation(self:unreal.UIntPtr, Frame:Int, PriAxis:unreal.VariantPtr, SecAxis:unreal.VariantPtr):Void;
public static function SetDisableCollision(self:unreal.UIntPtr, bDisableCollision:Bool):Void;
public static function GetConstraintForce(self:unreal.UIntPtr, OutLinearForce:unreal.VariantPtr, OutAngularForce:unreal.VariantPtr):Void;
public static function IsBroken(self:unreal.UIntPtr):Bool;
public static function StaticClass():unreal.UIntPtr;
}