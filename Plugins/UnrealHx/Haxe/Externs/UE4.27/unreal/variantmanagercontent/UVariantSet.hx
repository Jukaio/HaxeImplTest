/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.variantmanagercontent;

@:umodule("VariantManagerContent")
@:glueCppIncludes("VariantSet.h")
@:uextern @:uclass extern class UVariantSet extends unreal.UObject {
  @:ufunction(BlueprintCallable) @:final public function GetParent() : unreal.variantmanagercontent.ULevelVariantSets;
  @:ufunction(BlueprintCallable) @:final public function SetDisplayText(NewDisplayText : unreal.Const<unreal.PRef<unreal.FText>>) : Void;
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetDisplayText() : unreal.FText;
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetNumVariants() : unreal.Int32;
  @:ufunction(BlueprintCallable) @:final public function GetVariant(VariantIndex : unreal.Int32) : unreal.variantmanagercontent.UVariant;
  @:ufunction(BlueprintCallable) @:final public function GetVariantByName(VariantName : unreal.FString) : unreal.variantmanagercontent.UVariant;
  
  /**
    Sets the thumbnail to use for this variant set. Can receive nullptr to clear it
  **/
  @:ufunction(BlueprintCallable) @:final public function SetThumbnailFromTexture(NewThumbnail : unreal.UTexture2D) : Void;
  @:ufunction(BlueprintCallable) @:final public function SetThumbnailFromFile(FilePath : unreal.FString) : Void;
  @:ufunction(BlueprintCallable) @:final public function SetThumbnailFromCamera(WorldContextObject : unreal.UObject, CameraTransform : unreal.Const<unreal.PRef<unreal.FTransform>>, FOVDegrees : unreal.Float32 = 50.000000, MinZ : unreal.Float32 = 50.000000, Gamma : unreal.Float32 = 2.200000) : Void;
  
  /**
    Sets the thumbnail from the active editor viewport. Doesn't do anything if the Editor is not available
  **/
  @:ufunction(BlueprintCallable) @:final public function SetThumbnailFromEditorViewport() : Void;
  
  /**
    Gets the thumbnail currently used for this variant set
  **/
  @:ufunction(BlueprintCallable) @:final public function GetThumbnail() : unreal.UTexture2D;
  
}
