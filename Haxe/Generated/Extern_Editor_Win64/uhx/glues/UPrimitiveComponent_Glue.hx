// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/uprimitivecomponent.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UPrimitiveComponent_Glue {
public static function get_OnInputTouchLeave(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnInputTouchLeave(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnInputTouchEnter(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnInputTouchEnter(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnInputTouchEnd(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnInputTouchEnd(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnInputTouchBegin(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnInputTouchBegin(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnReleased(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnReleased(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnClicked(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnClicked(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnEndCursorOver(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnEndCursorOver(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnBeginCursorOver(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnBeginCursorOver(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnComponentSleep(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnComponentSleep(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnComponentWake(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnComponentWake(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnComponentEndOverlap(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnComponentEndOverlap(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnComponentBeginOverlap(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnComponentBeginOverlap(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_OnComponentHit(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnComponentHit(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_BodyInstance(self:unreal.UIntPtr):unreal.VariantPtr;
public static function get_MoveIgnoreComponents(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_MoveIgnoreComponents(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MoveIgnoreActors(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_MoveIgnoreActors(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_BoundsScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_BoundsScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LpvBiasMultiplier(self:unreal.UIntPtr):cpp.Float32;
public static function set_LpvBiasMultiplier(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_VirtualTextureRenderPassType(self:unreal.UIntPtr):Int;
public static function set_VirtualTextureRenderPassType(self:unreal.UIntPtr, value:Int):Void;
public static function get_VirtualTextureMinCoverage(self:unreal.UIntPtr):cpp.Int8;
public static function set_VirtualTextureMinCoverage(self:unreal.UIntPtr, value:cpp.Int8):Void;
public static function get_VirtualTextureCullMips(self:unreal.UIntPtr):cpp.Int8;
public static function set_VirtualTextureCullMips(self:unreal.UIntPtr, value:cpp.Int8):Void;
public static function get_VirtualTextureLodBias(self:unreal.UIntPtr):cpp.Int8;
public static function set_VirtualTextureLodBias(self:unreal.UIntPtr, value:cpp.Int8):Void;
public static function get_RuntimeVirtualTextures(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_RuntimeVirtualTextures(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_VisibilityId(self:unreal.UIntPtr):Int;
public static function set_VisibilityId(self:unreal.UIntPtr, value:Int):Void;
public static function get_TranslucencySortDistanceOffset(self:unreal.UIntPtr):cpp.Float32;
public static function set_TranslucencySortDistanceOffset(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_TranslucencySortPriority(self:unreal.UIntPtr):Int;
public static function set_TranslucencySortPriority(self:unreal.UIntPtr, value:Int):Void;
public static function get_CustomDepthStencilValue(self:unreal.UIntPtr):Int;
public static function set_CustomDepthStencilValue(self:unreal.UIntPtr, value:Int):Void;
public static function get_CustomDepthStencilWriteMask(self:unreal.UIntPtr):Int;
public static function set_CustomDepthStencilWriteMask(self:unreal.UIntPtr, value:Int):Void;
public static function get_LightingChannels(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LightingChannels(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_CanCharacterStepUpOn(self:unreal.UIntPtr):Int;
public static function set_CanCharacterStepUpOn(self:unreal.UIntPtr, value:Int):Void;
public static function get_HitProxyPriority(self:unreal.UIntPtr):Int;
public static function set_HitProxyPriority(self:unreal.UIntPtr, value:Int):Void;
public static function get_bHasCustomNavigableGeometry(self:unreal.UIntPtr):Int;
public static function set_bHasCustomNavigableGeometry(self:unreal.UIntPtr, value:Int):Void;
public static function get_bHiddenInSceneCapture(self:unreal.UIntPtr):Bool;
public static function set_bHiddenInSceneCapture(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bVisibleInSceneCaptureOnly(self:unreal.UIntPtr):Bool;
public static function set_bVisibleInSceneCaptureOnly(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bRenderCustomDepth(self:unreal.UIntPtr):Bool;
public static function set_bRenderCustomDepth(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseEditorCompositing(self:unreal.UIntPtr):Bool;
public static function set_bUseEditorCompositing(self:unreal.UIntPtr, value:Bool):Void;
public static function get_AlwaysLoadOnServer(self:unreal.UIntPtr):Bool;
public static function set_AlwaysLoadOnServer(self:unreal.UIntPtr, value:Bool):Void;
public static function get_AlwaysLoadOnClient(self:unreal.UIntPtr):Bool;
public static function set_AlwaysLoadOnClient(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bFillCollisionUnderneathForNavmesh(self:unreal.UIntPtr):Bool;
public static function set_bFillCollisionUnderneathForNavmesh(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bReplicatePhysicsToAutonomousProxy(self:unreal.UIntPtr):Bool;
public static function set_bReplicatePhysicsToAutonomousProxy(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bApplyImpulseOnDamage(self:unreal.UIntPtr):Bool;
public static function set_bApplyImpulseOnDamage(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bIgnoreRadialForce(self:unreal.UIntPtr):Bool;
public static function set_bIgnoreRadialForce(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bIgnoreRadialImpulse(self:unreal.UIntPtr):Bool;
public static function set_bIgnoreRadialImpulse(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bSingleSampleShadowFromStationaryLights(self:unreal.UIntPtr):Bool;
public static function set_bSingleSampleShadowFromStationaryLights(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bReceiveMobileCSMShadows(self:unreal.UIntPtr):Bool;
public static function set_bReceiveMobileCSMShadows(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bExcludeFromLightAttachmentGroup(self:unreal.UIntPtr):Bool;
public static function set_bExcludeFromLightAttachmentGroup(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bLightAttachmentsAsGroup(self:unreal.UIntPtr):Bool;
public static function set_bLightAttachmentsAsGroup(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bLightAsIfStatic_DEPRECATED(self:unreal.UIntPtr):Bool;
public static function set_bLightAsIfStatic_DEPRECATED(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCastShadowAsTwoSided(self:unreal.UIntPtr):Bool;
public static function set_bCastShadowAsTwoSided(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCastHiddenShadow(self:unreal.UIntPtr):Bool;
public static function set_bCastHiddenShadow(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCastCinematicShadow(self:unreal.UIntPtr):Bool;
public static function set_bCastCinematicShadow(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCastInsetShadow(self:unreal.UIntPtr):Bool;
public static function set_bCastInsetShadow(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCastFarShadow(self:unreal.UIntPtr):Bool;
public static function set_bCastFarShadow(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bSelfShadowOnly(self:unreal.UIntPtr):Bool;
public static function set_bSelfShadowOnly(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCastContactShadow(self:unreal.UIntPtr):Bool;
public static function set_bCastContactShadow(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCastVolumetricTranslucentShadow(self:unreal.UIntPtr):Bool;
public static function set_bCastVolumetricTranslucentShadow(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCastStaticShadow(self:unreal.UIntPtr):Bool;
public static function set_bCastStaticShadow(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCastDynamicShadow(self:unreal.UIntPtr):Bool;
public static function set_bCastDynamicShadow(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bAffectDistanceFieldLighting(self:unreal.UIntPtr):Bool;
public static function set_bAffectDistanceFieldLighting(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bAffectDynamicIndirectLighting(self:unreal.UIntPtr):Bool;
public static function set_bAffectDynamicIndirectLighting(self:unreal.UIntPtr, value:Bool):Void;
public static function get_CastShadow(self:unreal.UIntPtr):Bool;
public static function set_CastShadow(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bHasPerInstanceHitProxies(self:unreal.UIntPtr):Bool;
public static function set_bHasPerInstanceHitProxies(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bForceMipStreaming(self:unreal.UIntPtr):Bool;
public static function set_bForceMipStreaming(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bSelectable(self:unreal.UIntPtr):Bool;
public static function set_bSelectable(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseAsOccluder(self:unreal.UIntPtr):Bool;
public static function set_bUseAsOccluder(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bTreatAsBackgroundForOcclusion(self:unreal.UIntPtr):Bool;
public static function set_bTreatAsBackgroundForOcclusion(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bOnlyOwnerSee(self:unreal.UIntPtr):Bool;
public static function set_bOnlyOwnerSee(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bOwnerNoSee(self:unreal.UIntPtr):Bool;
public static function set_bOwnerNoSee(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bReceivesDecals(self:unreal.UIntPtr):Bool;
public static function set_bReceivesDecals(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bRenderInDepthPass(self:unreal.UIntPtr):Bool;
public static function set_bRenderInDepthPass(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bRenderInMainPass(self:unreal.UIntPtr):Bool;
public static function set_bRenderInMainPass(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bVisibleInRayTracing(self:unreal.UIntPtr):Bool;
public static function set_bVisibleInRayTracing(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bVisibleInRealTimeSkyCaptures(self:unreal.UIntPtr):Bool;
public static function set_bVisibleInRealTimeSkyCaptures(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bVisibleInReflectionCaptures(self:unreal.UIntPtr):Bool;
public static function set_bVisibleInReflectionCaptures(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bHasMotionBlurVelocityMeshes(self:unreal.UIntPtr):Bool;
public static function set_bHasMotionBlurVelocityMeshes(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bAllowCullDistanceVolume(self:unreal.UIntPtr):Bool;
public static function set_bAllowCullDistanceVolume(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseViewOwnerDepthPriorityGroup(self:unreal.UIntPtr):Bool;
public static function set_bUseViewOwnerDepthPriorityGroup(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bReturnMaterialOnMove(self:unreal.UIntPtr):Bool;
public static function set_bReturnMaterialOnMove(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bTraceComplexOnMove(self:unreal.UIntPtr):Bool;
public static function set_bTraceComplexOnMove(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bMultiBodyOverlap(self:unreal.UIntPtr):Bool;
public static function set_bMultiBodyOverlap(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bAlwaysCreatePhysicsState(self:unreal.UIntPtr):Bool;
public static function set_bAlwaysCreatePhysicsState(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bNeverDistanceCull(self:unreal.UIntPtr):Bool;
public static function set_bNeverDistanceCull(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bBatchImpostersAsInstances(self:unreal.UIntPtr):Bool;
public static function set_bBatchImpostersAsInstances(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseMaxLODAsImposter(self:unreal.UIntPtr):Bool;
public static function set_bUseMaxLODAsImposter(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableAutoLODGeneration(self:unreal.UIntPtr):Bool;
public static function set_bEnableAutoLODGeneration(self:unreal.UIntPtr, value:Bool):Void;
public static function get_ExcludeForSpecificHLODLevels(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ExcludeForSpecificHLODLevels(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LightmapType(self:unreal.UIntPtr):Int;
public static function set_LightmapType(self:unreal.UIntPtr, value:Int):Void;
public static function get_IndirectLightingCacheQuality(self:unreal.UIntPtr):Int;
public static function set_IndirectLightingCacheQuality(self:unreal.UIntPtr, value:Int):Void;
public static function get_ViewOwnerDepthPriorityGroup(self:unreal.UIntPtr):Int;
public static function set_ViewOwnerDepthPriorityGroup(self:unreal.UIntPtr, value:Int):Void;
public static function get_DepthPriorityGroup(self:unreal.UIntPtr):Int;
public static function set_DepthPriorityGroup(self:unreal.UIntPtr, value:Int):Void;
public static function get_CachedMaxDrawDistance(self:unreal.UIntPtr):cpp.Float32;
public static function set_CachedMaxDrawDistance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LDMaxDrawDistance(self:unreal.UIntPtr):cpp.Float32;
public static function set_LDMaxDrawDistance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MinDrawDistance(self:unreal.UIntPtr):cpp.Float32;
public static function set_MinDrawDistance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function GetGenerateOverlapEvents(self:unreal.UIntPtr):Bool;
public static function SetGenerateOverlapEvents(self:unreal.UIntPtr, bInGenerateOverlapEvents:Bool):Void;
public static function SetLightingChannels(self:unreal.UIntPtr, bChannel0:Bool, bChannel1:Bool, bChannel2:Bool):Void;
public static function WasRecentlyRendered(self:unreal.UIntPtr, Tolerance:cpp.Float32):Bool;
public static function IgnoreActorWhenMoving(self:unreal.UIntPtr, Actor:unreal.UIntPtr, bShouldIgnore:Bool):Void;
public static function CopyArrayOfMoveIgnoreActors(self:unreal.UIntPtr):unreal.VariantPtr;
public static function ClearMoveIgnoreActors(self:unreal.UIntPtr):Void;
public static function IgnoreComponentWhenMoving(self:unreal.UIntPtr, Component:unreal.UIntPtr, bShouldIgnore:Bool):Void;
public static function CopyArrayOfMoveIgnoreComponents(self:unreal.UIntPtr):unreal.VariantPtr;
public static function ClearMoveIgnoreComponents(self:unreal.UIntPtr):Void;
public static function SetCustomPrimitiveDataFloat(self:unreal.UIntPtr, DataIndex:Int, Value:cpp.Float32):Void;
public static function SetCustomPrimitiveDataVector2(self:unreal.UIntPtr, DataIndex:Int, Value:unreal.VariantPtr):Void;
public static function SetCustomPrimitiveDataVector3(self:unreal.UIntPtr, DataIndex:Int, Value:unreal.VariantPtr):Void;
public static function SetCustomPrimitiveDataVector4(self:unreal.UIntPtr, DataIndex:Int, Value:unreal.VariantPtr):Void;
public static function SetDefaultCustomPrimitiveDataFloat(self:unreal.UIntPtr, DataIndex:Int, Value:cpp.Float32):Void;
public static function SetDefaultCustomPrimitiveDataVector2(self:unreal.UIntPtr, DataIndex:Int, Value:unreal.VariantPtr):Void;
public static function SetDefaultCustomPrimitiveDataVector3(self:unreal.UIntPtr, DataIndex:Int, Value:unreal.VariantPtr):Void;
public static function SetDefaultCustomPrimitiveDataVector4(self:unreal.UIntPtr, DataIndex:Int, Value:unreal.VariantPtr):Void;
public static function IsOverlappingComponent(self:unreal.UIntPtr, OtherComp:unreal.UIntPtr):Bool;
public static function IsOverlappingActor(self:unreal.UIntPtr, Other:unreal.UIntPtr):Bool;
public static function GetOverlappingActors(self:unreal.UIntPtr, OverlappingActors:unreal.VariantPtr, ClassFilter:unreal.UIntPtr):Void;
public static function GetOverlappingComponents(self:unreal.UIntPtr, OutOverlappingComponents:unreal.VariantPtr):Void;
public static function SetBoundsScale(self:unreal.UIntPtr, NewBoundsScale:cpp.Float32):Void;
public static function GetMaterial(self:unreal.UIntPtr, ElementIndex:Int):unreal.UIntPtr;
public static function SetMaterial(self:unreal.UIntPtr, ElementIndex:Int, Material:unreal.UIntPtr):Void;
public static function SetMaterialByName(self:unreal.UIntPtr, MaterialSlotName:unreal.VariantPtr, Material:unreal.UIntPtr):Void;
public static function CreateAndSetMaterialInstanceDynamic(self:unreal.UIntPtr, ElementIndex:Int):unreal.UIntPtr;
public static function CreateAndSetMaterialInstanceDynamicFromMaterial(self:unreal.UIntPtr, ElementIndex:Int, Parent:unreal.UIntPtr):unreal.UIntPtr;
public static function CreateDynamicMaterialInstance(self:unreal.UIntPtr, ElementIndex:Int, SourceMaterial:unreal.UIntPtr, OptionalName:unreal.VariantPtr):unreal.UIntPtr;
public static function GetMaterialFromCollisionFaceIndex(self:unreal.UIntPtr, FaceIndex:Int, SectionIndex:Int):unreal.UIntPtr;
public static function GetWalkableSlopeOverride(self:unreal.UIntPtr):unreal.VariantPtr;
public static function SetWalkableSlopeOverride(self:unreal.UIntPtr, NewOverride:unreal.VariantPtr):Void;
public static function SetSimulatePhysics(self:unreal.UIntPtr, bSimulate:Bool):Void;
public static function SetConstraintMode(self:unreal.UIntPtr, ConstraintMode:Int):Void;
public static function AddImpulse(self:unreal.UIntPtr, Impulse:unreal.VariantPtr, BoneName:unreal.VariantPtr, bVelChange:Bool):Void;
public static function AddAngularImpulse(self:unreal.UIntPtr, Impulse:unreal.VariantPtr, BoneName:unreal.VariantPtr, bVelChange:Bool):Void;
public static function AddAngularImpulseInRadians(self:unreal.UIntPtr, Impulse:unreal.VariantPtr, BoneName:unreal.VariantPtr, bVelChange:Bool):Void;
public static function AddAngularImpulseInDegrees(self:unreal.UIntPtr, Impulse:unreal.VariantPtr, BoneName:unreal.VariantPtr, bVelChange:Bool):Void;
public static function AddImpulseAtLocation(self:unreal.UIntPtr, Impulse:unreal.VariantPtr, Location:unreal.VariantPtr, BoneName:unreal.VariantPtr):Void;
public static function AddRadialImpulse(self:unreal.UIntPtr, Origin:unreal.VariantPtr, Radius:cpp.Float32, Strength:cpp.Float32, Falloff:Int, bVelChange:Bool):Void;
public static function AddForce(self:unreal.UIntPtr, Force:unreal.VariantPtr, BoneName:unreal.VariantPtr, bAccelChange:Bool):Void;
public static function AddForceAtLocation(self:unreal.UIntPtr, Force:unreal.VariantPtr, Location:unreal.VariantPtr, BoneName:unreal.VariantPtr):Void;
public static function AddForceAtLocationLocal(self:unreal.UIntPtr, Force:unreal.VariantPtr, Location:unreal.VariantPtr, BoneName:unreal.VariantPtr):Void;
public static function AddRadialForce(self:unreal.UIntPtr, Origin:unreal.VariantPtr, Radius:cpp.Float32, Strength:cpp.Float32, Falloff:Int, bAccelChange:Bool):Void;
public static function AddTorque(self:unreal.UIntPtr, Torque:unreal.VariantPtr, BoneName:unreal.VariantPtr, bAccelChange:Bool):Void;
public static function AddTorqueInRadians(self:unreal.UIntPtr, Torque:unreal.VariantPtr, BoneName:unreal.VariantPtr, bAccelChange:Bool):Void;
public static function AddTorqueInDegrees(self:unreal.UIntPtr, Torque:unreal.VariantPtr, BoneName:unreal.VariantPtr, bAccelChange:Bool):Void;
public static function SetPhysicsLinearVelocity(self:unreal.UIntPtr, NewVel:unreal.VariantPtr, bAddToCurrent:Bool, BoneName:unreal.VariantPtr):Void;
public static function GetPhysicsLinearVelocity(self:unreal.UIntPtr, BoneName:unreal.VariantPtr):unreal.VariantPtr;
public static function GetPhysicsLinearVelocityAtPoint(self:unreal.UIntPtr, Point:unreal.VariantPtr, BoneName:unreal.VariantPtr):unreal.VariantPtr;
public static function SetAllPhysicsLinearVelocity(self:unreal.UIntPtr, NewVel:unreal.VariantPtr, bAddToCurrent:Bool):Void;
public static function SetPhysicsAngularVelocity(self:unreal.UIntPtr, NewAngVel:unreal.VariantPtr, bAddToCurrent:Bool, BoneName:unreal.VariantPtr):Void;
public static function SetPhysicsAngularVelocityInRadians(self:unreal.UIntPtr, NewAngVel:unreal.VariantPtr, bAddToCurrent:Bool, BoneName:unreal.VariantPtr):Void;
public static function SetPhysicsAngularVelocityInDegrees(self:unreal.UIntPtr, NewAngVel:unreal.VariantPtr, bAddToCurrent:Bool, BoneName:unreal.VariantPtr):Void;
public static function SetPhysicsMaxAngularVelocity(self:unreal.UIntPtr, NewMaxAngVel:cpp.Float32, bAddToCurrent:Bool, BoneName:unreal.VariantPtr):Void;
public static function SetPhysicsMaxAngularVelocityInDegrees(self:unreal.UIntPtr, NewMaxAngVel:cpp.Float32, bAddToCurrent:Bool, BoneName:unreal.VariantPtr):Void;
public static function SetPhysicsMaxAngularVelocityInRadians(self:unreal.UIntPtr, NewMaxAngVel:cpp.Float32, bAddToCurrent:Bool, BoneName:unreal.VariantPtr):Void;
public static function GetPhysicsAngularVelocity(self:unreal.UIntPtr, BoneName:unreal.VariantPtr):unreal.VariantPtr;
public static function GetPhysicsAngularVelocityInDegrees(self:unreal.UIntPtr, BoneName:unreal.VariantPtr):unreal.VariantPtr;
public static function GetPhysicsAngularVelocityInRadians(self:unreal.UIntPtr, BoneName:unreal.VariantPtr):unreal.VariantPtr;
public static function GetCenterOfMass(self:unreal.UIntPtr, BoneName:unreal.VariantPtr):unreal.VariantPtr;
public static function SetCenterOfMass(self:unreal.UIntPtr, CenterOfMassOffset:unreal.VariantPtr, BoneName:unreal.VariantPtr):Void;
public static function WakeRigidBody(self:unreal.UIntPtr, BoneName:unreal.VariantPtr):Void;
public static function PutRigidBodyToSleep(self:unreal.UIntPtr, BoneName:unreal.VariantPtr):Void;
public static function SetNotifyRigidBodyCollision(self:unreal.UIntPtr, bNewNotifyRigidBodyCollision:Bool):Void;
public static function SetOwnerNoSee(self:unreal.UIntPtr, bNewOwnerNoSee:Bool):Void;
public static function SetOnlyOwnerSee(self:unreal.UIntPtr, bNewOnlyOwnerSee:Bool):Void;
public static function SetCastShadow(self:unreal.UIntPtr, NewCastShadow:Bool):Void;
public static function SetCastHiddenShadow(self:unreal.UIntPtr, NewCastHiddenShadow:Bool):Void;
public static function SetCastInsetShadow(self:unreal.UIntPtr, bInCastInsetShadow:Bool):Void;
public static function SetLightAttachmentsAsGroup(self:unreal.UIntPtr, bInLightAttachmentsAsGroup:Bool):Void;
public static function SetExcludeFromLightAttachmentGroup(self:unreal.UIntPtr, bInExcludeFromLightAttachmentGroup:Bool):Void;
public static function SetSingleSampleShadowFromStationaryLights(self:unreal.UIntPtr, bNewSingleSampleShadowFromStationaryLights:Bool):Void;
public static function SetTranslucentSortPriority(self:unreal.UIntPtr, NewTranslucentSortPriority:Int):Void;
public static function SetTranslucencySortDistanceOffset(self:unreal.UIntPtr, NewTranslucencySortDistanceOffset:cpp.Float32):Void;
public static function SetReceivesDecals(self:unreal.UIntPtr, bNewReceivesDecals:Bool):Void;
public static function SetCollisionEnabled(self:unreal.UIntPtr, NewType:Int):Void;
public static function SetCollisionProfileName(self:unreal.UIntPtr, InCollisionProfileName:unreal.VariantPtr, bUpdateOverlaps:Bool):Void;
public static function GetCollisionProfileName(self:unreal.UIntPtr):unreal.VariantPtr;
public static function SetCollisionObjectType(self:unreal.UIntPtr, Channel:Int):Void;
public static function K2_LineTraceComponent(self:unreal.UIntPtr, TraceStart:unreal.VariantPtr, TraceEnd:unreal.VariantPtr, bTraceComplex:Bool, bShowTrace:Bool, bPersistentShowTrace:Bool, HitLocation:unreal.VariantPtr, HitNormal:unreal.VariantPtr, BoneName:unreal.VariantPtr, OutHit:unreal.VariantPtr):Bool;
public static function K2_SphereTraceComponent(self:unreal.UIntPtr, TraceStart:unreal.VariantPtr, TraceEnd:unreal.VariantPtr, SphereRadius:cpp.Float32, bTraceComplex:Bool, bShowTrace:Bool, bPersistentShowTrace:Bool, HitLocation:unreal.VariantPtr, HitNormal:unreal.VariantPtr, BoneName:unreal.VariantPtr, OutHit:unreal.VariantPtr):Bool;
public static function K2_BoxOverlapComponent(self:unreal.UIntPtr, InBoxCentre:unreal.VariantPtr, InBox:unreal.VariantPtr, bTraceComplex:Bool, bShowTrace:Bool, bPersistentShowTrace:Bool, HitLocation:unreal.VariantPtr, HitNormal:unreal.VariantPtr, BoneName:unreal.VariantPtr, OutHit:unreal.VariantPtr):Bool;
public static function K2_SphereOverlapComponent(self:unreal.UIntPtr, InSphereCentre:unreal.VariantPtr, InSphereRadius:cpp.Float32, bTraceComplex:Bool, bShowTrace:Bool, bPersistentShowTrace:Bool, HitLocation:unreal.VariantPtr, HitNormal:unreal.VariantPtr, BoneName:unreal.VariantPtr, OutHit:unreal.VariantPtr):Bool;
public static function SetRenderCustomDepth(self:unreal.UIntPtr, bValue:Bool):Void;
public static function SetCustomDepthStencilValue(self:unreal.UIntPtr, Value:Int):Void;
public static function SetCustomDepthStencilWriteMask(self:unreal.UIntPtr, WriteMaskBit:Int):Void;
public static function SetRenderInMainPass(self:unreal.UIntPtr, bValue:Bool):Void;
public static function SetVisibleInSceneCaptureOnly(self:unreal.UIntPtr, bValue:Bool):Void;
public static function SetHiddenInSceneCapture(self:unreal.UIntPtr, bValue:Bool):Void;
public static function GetNumMaterials(self:unreal.UIntPtr):Int;
public static function GetClosestPointOnCollision(self:unreal.UIntPtr, Point:unreal.VariantPtr, OutPointOnBody:unreal.VariantPtr, BoneName:unreal.VariantPtr):cpp.Float32;
public static function GetCollisionEnabled(self:unreal.UIntPtr):Int;
public static function K2_IsCollisionEnabled(self:unreal.UIntPtr):Bool;
public static function K2_IsQueryCollisionEnabled(self:unreal.UIntPtr):Bool;
public static function K2_IsPhysicsCollisionEnabled(self:unreal.UIntPtr):Bool;
public static function GetCollisionResponseToChannel(self:unreal.UIntPtr, Channel:Int):Int;
public static function GetCollisionObjectType(self:unreal.UIntPtr):Int;
public static function SetAllPhysicsAngularVelocityInDegrees(self:unreal.UIntPtr, NewAngVel:unreal.VariantPtr, bAddToCurrent:Bool):Void;
public static function SetAllPhysicsAngularVelocityInRadians(self:unreal.UIntPtr, NewAngVel:unreal.VariantPtr, bAddToCurrent:Bool):Void;
public static function WakeAllRigidBodies(self:unreal.UIntPtr):Void;
public static function SetEnableGravity(self:unreal.UIntPtr, bGravityEnabled:Bool):Void;
public static function IsGravityEnabled(self:unreal.UIntPtr):Bool;
public static function SetLinearDamping(self:unreal.UIntPtr, InDamping:cpp.Float32):Void;
public static function GetLinearDamping(self:unreal.UIntPtr):cpp.Float32;
public static function SetAngularDamping(self:unreal.UIntPtr, InDamping:cpp.Float32):Void;
public static function GetAngularDamping(self:unreal.UIntPtr):cpp.Float32;
public static function SetMassScale(self:unreal.UIntPtr, BoneName:unreal.VariantPtr, InMassScale:cpp.Float32):Void;
public static function GetMassScale(self:unreal.UIntPtr, BoneName:unreal.VariantPtr):cpp.Float32;
public static function SetAllMassScale(self:unreal.UIntPtr, InMassScale:cpp.Float32):Void;
public static function SetMassOverrideInKg(self:unreal.UIntPtr, BoneName:unreal.VariantPtr, MassInKg:cpp.Float32, bOverrideMass:Bool):Void;
public static function GetMass(self:unreal.UIntPtr):cpp.Float32;
public static function GetInertiaTensor(self:unreal.UIntPtr, BoneName:unreal.VariantPtr):unreal.VariantPtr;
public static function ScaleByMomentOfInertia(self:unreal.UIntPtr, InputVector:unreal.VariantPtr, BoneName:unreal.VariantPtr):unreal.VariantPtr;
public static function SetUseCCD(self:unreal.UIntPtr, InUseCCD:Bool, BoneName:unreal.VariantPtr):Void;
public static function SetAllUseCCD(self:unreal.UIntPtr, InUseCCD:Bool):Void;
public static function IsAnyRigidBodyAwake(self:unreal.UIntPtr):Bool;
public static function SetCollisionResponseToChannel(self:unreal.UIntPtr, Channel:Int, NewResponse:Int):Void;
public static function SetCollisionResponseToAllChannels(self:unreal.UIntPtr, NewResponse:Int):Void;
public static function SetPhysMaterialOverride(self:unreal.UIntPtr, NewPhysMaterial:unreal.UIntPtr):Void;
public static function SetCullDistance(self:unreal.UIntPtr, NewCullDistance:cpp.Float32):Void;
public static function CanCharacterStepUp(self:unreal.UIntPtr, Pawn:unreal.UIntPtr):Bool;
public static function ReceiveComponentDamage(self:unreal.UIntPtr, DamageAmount:cpp.Float32, DamageEvent:unreal.VariantPtr, EventInstigator:unreal.UIntPtr, DamageCauser:unreal.UIntPtr):Void;
public static function PutAllRigidBodiesToSleep(self:unreal.UIntPtr):Void;
public static function RigidBodyIsAwake(self:unreal.UIntPtr, BoneName:unreal.VariantPtr):Bool;
public static function RecreatePhysicsState(self:unreal.UIntPtr):Void;
public static function OverlapComponent(self:unreal.UIntPtr, Pos:unreal.VariantPtr, Rot:unreal.VariantPtr, CollisionShape:unreal.VariantPtr):Bool;
public static function GetCollisionShape(self:unreal.UIntPtr, Inflation:cpp.Float32):unreal.VariantPtr;
public static function WeldTo(self:unreal.UIntPtr, InParent:unreal.UIntPtr, InSocketName:unreal.VariantPtr):Void;
public static function StaticClass():unreal.UIntPtr;
}