/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.fieldsystemengine;

/**
  Plane scalar field that will be defined only within a distance from a plane
**/
@:umodule("FieldSystemEngine")
@:glueCppIncludes("Field/FieldSystemObjects.h")
@:uextern @:uclass extern class UPlaneFalloff extends unreal.fieldsystemengine.UFieldNodeFloat {
  
  /**
    Type of falloff function used to model the evolution of the field from the plane surface to the distance isosurface
  **/
  @:uproperty public var Falloff : unreal.chaos.EFieldFalloffType;
  
  /**
    Plane normal of the plane falloff field
  **/
  @:uproperty public var Normal : unreal.FVector;
  
  /**
    Plane position of the plane falloff field
  **/
  @:uproperty public var Position : unreal.FVector;
  
  /**
    Distance limit for the plane falloff field
  **/
  @:uproperty public var Distance : unreal.Float32;
  
  /**
    The field value will be set to Default if the sample distance from the plane is higher than the distance
  **/
  @:uproperty public var Default : unreal.Float32;
  
  /**
    The initial function value between 0 and 1 will be scaled between MinRange and MaxRange before being multiplied by magnitude
  **/
  @:uproperty public var MaxRange : unreal.Float32;
  
  /**
    The initial function value between 0 and 1 will be scaled between MinRange and MaxRange before being multiplied by magnitude
  **/
  @:uproperty public var MinRange : unreal.Float32;
  
  /**
    Magnitude of the plane falloff field
  **/
  @:uproperty public var Magnitude : unreal.Float32;
  
  /**
    Plane scalar field that will be defined only within a distance from a plane
    @param    Magnitude Magnitude of the plane falloff field
    @param    MinRange The initial function value between 0 and 1 will be scaled between MinRange and MaxRange before being multiplied by magnitude
    @param    MaxRange The initial function value between 0 and 1 will be scaled between MinRange and MaxRange before being multiplied by magnitude
    @param    Default The field value will be set to default if the sample projected distance ((Sample Position - Center Position).dot(Plane Normal)) is higher than the Plane Distance
    @param    Distance Distance limit for the plane falloff field starting from the center position and extending in the direction of the plane normal
    @param    Position Plane center position of the plane falloff field
    @param    Normal Plane normal of the plane falloff field
    @param    Falloff Type of falloff function used to model the evolution of the field from the plane surface to the distance isosurface
  **/
  @:ufunction(BlueprintCallable) @:final public function SetPlaneFalloff(@:bpopt("1.0") Magnitude : unreal.Float32, @:bpopt("0.0") MinRange : unreal.Float32, @:bpopt("1.0") MaxRange : unreal.Float32, Default : unreal.Float32, Distance : unreal.Float32, Position : unreal.FVector, Normal : unreal.FVector, Falloff : unreal.chaos.EFieldFalloffType) : unreal.fieldsystemengine.UPlaneFalloff;
  
}
