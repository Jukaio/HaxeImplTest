/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.niagara;

/**
  Defines modes for updating the component's age.
**/
@:umodule("Niagara")
@:glueCppIncludes("Public/NiagaraCommon.h")
@:uname("ENiagaraAgeUpdateMode")
@:class @:uextern @:uenum extern enum ENiagaraAgeUpdateMode {
  
  /**
    Update the age using the delta time supplied to the component tick function.
  **/
  TickDeltaTime;
  
  /**
    Update the age by seeking to the DesiredAge. To prevent major perf loss, we clamp to MaxClampTime
  **/
  DesiredAge;
  
  /**
    Update the age by tracking changes to the desired age, but when the desired age goes backwards in time,
          or jumps forwards in time by more than a few steps, the system is reset and simulated forward by a single step.
          This mode is useful for continuous effects controlled by sequencer.
  **/
  DesiredAgeNoSeek;
  
}
