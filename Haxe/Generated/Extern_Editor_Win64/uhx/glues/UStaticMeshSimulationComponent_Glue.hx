// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/geometrycollectionengine/ustaticmeshsimulationcomponent.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UStaticMeshSimulationComponent_Glue {
public static function get_OnChaosPhysicsCollision(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnChaosPhysicsCollision(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ChaosSolverActor(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ChaosSolverActor(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_PhysicalMaterial(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PhysicalMaterial(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_DamageThreshold(self:unreal.UIntPtr):cpp.Float32;
public static function set_DamageThreshold(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_InitialAngularVelocity(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_InitialAngularVelocity(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_InitialLinearVelocity(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_InitialLinearVelocity(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_InitialVelocityType(self:unreal.UIntPtr):Int;
public static function set_InitialVelocityType(self:unreal.UIntPtr, value:Int):Void;
public static function get_MaxLevelSetResolution(self:unreal.UIntPtr):Int;
public static function set_MaxLevelSetResolution(self:unreal.UIntPtr, value:Int):Void;
public static function get_MinLevelSetResolution(self:unreal.UIntPtr):Int;
public static function set_MinLevelSetResolution(self:unreal.UIntPtr, value:Int):Void;
public static function get_ImplicitType(self:unreal.UIntPtr):Int;
public static function set_ImplicitType(self:unreal.UIntPtr, value:Int):Void;
public static function get_CollisionType(self:unreal.UIntPtr):Int;
public static function set_CollisionType(self:unreal.UIntPtr, value:Int):Void;
public static function get_Mass(self:unreal.UIntPtr):cpp.Float32;
public static function set_Mass(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ObjectType(self:unreal.UIntPtr):Int;
public static function set_ObjectType(self:unreal.UIntPtr, value:Int):Void;
public static function get_bNotifyCollisions(self:unreal.UIntPtr):Bool;
public static function set_bNotifyCollisions(self:unreal.UIntPtr, value:Bool):Void;
public static function get_Simulating(self:unreal.UIntPtr):Bool;
public static function set_Simulating(self:unreal.UIntPtr, value:Bool):Void;
public static function ReceivePhysicsCollision(self:unreal.UIntPtr, CollisionInfo:unreal.VariantPtr):Void;
public static function ForceRecreatePhysicsState(self:unreal.UIntPtr):Void;
public static function StaticClass():unreal.UIntPtr;
}