// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/synthesis/umodularsynthcomponent.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UModularSynthComponent_Glue {
public static function get_VoiceCount(self:unreal.UIntPtr):Int;
public static function set_VoiceCount(self:unreal.UIntPtr, value:Int):Void;
public static function NoteOn(self:unreal.UIntPtr, Note:cpp.Float32, Velocity:Int, Duration:cpp.Float32):Void;
public static function NoteOff(self:unreal.UIntPtr, Note:cpp.Float32, bAllNotesOff:Bool, bKillAllNotes:Bool):Void;
public static function SetEnablePolyphony(self:unreal.UIntPtr, bEnablePolyphony:Bool):Void;
public static function SetOscGain(self:unreal.UIntPtr, OscIndex:Int, OscGain:cpp.Float32):Void;
public static function SetOscGainMod(self:unreal.UIntPtr, OscIndex:Int, OscGainMod:cpp.Float32):Void;
public static function SetOscFrequencyMod(self:unreal.UIntPtr, OscIndex:Int, OscFreqMod:cpp.Float32):Void;
public static function SetOscType(self:unreal.UIntPtr, OscIndex:Int, OscType:Int):Void;
public static function SetOscOctave(self:unreal.UIntPtr, OscIndex:Int, Octave:cpp.Float32):Void;
public static function SetOscSemitones(self:unreal.UIntPtr, OscIndex:Int, Semitones:cpp.Float32):Void;
public static function SetOscCents(self:unreal.UIntPtr, OscIndex:Int, Cents:cpp.Float32):Void;
public static function SetPitchBend(self:unreal.UIntPtr, PitchBend:cpp.Float32):Void;
public static function SetPortamento(self:unreal.UIntPtr, Portamento:cpp.Float32):Void;
public static function SetOscPulsewidth(self:unreal.UIntPtr, OscIndex:Int, Pulsewidth:cpp.Float32):Void;
public static function SetEnableUnison(self:unreal.UIntPtr, EnableUnison:Bool):Void;
public static function SetOscSync(self:unreal.UIntPtr, bIsSynced:Bool):Void;
public static function SetPan(self:unreal.UIntPtr, Pan:cpp.Float32):Void;
public static function SetSpread(self:unreal.UIntPtr, Spread:cpp.Float32):Void;
public static function SetLFOFrequency(self:unreal.UIntPtr, LFOIndex:Int, FrequencyHz:cpp.Float32):Void;
public static function SetLFOFrequencyMod(self:unreal.UIntPtr, LFOIndex:Int, FrequencyModHz:cpp.Float32):Void;
public static function SetLFOGain(self:unreal.UIntPtr, LFOIndex:Int, Gain:cpp.Float32):Void;
public static function SetLFOGainMod(self:unreal.UIntPtr, LFOIndex:Int, GainMod:cpp.Float32):Void;
public static function SetLFOType(self:unreal.UIntPtr, LFOIndex:Int, LFOType:Int):Void;
public static function SetLFOMode(self:unreal.UIntPtr, LFOIndex:Int, LFOMode:Int):Void;
public static function SetLFOPatch(self:unreal.UIntPtr, LFOIndex:Int, LFOPatchType:Int):Void;
public static function SetGainDb(self:unreal.UIntPtr, GainDb:cpp.Float32):Void;
public static function SetAttackTime(self:unreal.UIntPtr, AttackTimeMsec:cpp.Float32):Void;
public static function SetDecayTime(self:unreal.UIntPtr, DecayTimeMsec:cpp.Float32):Void;
public static function SetSustainGain(self:unreal.UIntPtr, SustainGain:cpp.Float32):Void;
public static function SetReleaseTime(self:unreal.UIntPtr, ReleaseTimeMsec:cpp.Float32):Void;
public static function SetModEnvPatch(self:unreal.UIntPtr, InPatchType:Int):Void;
public static function SetModEnvBiasPatch(self:unreal.UIntPtr, InPatchType:Int):Void;
public static function SetModEnvInvert(self:unreal.UIntPtr, bInvert:Bool):Void;
public static function SetModEnvBiasInvert(self:unreal.UIntPtr, bInvert:Bool):Void;
public static function SetModEnvDepth(self:unreal.UIntPtr, Depth:cpp.Float32):Void;
public static function SetModEnvAttackTime(self:unreal.UIntPtr, AttackTimeMsec:cpp.Float32):Void;
public static function SetModEnvDecayTime(self:unreal.UIntPtr, DecayTimeMsec:cpp.Float32):Void;
public static function SetModEnvSustainGain(self:unreal.UIntPtr, SustainGain:cpp.Float32):Void;
public static function SetModEnvReleaseTime(self:unreal.UIntPtr, Release:cpp.Float32):Void;
public static function SetEnableLegato(self:unreal.UIntPtr, LegatoEnabled:Bool):Void;
public static function SetEnableRetrigger(self:unreal.UIntPtr, RetriggerEnabled:Bool):Void;
public static function SetFilterFrequency(self:unreal.UIntPtr, FilterFrequencyHz:cpp.Float32):Void;
public static function SetFilterFrequencyMod(self:unreal.UIntPtr, FilterFrequencyHz:cpp.Float32):Void;
public static function SetFilterQ(self:unreal.UIntPtr, FilterQ:cpp.Float32):Void;
public static function SetFilterQMod(self:unreal.UIntPtr, FilterQ:cpp.Float32):Void;
public static function SetFilterType(self:unreal.UIntPtr, FilterType:Int):Void;
public static function SetFilterAlgorithm(self:unreal.UIntPtr, FilterAlgorithm:Int):Void;
public static function SetStereoDelayIsEnabled(self:unreal.UIntPtr, StereoDelayEnabled:Bool):Void;
public static function SetStereoDelayMode(self:unreal.UIntPtr, StereoDelayMode:Int):Void;
public static function SetStereoDelayTime(self:unreal.UIntPtr, DelayTimeMsec:cpp.Float32):Void;
public static function SetStereoDelayFeedback(self:unreal.UIntPtr, DelayFeedback:cpp.Float32):Void;
public static function SetStereoDelayWetlevel(self:unreal.UIntPtr, DelayWetlevel:cpp.Float32):Void;
public static function SetStereoDelayRatio(self:unreal.UIntPtr, DelayRatio:cpp.Float32):Void;
public static function SetChorusEnabled(self:unreal.UIntPtr, EnableChorus:Bool):Void;
public static function SetChorusDepth(self:unreal.UIntPtr, Depth:cpp.Float32):Void;
public static function SetChorusFeedback(self:unreal.UIntPtr, Feedback:cpp.Float32):Void;
public static function SetChorusFrequency(self:unreal.UIntPtr, Frequency:cpp.Float32):Void;
public static function SetSynthPreset(self:unreal.UIntPtr, SynthPreset:unreal.VariantPtr):Void;
public static function CreatePatch(self:unreal.UIntPtr, PatchSource:Int, PatchCables:unreal.VariantPtr, bEnableByDefault:Bool):unreal.VariantPtr;
public static function SetEnablePatch(self:unreal.UIntPtr, PatchId:unreal.VariantPtr, bIsEnabled:Bool):Bool;
public static function StaticClass():unreal.UIntPtr;
}