/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.levelsequence;

/**
  Replicated actor class that is responsible for instigating various cinematic assets (Media, Audio, Level Sequences) in a synchronized fasion
**/
@:umodule("LevelSequence")
@:glueCppIncludes("SequenceMediaController.h")
@:uextern @:uclass extern class ALevelSequenceMediaController extends unreal.AActor implements unreal.moviescene.IMovieSceneCustomClockSource {
  @:ufunction(BlueprintCallable) @:final public function Play() : Void;
  
  /**
    Access this actor's media component
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetMediaComponent() : unreal.mediaassets.UMediaComponent;
  
  /**
    Access this actor's Level Sequence Actor
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetSequence() : unreal.levelsequence.ALevelSequenceActor;
  
  /**
    Forcibly synchronize the sequence to the server's position if it has diverged by more than the specified threshold
  **/
  @:ufunction(BlueprintCallable) @:final public function SynchronizeToServer(DesyncThresholdSeconds : unreal.Float32 = 2.000000) : Void;
  // MovieSceneCustomClockSource interface implementation
  @:ufunction public function OnTick(DeltaSeconds : unreal.Float32, InPlayRate : unreal.Float32) : Void;
  @:ufunction public function OnStartPlaying(InStartTime : unreal.Const<unreal.PRef<unreal.FQualifiedFrameTime>>) : Void;
  @:ufunction public function OnStopPlaying(InStopTime : unreal.Const<unreal.PRef<unreal.FQualifiedFrameTime>>) : Void;
  @:ufunction public function OnRequestCurrentTime(InCurrentTime : unreal.Const<unreal.PRef<unreal.FQualifiedFrameTime>>, InPlayRate : unreal.Float32) : unreal.FFrameTime;
  
}
