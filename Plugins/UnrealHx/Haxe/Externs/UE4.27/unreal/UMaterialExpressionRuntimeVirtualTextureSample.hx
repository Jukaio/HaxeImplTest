/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  Material expression for sampling from a runtime virtual texture.
**/
@:glueCppIncludes("Materials/MaterialExpressionRuntimeVirtualTextureSample.h")
@:uextern @:uclass extern class UMaterialExpressionRuntimeVirtualTextureSample extends unreal.UMaterialExpression {
  
  /**
    Defines the texture addressing mode.
  **/
  @:uproperty public var TextureAddressMode : unreal.ERuntimeVirtualTextureTextureAddressMode;
  
  /**
    Defines how the MipValue property is applied to the virtual texture lookup.
  **/
  @:uproperty public var MipValueMode : unreal.ERuntimeVirtualTextureMipValueMode;
  
  /**
    Enable sparse adaptive page tables. Note that the bound Virtual Texture should have valid adaptive virtual texture settings for sampling to work correctly.
  **/
  @:uproperty public var bAdaptive : Bool;
  
  /**
    Enable page table channel packing. Note that the bound Virtual Texture should have the same setting for sampling to work correctly.
  **/
  @:uproperty public var bSinglePhysicalSpace : Bool;
  
  /**
    How to interpret the virtual texture contents. Note that the bound Virtual Texture should have the same setting for sampling to work correctly.
  **/
  @:uproperty public var MaterialType : unreal.ERuntimeVirtualTextureMaterialType;
  
  /**
    The virtual texture object to sample.
  **/
  @:uproperty public var VirtualTexture : unreal.URuntimeVirtualTexture;
  
  /**
    Meaning depends on MipValueMode. A single unit is one mip level.
  **/
  @:uproperty public var MipValue : unreal.FExpressionInput;
  
  /**
    Optional world position input to override the default world position.
  **/
  @:uproperty public var WorldPosition : unreal.FExpressionInput;
  
  /**
    Optional UV coordinates input if we want to override standard world position based coordinates.
  **/
  @:uproperty public var Coordinates : unreal.FExpressionInput;
  
}
