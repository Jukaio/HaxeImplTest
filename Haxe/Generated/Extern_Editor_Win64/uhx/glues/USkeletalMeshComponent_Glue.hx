// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/uskeletalmeshcomponent.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class USkeletalMeshComponent_Glue {
public static function get_OnAnimInitialized(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnAnimInitialized(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ClothingSimulationFactory(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ClothingSimulationFactory(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_OnConstraintBroken(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_OnConstraintBroken(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_BodySetup(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_BodySetup(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_bWaitForParallelClothTask(self:unreal.UIntPtr):Bool;
public static function set_bWaitForParallelClothTask(self:unreal.UIntPtr, value:Bool):Void;
public static function get_ClothBlendWeight(self:unreal.UIntPtr):cpp.Float32;
public static function set_ClothBlendWeight(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_CachedAnimCurveUidVersion(self:unreal.UIntPtr):cpp.UInt16;
public static function set_CachedAnimCurveUidVersion(self:unreal.UIntPtr, value:cpp.UInt16):Void;
public static function get_bSkipBoundsUpdateWhenInterpolating(self:unreal.UIntPtr):Bool;
public static function set_bSkipBoundsUpdateWhenInterpolating(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bSkipKinematicUpdateWhenInterpolating(self:unreal.UIntPtr):Bool;
public static function set_bSkipKinematicUpdateWhenInterpolating(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bPropagateCurvesToSlaves(self:unreal.UIntPtr):Bool;
public static function set_bPropagateCurvesToSlaves(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableLineCheckWithBounds(self:unreal.UIntPtr):Bool;
public static function set_bEnableLineCheckWithBounds(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bIncludeComponentLocationIntoBounds(self:unreal.UIntPtr):Bool;
public static function set_bIncludeComponentLocationIntoBounds(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bAnimTreeInitialised(self:unreal.UIntPtr):Bool;
public static function set_bAnimTreeInitialised(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bRequiredBonesUpToDate(self:unreal.UIntPtr):Bool;
public static function set_bRequiredBonesUpToDate(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bShowPrePhysBones(self:unreal.UIntPtr):Bool;
public static function set_bShowPrePhysBones(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bOldForceRefPose(self:unreal.UIntPtr):Bool;
public static function set_bOldForceRefPose(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bIsAutonomousTickPose(self:unreal.UIntPtr):Bool;
public static function set_bIsAutonomousTickPose(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bOnlyAllowAutonomousTickPose(self:unreal.UIntPtr):Bool;
public static function set_bOnlyAllowAutonomousTickPose(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bForceRefpose(self:unreal.UIntPtr):Bool;
public static function set_bForceRefpose(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnablePerPolyCollision(self:unreal.UIntPtr):Bool;
public static function set_bEnablePerPolyCollision(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUseRefPoseOnInitAnim(self:unreal.UIntPtr):Bool;
public static function set_bUseRefPoseOnInitAnim(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bPauseAnims(self:unreal.UIntPtr):Bool;
public static function set_bPauseAnims(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bNoSkeletonUpdate(self:unreal.UIntPtr):Bool;
public static function set_bNoSkeletonUpdate(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bDeferKinematicBoneUpdate(self:unreal.UIntPtr):Bool;
public static function set_bDeferKinematicBoneUpdate(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bResetAfterTeleport(self:unreal.UIntPtr):Bool;
public static function set_bResetAfterTeleport(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bLocalSpaceSimulation(self:unreal.UIntPtr):Bool;
public static function set_bLocalSpaceSimulation(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCollideWithAttachedChildren(self:unreal.UIntPtr):Bool;
public static function set_bCollideWithAttachedChildren(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bCollideWithEnvironment(self:unreal.UIntPtr):Bool;
public static function set_bCollideWithEnvironment(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bDisableClothSimulation(self:unreal.UIntPtr):Bool;
public static function set_bDisableClothSimulation(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUpdateJointsFromAnimation(self:unreal.UIntPtr):Bool;
public static function set_bUpdateJointsFromAnimation(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnablePhysicsOnDedicatedServer(self:unreal.UIntPtr):Bool;
public static function set_bEnablePhysicsOnDedicatedServer(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bBlendPhysics(self:unreal.UIntPtr):Bool;
public static function set_bBlendPhysics(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bHasValidBodies(self:unreal.UIntPtr):Bool;
public static function set_bHasValidBodies(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bUpdateOverlapsOnAnimationFinalize(self:unreal.UIntPtr):Bool;
public static function set_bUpdateOverlapsOnAnimationFinalize(self:unreal.UIntPtr, value:Bool):Void;
public static function get_AnimationMode(self:unreal.UIntPtr):Int;
public static function set_AnimationMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_PhysicsTransformUpdateMode(self:unreal.UIntPtr):Int;
public static function set_PhysicsTransformUpdateMode(self:unreal.UIntPtr, value:Int):Void;
public static function get_KinematicBonesUpdateType(self:unreal.UIntPtr):Int;
public static function set_KinematicBonesUpdateType(self:unreal.UIntPtr, value:Int):Void;
public static function get_GlobalAnimRateScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_GlobalAnimRateScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_LineCheckBoundsScale(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LineCheckBoundsScale(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_RootBoneTranslation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_RootBoneTranslation(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_AnimationData(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_AnimationData(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PostProcessAnimInstance(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PostProcessAnimInstance(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_SubInstances(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SubInstances(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_AnimScriptInstance(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_AnimScriptInstance(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_AnimClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_AnimClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_AnimBlueprintGeneratedClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_AnimBlueprintGeneratedClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_AnimationBlueprint_DEPRECATED(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_AnimationBlueprint_DEPRECATED(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function ToggleDisablePostProcessBlueprint(self:unreal.UIntPtr):Void;
public static function GetDisablePostProcessBlueprint(self:unreal.UIntPtr):Bool;
public static function SetDisablePostProcessBlueprint(self:unreal.UIntPtr, bInDisablePostProcess:Bool):Void;
public static function GetFloatAttribute_Ref(self:unreal.UIntPtr, BoneName:unreal.VariantPtr, AttributeName:unreal.VariantPtr, OutValue:cpp.Float32, LookupType:Int):Bool;
public static function GetIntegerAttribute_Ref(self:unreal.UIntPtr, BoneName:unreal.VariantPtr, AttributeName:unreal.VariantPtr, OutValue:Int, LookupType:Int):Bool;
public static function GetStringAttribute_Ref(self:unreal.UIntPtr, BoneName:unreal.VariantPtr, AttributeName:unreal.VariantPtr, OutValue:unreal.VariantPtr, LookupType:Int):Bool;
public static function GetFloatAttribute(self:unreal.UIntPtr, BoneName:unreal.VariantPtr, AttributeName:unreal.VariantPtr, DefaultValue:cpp.Float32, OutValue:cpp.Float32, LookupType:Int):Bool;
public static function GetIntegerAttribute(self:unreal.UIntPtr, BoneName:unreal.VariantPtr, AttributeName:unreal.VariantPtr, DefaultValue:Int, OutValue:Int, LookupType:Int):Bool;
public static function GetStringAttribute(self:unreal.UIntPtr, BoneName:unreal.VariantPtr, AttributeName:unreal.VariantPtr, DefaultValue:unreal.VariantPtr, OutValue:unreal.VariantPtr, LookupType:Int):Bool;
public static function SetAnimClass(self:unreal.UIntPtr, NewClass:unreal.UIntPtr):Void;
public static function GetAnimClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GetAnimInstance(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GetPostProcessInstance(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GetLinkedAnimGraphInstanceByTag(self:unreal.UIntPtr, InTag:unreal.VariantPtr):unreal.UIntPtr;
public static function GetLinkedAnimGraphInstancesByTag(self:unreal.UIntPtr, InTag:unreal.VariantPtr, OutLinkedInstances:unreal.VariantPtr):Void;
public static function LinkAnimGraphByTag(self:unreal.UIntPtr, InTag:unreal.VariantPtr, InClass:unreal.UIntPtr):Void;
public static function LinkAnimClassLayers(self:unreal.UIntPtr, InClass:unreal.UIntPtr):Void;
public static function UnlinkAnimClassLayers(self:unreal.UIntPtr, InClass:unreal.UIntPtr):Void;
public static function GetLinkedAnimLayerInstanceByGroup(self:unreal.UIntPtr, InGroup:unreal.VariantPtr):unreal.UIntPtr;
public static function GetLinkedAnimLayerInstanceByClass(self:unreal.UIntPtr, InClass:unreal.UIntPtr):unreal.UIntPtr;
public static function HasValidAnimationInstance(self:unreal.UIntPtr):Bool;
public static function ResetAnimInstanceDynamics(self:unreal.UIntPtr, InTeleportType:Int):Void;
public static function SetAnimationMode(self:unreal.UIntPtr, InAnimationMode:Int):Void;
public static function GetAnimationMode(self:unreal.UIntPtr):Int;
public static function PlayAnimation(self:unreal.UIntPtr, NewAnimToPlay:unreal.UIntPtr, bLooping:Bool):Void;
public static function SetAnimation(self:unreal.UIntPtr, NewAnimToPlay:unreal.UIntPtr):Void;
public static function Play(self:unreal.UIntPtr, bLooping:Bool):Void;
public static function Stop(self:unreal.UIntPtr):Void;
public static function IsPlaying(self:unreal.UIntPtr):Bool;
public static function SetPosition(self:unreal.UIntPtr, InPos:cpp.Float32, bFireNotifies:Bool):Void;
public static function GetPosition(self:unreal.UIntPtr):cpp.Float32;
public static function SetPlayRate(self:unreal.UIntPtr, Rate:cpp.Float32):Void;
public static function GetPlayRate(self:unreal.UIntPtr):cpp.Float32;
public static function OverrideAnimationData(self:unreal.UIntPtr, InAnimToPlay:unreal.UIntPtr, bIsLooping:Bool, bIsPlaying:Bool, Position:cpp.Float32, PlayRate:cpp.Float32):Void;
public static function SetMorphTarget(self:unreal.UIntPtr, MorphTargetName:unreal.VariantPtr, Value:cpp.Float32, bRemoveZeroWeight:Bool):Void;
public static function ClearMorphTargets(self:unreal.UIntPtr):Void;
public static function GetMorphTarget(self:unreal.UIntPtr, MorphTargetName:unreal.VariantPtr):cpp.Float32;
public static function SnapshotPose(self:unreal.UIntPtr, Snapshot:unreal.VariantPtr):Void;
public static function GetClothMaxDistanceScale(self:unreal.UIntPtr):cpp.Float32;
public static function SetClothMaxDistanceScale(self:unreal.UIntPtr, Scale:cpp.Float32):Void;
public static function ForceClothNextUpdateTeleport(self:unreal.UIntPtr):Void;
public static function ForceClothNextUpdateTeleportAndReset(self:unreal.UIntPtr):Void;
public static function SuspendClothingSimulation(self:unreal.UIntPtr):Void;
public static function ResumeClothingSimulation(self:unreal.UIntPtr):Void;
public static function IsClothingSimulationSuspended(self:unreal.UIntPtr):Bool;
public static function ResetClothTeleportMode(self:unreal.UIntPtr):Void;
public static function BindClothToMasterPoseComponent(self:unreal.UIntPtr):Void;
public static function UnbindClothFromMasterPoseComponent(self:unreal.UIntPtr, bRestoreSimulationSpace:Bool):Void;
public static function SetAllowRigidBodyAnimNode(self:unreal.UIntPtr, bInAllow:Bool, bReinitAnim:Bool):Void;
public static function GetAllowRigidBodyAnimNode(self:unreal.UIntPtr):Bool;
public static function SetUpdateAnimationInEditor(self:unreal.UIntPtr, NewUpdateState:Bool):Void;
public static function SetUpdateClothInEditor(self:unreal.UIntPtr, NewUpdateState:Bool):Void;
public static function SetDisableAnimCurves(self:unreal.UIntPtr, bInDisableAnimCurves:Bool):Void;
public static function GetDisableAnimCurves(self:unreal.UIntPtr):Bool;
public static function SetAllowAnimCurveEvaluation(self:unreal.UIntPtr, bInAllow:Bool):Void;
public static function GetAllowedAnimCurveEvaluate(self:unreal.UIntPtr):Bool;
public static function AllowAnimCurveEvaluation(self:unreal.UIntPtr, NameOfCurve:unreal.VariantPtr, bAllow:Bool):Void;
public static function ResetAllowedAnimCurveEvaluation(self:unreal.UIntPtr):Void;
public static function SetAllowedAnimCurvesEvaluation(self:unreal.UIntPtr, List:unreal.VariantPtr, bAllow:Bool):Void;
public static function GetTeleportRotationThreshold(self:unreal.UIntPtr):cpp.Float32;
public static function SetTeleportRotationThreshold(self:unreal.UIntPtr, Threshold:cpp.Float32):Void;
public static function GetTeleportDistanceThreshold(self:unreal.UIntPtr):cpp.Float32;
public static function SetTeleportDistanceThreshold(self:unreal.UIntPtr, Threshold:cpp.Float32):Void;
public static function GetClothingSimulationInteractor(self:unreal.UIntPtr):unreal.UIntPtr;
public static function SetBodyNotifyRigidBodyCollision(self:unreal.UIntPtr, bNewNotifyRigidBodyCollision:Bool, BoneName:unreal.VariantPtr):Void;
public static function SetNotifyRigidBodyCollisionBelow(self:unreal.UIntPtr, bNewNotifyRigidBodyCollision:Bool, BoneName:unreal.VariantPtr, bIncludeSelf:Bool):Void;
public static function SetEnableBodyGravity(self:unreal.UIntPtr, bEnableGravity:Bool, BoneName:unreal.VariantPtr):Void;
public static function IsBodyGravityEnabled(self:unreal.UIntPtr, BoneName:unreal.VariantPtr):Bool;
public static function SetEnableGravityOnAllBodiesBelow(self:unreal.UIntPtr, bEnableGravity:Bool, BoneName:unreal.VariantPtr, bIncludeSelf:Bool):Void;
public static function K2_GetClosestPointOnPhysicsAsset(self:unreal.UIntPtr, WorldPosition:unreal.VariantPtr, ClosestWorldPosition:unreal.VariantPtr, Normal:unreal.VariantPtr, BoneName:unreal.VariantPtr, Distance:cpp.Float32):Bool;
public static function GetBoneMass(self:unreal.UIntPtr, BoneName:unreal.VariantPtr, bScaleMass:Bool):cpp.Float32;
public static function GetSkeletalCenterOfMass(self:unreal.UIntPtr):unreal.VariantPtr;
public static function AddForceToAllBodiesBelow(self:unreal.UIntPtr, Force:unreal.VariantPtr, BoneName:unreal.VariantPtr, bAccelChange:Bool, bIncludeSelf:Bool):Void;
public static function AddImpulseToAllBodiesBelow(self:unreal.UIntPtr, Impulse:unreal.VariantPtr, BoneName:unreal.VariantPtr, bVelChange:Bool, bIncludeSelf:Bool):Void;
public static function TermBodiesBelow(self:unreal.UIntPtr, ParentBoneName:unreal.VariantPtr):Void;
public static function SetAllBodiesSimulatePhysics(self:unreal.UIntPtr, bNewSimulate:Bool):Void;
public static function SetPhysicsBlendWeight(self:unreal.UIntPtr, PhysicsBlendWeight:cpp.Float32):Void;
public static function SetEnablePhysicsBlending(self:unreal.UIntPtr, bNewBlendPhysics:Bool):Void;
public static function SetAllBodiesBelowSimulatePhysics(self:unreal.UIntPtr, InBoneName:unreal.VariantPtr, bNewSimulate:Bool, bIncludeSelf:Bool):Void;
public static function ResetAllBodiesSimulatePhysics(self:unreal.UIntPtr):Void;
public static function SetAllBodiesPhysicsBlendWeight(self:unreal.UIntPtr, PhysicsBlendWeight:cpp.Float32, bSkipCustomPhysicsType:Bool):Void;
public static function SetAllBodiesBelowPhysicsBlendWeight(self:unreal.UIntPtr, InBoneName:unreal.VariantPtr, PhysicsBlendWeight:cpp.Float32, bSkipCustomPhysicsType:Bool, bIncludeSelf:Bool):Void;
public static function AccumulateAllBodiesBelowPhysicsBlendWeight(self:unreal.UIntPtr, InBoneName:unreal.VariantPtr, AddPhysicsBlendWeight:cpp.Float32, bSkipCustomPhysicsType:Bool):Void;
public static function SetAllMotorsAngularPositionDrive(self:unreal.UIntPtr, bEnableSwingDrive:Bool, bEnableTwistDrive:Bool, bSkipCustomPhysicsType:Bool):Void;
public static function SetAllMotorsAngularVelocityDrive(self:unreal.UIntPtr, bEnableSwingDrive:Bool, bEnableTwistDrive:Bool, bSkipCustomPhysicsType:Bool):Void;
public static function SetAllMotorsAngularDriveParams(self:unreal.UIntPtr, InSpring:cpp.Float32, InDamping:cpp.Float32, InForceLimit:cpp.Float32, bSkipCustomPhysicsType:Bool):Void;
public static function SetConstraintProfile(self:unreal.UIntPtr, JointName:unreal.VariantPtr, ProfileName:unreal.VariantPtr, bDefaultIfNotFound:Bool):Void;
public static function SetConstraintProfileForAll(self:unreal.UIntPtr, ProfileName:unreal.VariantPtr, bDefaultIfNotFound:Bool):Void;
public static function FindConstraintBoneName(self:unreal.UIntPtr, ConstraintIndex:Int):unreal.VariantPtr;
public static function BreakConstraint(self:unreal.UIntPtr, Impulse:unreal.VariantPtr, HitLocation:unreal.VariantPtr, InBoneName:unreal.VariantPtr):Void;
public static function SetAngularLimits(self:unreal.UIntPtr, InBoneName:unreal.VariantPtr, Swing1LimitAngle:cpp.Float32, TwistLimitAngle:cpp.Float32, Swing2LimitAngle:cpp.Float32):Void;
public static function GetCurrentJointAngles(self:unreal.UIntPtr, InBoneName:unreal.VariantPtr, Swing1Angle:cpp.Float32, TwistAngle:cpp.Float32, Swing2Angle:cpp.Float32):Void;
public static function ClearAnimScriptInstance(self:unreal.UIntPtr):Void;
public static function StaticClass():unreal.UIntPtr;
}