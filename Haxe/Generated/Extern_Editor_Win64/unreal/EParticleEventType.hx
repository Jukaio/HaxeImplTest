// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/eparticleeventtype.hx
package unreal;
/**
  
  Event type
  
**/

@:umodule("Unreal")
@:flatEnum
@:glueCppIncludes("Classes/Particles/ParticleSystemComponent.h")
@:uname("EParticleEventType")
@:uextern
@:uenum
enum EParticleEventType {
  /**
    
    Any - allow any event
    @DisplayName Any
    
  **/
  
  @DisplayName("Any")
  EPET_Any;
  /**
    
    Spawn - a particle spawn event
    @DisplayName Spawn
    
  **/
  
  @DisplayName("Spawn")
  EPET_Spawn;
  /**
    
    Death - a particle death event
    @DisplayName Death
    
  **/
  
  @DisplayName("Death")
  EPET_Death;
  /**
    
    Collision - a particle collision event
    @DisplayName Collision
    
  **/
  
  @DisplayName("Collision")
  EPET_Collision;
  /**
    
    Burst - a particle burst event
    @DisplayName Burst
    
  **/
  
  @DisplayName("Burst")
  EPET_Burst;
  /**
    
    Blueprint - an event generated by level script
    @DisplayName Blueprint
    
  **/
  
  @DisplayName("Blueprint")
  EPET_Blueprint;
  EPET_MAX;
  
}

@:ueGluePath("uhx.glues.EParticleEventType_Glue")
@:umodule("Unreal")
@:flatEnum
@:glueCppIncludes("Classes/Particles/ParticleSystemComponent.h")
@:uname("EParticleEventType")
@:uextern
@:uenum
@:glueCppIncludes("uhx/expose/HxcppRuntime.h", "uhx/EnumGlue.h")
@:ueCppDef("namespace uhx {\n\ntemplate<> struct EnumGlue<EParticleEventType> {\n\tstatic EParticleEventType haxeToUe(unreal::UIntPtr haxe);\n\tstatic unreal::UIntPtr ueToHaxe(EParticleEventType ue);\n};\n}\n\nEParticleEventType uhx::EnumGlue< EParticleEventType >::haxeToUe(unreal::UIntPtr haxe) {\n\t\treturn (EParticleEventType) uhx::glues::EParticleEventType_Glue::haxeToUe( uhx::expose::HxcppRuntime::enumIndex(haxe) + 1 );\n}\nunreal::UIntPtr uhx::EnumGlue< EParticleEventType >::ueToHaxe(EParticleEventType ue) {\n\t\tstatic unreal::UIntPtr array = uhx::expose::HxcppRuntime::getEnumArray(\"EParticleEventType\");\n\t\treturn uhx::expose::HxcppRuntime::arrayIndex(array, uhx::glues::EParticleEventType_Glue::ueToHaxe((int) ue) - 1);\n}")
@:ifFeature("unreal.EParticleEventType.*") class EParticleEventType_EnumConv {
  public static var all:Array<EParticleEventType>;
  static function __init__(){
    uhx.EnumMap.set("EParticleEventType", all = std.Type.allEnums(unreal.EParticleEventType));
    uhx.EnumMap.setUeToHaxe("EParticleEventType", ueToHaxe);
    uhx.EnumMap.setHaxeToUe("unreal.EParticleEventType", haxeToUe);
  }
  
  @:glueHeaderCode("static int ueToHaxe(int value);")
  @:glueCppCode("int uhx::glues::EParticleEventType_Glue_obj::ueToHaxe(int value) {\n\tswitch((EParticleEventType) value) {\n\tcase EPET_Any:\n\t\treturn 1;\n\tcase EPET_Spawn:\n\t\treturn 2;\n\tcase EPET_Death:\n\t\treturn 3;\n\tcase EPET_Collision:\n\t\treturn 4;\n\tcase EPET_Burst:\n\t\treturn 5;\n\tcase EPET_Blueprint:\n\t\treturn 6;\n\tcase EPET_MAX:\n\t\treturn 7;\n\t}\n\treturn 0;\n}")
  @:ifFeature("unreal.EParticleEventType.*") public static function ueToHaxe(value:Int):Int {
    return uhx.glues.EParticleEventType_Glue.ueToHaxe(value);
  }
  @:glueHeaderCode("static int haxeToUe(int value);")
  @:glueCppCode("int uhx::glues::EParticleEventType_Glue_obj::haxeToUe(int value) {\n\tswitch(value) {\n\tcase 1:\n\t\treturn (int) EPET_Any;\n\tcase 2:\n\t\treturn (int) EPET_Spawn;\n\tcase 3:\n\t\treturn (int) EPET_Death;\n\tcase 4:\n\t\treturn (int) EPET_Collision;\n\tcase 5:\n\t\treturn (int) EPET_Burst;\n\tcase 6:\n\t\treturn (int) EPET_Blueprint;\n\tcase 7:\n\t\treturn (int) EPET_MAX;\n\t}\n\treturn 0;\n}")
  @:ifFeature("unreal.EParticleEventType.*") public static function haxeToUe(value:Int):Int {
    return uhx.glues.EParticleEventType_Glue.haxeToUe(value);
  }
  public static inline function wrap(v:Int):unreal.EParticleEventType return all[ueToHaxe(v) - 1];
  public static inline function unwrap(v:unreal.EParticleEventType):Int return haxeToUe(v.getIndex() + 1);
}

