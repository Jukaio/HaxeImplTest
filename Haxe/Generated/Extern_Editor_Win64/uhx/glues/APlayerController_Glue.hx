// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/aplayercontroller.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class APlayerController_Glue {
public static function get_SpawnLocation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_SpawnLocation(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_CurrentTouchInterface(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_CurrentTouchInterface(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_InactiveStateInputComponent(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_InactiveStateInputComponent(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_LastCompletedSeamlessTravelCount(self:unreal.UIntPtr):cpp.UInt16;
public static function set_LastCompletedSeamlessTravelCount(self:unreal.UIntPtr, value:cpp.UInt16):Void;
public static function get_SeamlessTravelCount(self:unreal.UIntPtr):cpp.UInt16;
public static function set_SeamlessTravelCount(self:unreal.UIntPtr, value:cpp.UInt16):Void;
public static function get_HitResultTraceDistance(self:unreal.UIntPtr):cpp.Float32;
public static function set_HitResultTraceDistance(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_CurrentClickTraceChannel(self:unreal.UIntPtr):Int;
public static function set_CurrentClickTraceChannel(self:unreal.UIntPtr, value:Int):Void;
public static function get_DefaultClickTraceChannel(self:unreal.UIntPtr):Int;
public static function set_DefaultClickTraceChannel(self:unreal.UIntPtr, value:Int):Void;
public static function get_CurrentMouseCursor(self:unreal.UIntPtr):Int;
public static function set_CurrentMouseCursor(self:unreal.UIntPtr, value:Int):Void;
public static function get_DefaultMouseCursor(self:unreal.UIntPtr):Int;
public static function set_DefaultMouseCursor(self:unreal.UIntPtr, value:Int):Void;
public static function get_ClickEventKeys(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ClickEventKeys(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_ForceFeedbackScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_ForceFeedbackScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_bForceFeedbackEnabled(self:unreal.UIntPtr):Bool;
public static function set_bForceFeedbackEnabled(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableTouchOverEvents(self:unreal.UIntPtr):Bool;
public static function set_bEnableTouchOverEvents(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableMouseOverEvents(self:unreal.UIntPtr):Bool;
public static function set_bEnableMouseOverEvents(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableTouchEvents(self:unreal.UIntPtr):Bool;
public static function set_bEnableTouchEvents(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bEnableClickEvents(self:unreal.UIntPtr):Bool;
public static function set_bEnableClickEvents(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bShowMouseCursor(self:unreal.UIntPtr):Bool;
public static function set_bShowMouseCursor(self:unreal.UIntPtr, value:Bool):Void;
public static function get_InputRollScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_InputRollScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_InputPitchScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_InputPitchScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_InputYawScale(self:unreal.UIntPtr):cpp.Float32;
public static function set_InputYawScale(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_NetConnection(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_NetConnection(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_PendingSwapConnection(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PendingSwapConnection(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_NetPlayerIndex(self:unreal.UIntPtr):cpp.UInt8;
public static function set_NetPlayerIndex(self:unreal.UIntPtr, value:cpp.UInt8):Void;
public static function get_bPlayerIsWaiting(self:unreal.UIntPtr):Bool;
public static function set_bPlayerIsWaiting(self:unreal.UIntPtr, value:Bool):Void;
public static function get_ActiveForceFeedbackEffects(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ActiveForceFeedbackEffects(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PlayerInput(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PlayerInput(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_CheatClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_CheatClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_CheatManager(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_CheatManager(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ClientCap(self:unreal.UIntPtr):Int;
public static function set_ClientCap(self:unreal.UIntPtr, value:Int):Void;
public static function get_LastSpectatorSyncRotation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LastSpectatorSyncRotation(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LastSpectatorSyncLocation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_LastSpectatorSyncLocation(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_LastSpectatorStateSynchTime(self:unreal.UIntPtr):cpp.Float32;
public static function set_LastSpectatorStateSynchTime(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_HiddenPrimitiveComponents(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_HiddenPrimitiveComponents(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_HiddenActors(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_HiddenActors(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_SmoothTargetViewRotationSpeed(self:unreal.UIntPtr):cpp.Float32;
public static function set_SmoothTargetViewRotationSpeed(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_TargetViewRotation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_TargetViewRotation(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_bAutoManageActiveCameraTarget(self:unreal.UIntPtr):Bool;
public static function set_bAutoManageActiveCameraTarget(self:unreal.UIntPtr, value:Bool):Void;
public static function get_PlayerCameraManagerClass(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PlayerCameraManagerClass(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_PlayerCameraManager(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_PlayerCameraManager(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_MyHUD(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_MyHUD(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_ControllingDirTrackInst(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_ControllingDirTrackInst(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_AcknowledgedPawn(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_AcknowledgedPawn(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function get_Player(self:unreal.UIntPtr):unreal.UIntPtr;
public static function set_Player(self:unreal.UIntPtr, value:unreal.UIntPtr):Void;
public static function ServerSetSpectatorWaiting(self:unreal.UIntPtr, bWaiting:Bool):Void;
public static function ClientSetSpectatorWaiting(self:unreal.UIntPtr, bWaiting:Bool):Void;
public static function EnableCheats(self:unreal.UIntPtr):Void;
public static function FOV(self:unreal.UIntPtr, NewFOV:cpp.Float32):Void;
public static function RestartLevel(self:unreal.UIntPtr):Void;
public static function LocalTravel(self:unreal.UIntPtr, URL:unreal.VariantPtr):Void;
public static function ServerExecRPC(self:unreal.UIntPtr, Msg:unreal.VariantPtr):Void;
public static function ServerExec(self:unreal.UIntPtr, Msg:unreal.VariantPtr):Void;
public static function ClientReturnToMainMenu(self:unreal.UIntPtr, ReturnReason:unreal.VariantPtr):Void;
public static function ClientReturnToMainMenuWithTextReason(self:unreal.UIntPtr, ReturnReason:unreal.VariantPtr):Void;
public static function ClientRepObjRef(self:unreal.UIntPtr, Object:unreal.UIntPtr):Void;
public static function Pause(self:unreal.UIntPtr):Void;
public static function SetName(self:unreal.UIntPtr, S:unreal.VariantPtr):Void;
public static function SwitchLevel(self:unreal.UIntPtr, URL:unreal.VariantPtr):Void;
public static function GetHitResultUnderCursor(self:unreal.UIntPtr, TraceChannel:Int, bTraceComplex:Bool, HitResult:unreal.VariantPtr):Bool;
public static function GetHitResultUnderCursorByChannel(self:unreal.UIntPtr, TraceChannel:Int, bTraceComplex:Bool, HitResult:unreal.VariantPtr):Bool;
public static function GetHitResultUnderFinger(self:unreal.UIntPtr, FingerIndex:Int, TraceChannel:Int, bTraceComplex:Bool, HitResult:unreal.VariantPtr):Bool;
public static function GetHitResultUnderFingerByChannel(self:unreal.UIntPtr, FingerIndex:Int, TraceChannel:Int, bTraceComplex:Bool, HitResult:unreal.VariantPtr):Bool;
public static function DeprojectMousePositionToWorld(self:unreal.UIntPtr, WorldLocation:unreal.VariantPtr, WorldDirection:unreal.VariantPtr):Bool;
public static function DeprojectScreenPositionToWorld(self:unreal.UIntPtr, ScreenX:cpp.Float32, ScreenY:cpp.Float32, WorldLocation:unreal.VariantPtr, WorldDirection:unreal.VariantPtr):Bool;
public static function ProjectWorldLocationToScreen(self:unreal.UIntPtr, WorldLocation:unreal.VariantPtr, ScreenLocation:unreal.VariantPtr, bPlayerViewportRelative:Bool):Bool;
public static function SetMouseLocation(self:unreal.UIntPtr, X:Int, Y:Int):Void;
public static function StartFire(self:unreal.UIntPtr, FireModeNum:cpp.UInt8):Void;
public static function ClientEnableNetworkVoice(self:unreal.UIntPtr, bEnable:Bool):Void;
public static function ToggleSpeaking(self:unreal.UIntPtr, bInSpeaking:Bool):Void;
public static function ClientVoiceHandshakeComplete(self:unreal.UIntPtr):Void;
public static function ServerMutePlayer(self:unreal.UIntPtr, PlayerId:unreal.VariantPtr):Void;
public static function ServerUnmutePlayer(self:unreal.UIntPtr, PlayerId:unreal.VariantPtr):Void;
public static function ClientMutePlayer(self:unreal.UIntPtr, PlayerId:unreal.VariantPtr):Void;
public static function ClientUnmutePlayer(self:unreal.UIntPtr, PlayerId:unreal.VariantPtr):Void;
public static function ConsoleKey(self:unreal.UIntPtr, Key:unreal.VariantPtr):Void;
public static function SendToConsole(self:unreal.UIntPtr, Command:unreal.VariantPtr):Void;
public static function ClientAddTextureStreamingLoc(self:unreal.UIntPtr, InLoc:unreal.VariantPtr, Duration:cpp.Float32, bOverrideLocation:Bool):Void;
public static function ClientCancelPendingMapChange(self:unreal.UIntPtr):Void;
public static function ClientCapBandwidth(self:unreal.UIntPtr, Cap:Int):Void;
public static function ClientCommitMapChange(self:unreal.UIntPtr):Void;
public static function ClientFlushLevelStreaming(self:unreal.UIntPtr):Void;
public static function ClientForceGarbageCollection(self:unreal.UIntPtr):Void;
public static function ClientGameEnded(self:unreal.UIntPtr, EndGameFocus:unreal.UIntPtr, bIsWinner:Bool):Void;
public static function ClientGotoState(self:unreal.UIntPtr, NewState:unreal.VariantPtr):Void;
public static function ClientIgnoreLookInput(self:unreal.UIntPtr, bIgnore:Bool):Void;
public static function ClientIgnoreMoveInput(self:unreal.UIntPtr, bIgnore:Bool):Void;
public static function ClientMessage(self:unreal.UIntPtr, S:unreal.VariantPtr, Type:unreal.VariantPtr, MsgLifeTime:cpp.Float32):Void;
public static function ClientPlayCameraAnim(self:unreal.UIntPtr, AnimToPlay:unreal.UIntPtr, Scale:cpp.Float32, Rate:cpp.Float32, BlendInTime:cpp.Float32, BlendOutTime:cpp.Float32, bLoop:Bool, bRandomStartTime:Bool, Space:Int, CustomPlaySpace:unreal.VariantPtr):Void;
public static function ClientStartCameraShake(self:unreal.UIntPtr, Shake:unreal.UIntPtr, Scale:cpp.Float32, PlaySpace:Int, UserPlaySpaceRot:unreal.VariantPtr):Void;
public static function ClientStartCameraShakeFromSource(self:unreal.UIntPtr, Shake:unreal.UIntPtr, SourceComponent:unreal.UIntPtr):Void;
public static function ClientPlaySound(self:unreal.UIntPtr, Sound:unreal.UIntPtr, VolumeMultiplier:cpp.Float32, PitchMultiplier:cpp.Float32):Void;
public static function ClientPlaySoundAtLocation(self:unreal.UIntPtr, Sound:unreal.UIntPtr, Location:unreal.VariantPtr, VolumeMultiplier:cpp.Float32, PitchMultiplier:cpp.Float32):Void;
public static function ClientPrepareMapChange(self:unreal.UIntPtr, LevelName:unreal.VariantPtr, bFirst:Bool, bLast:Bool):Void;
public static function ClientPrestreamTextures(self:unreal.UIntPtr, ForcedActor:unreal.UIntPtr, ForceDuration:cpp.Float32, bEnableStreaming:Bool, CinematicTextureGroups:Int):Void;
public static function ClientReset(self:unreal.UIntPtr):Void;
public static function ClientRestart(self:unreal.UIntPtr, NewPawn:unreal.UIntPtr):Void;
public static function ClientSetBlockOnAsyncLoading(self:unreal.UIntPtr):Void;
public static function ClientSetCameraFade(self:unreal.UIntPtr, bEnableFading:Bool, FadeColor:unreal.VariantPtr, FadeAlpha:unreal.VariantPtr, FadeTime:cpp.Float32, bFadeAudio:Bool, bHoldWhenFinished:Bool):Void;
public static function ClientSetCameraMode(self:unreal.UIntPtr, NewCamMode:unreal.VariantPtr):Void;
public static function ClientSetCinematicMode(self:unreal.UIntPtr, bInCinematicMode:Bool, bAffectsMovement:Bool, bAffectsTurning:Bool, bAffectsHUD:Bool):Void;
public static function ClientSetForceMipLevelsToBeResident(self:unreal.UIntPtr, Material:unreal.UIntPtr, ForceDuration:cpp.Float32, CinematicTextureGroups:Int):Void;
public static function ClientSetHUD(self:unreal.UIntPtr, NewHUDClass:unreal.UIntPtr):Void;
public static function GetViewportSize(self:unreal.UIntPtr, SizeX:unreal.UIntPtr, SizeY:unreal.UIntPtr):Void;
public static function GetHUD(self:unreal.UIntPtr):unreal.UIntPtr;
public static function SetMouseCursorWidget(self:unreal.UIntPtr, Cursor:Int, CursorWidget:unreal.UIntPtr):Void;
public static function ClientSetViewTarget(self:unreal.UIntPtr, A:unreal.UIntPtr, TransitionParams:unreal.VariantPtr):Void;
public static function ClientSpawnCameraLensEffect(self:unreal.UIntPtr, LensEffectEmitterClass:unreal.UIntPtr):Void;
public static function ClientClearCameraLensEffects(self:unreal.UIntPtr):Void;
public static function ClientStopCameraAnim(self:unreal.UIntPtr, AnimToStop:unreal.UIntPtr):Void;
public static function ClientStopCameraShake(self:unreal.UIntPtr, Shake:unreal.UIntPtr, bImmediately:Bool):Void;
public static function ClientStopCameraShakesFromSource(self:unreal.UIntPtr, SourceComponent:unreal.UIntPtr, bImmediately:Bool):Void;
public static function K2_ClientPlayForceFeedback(self:unreal.UIntPtr, ForceFeedbackEffect:unreal.UIntPtr, Tag:unreal.VariantPtr, bLooping:Bool, bIgnoreTimeDilation:Bool, bPlayWhilePaused:Bool):Void;
public static function ClientStopForceFeedback(self:unreal.UIntPtr, ForceFeedbackEffect:unreal.UIntPtr, Tag:unreal.VariantPtr):Void;
public static function PlayHapticEffect(self:unreal.UIntPtr, HapticEffect:unreal.UIntPtr, Hand:Int, Scale:cpp.Float32, bLoop:Bool):Void;
public static function StopHapticEffect(self:unreal.UIntPtr, Hand:Int):Void;
public static function SetHapticsByValue(self:unreal.UIntPtr, Frequency:cpp.Float32, Amplitude:cpp.Float32, Hand:Int):Void;
public static function SetDisableHaptics(self:unreal.UIntPtr, bNewDisabled:Bool):Void;
public static function SetControllerLightColor(self:unreal.UIntPtr, Color:unreal.VariantPtr):Void;
public static function ResetControllerLightColor(self:unreal.UIntPtr):Void;
public static function ClientTravel(self:unreal.UIntPtr, URL:unreal.VariantPtr, TravelType:Int, bSeamless:Bool, MapPackageGuid:unreal.VariantPtr):Void;
public static function ClientTravelInternal(self:unreal.UIntPtr, URL:unreal.VariantPtr, TravelType:Int, bSeamless:Bool, MapPackageGuid:unreal.VariantPtr):Void;
public static function ClientUpdateLevelStreamingStatus(self:unreal.UIntPtr, PackageName:unreal.VariantPtr, bNewShouldBeLoaded:Bool, bNewShouldBeVisible:Bool, bNewShouldBlockOnLoad:Bool, LODIndex:Int):Void;
public static function ClientUpdateMultipleLevelsStreamingStatus(self:unreal.UIntPtr, LevelStatuses:unreal.VariantPtr):Void;
public static function ClientWasKicked(self:unreal.UIntPtr, KickReason:unreal.VariantPtr):Void;
public static function ClientStartOnlineSession(self:unreal.UIntPtr):Void;
public static function ClientEndOnlineSession(self:unreal.UIntPtr):Void;
public static function ClientRetryClientRestart(self:unreal.UIntPtr, NewPawn:unreal.UIntPtr):Void;
public static function ClientReceiveLocalizedMessage(self:unreal.UIntPtr, Message:unreal.UIntPtr, Switch:Int, RelatedPlayerState_1:unreal.UIntPtr, RelatedPlayerState_2:unreal.UIntPtr, OptionalObject:unreal.UIntPtr):Void;
public static function ServerAcknowledgePossession(self:unreal.UIntPtr, P:unreal.UIntPtr):Void;
public static function ServerCamera(self:unreal.UIntPtr, NewMode:unreal.VariantPtr):Void;
public static function ServerChangeName(self:unreal.UIntPtr, S:unreal.VariantPtr):Void;
public static function ServerNotifyLoadedWorld(self:unreal.UIntPtr, WorldPackageName:unreal.VariantPtr):Void;
public static function ServerPause(self:unreal.UIntPtr):Void;
public static function ServerRestartPlayer(self:unreal.UIntPtr):Void;
public static function ServerSetSpectatorLocation(self:unreal.UIntPtr, NewLoc:unreal.VariantPtr, NewRot:unreal.VariantPtr):Void;
public static function ServerCheckClientPossession(self:unreal.UIntPtr):Void;
public static function ServerCheckClientPossessionReliable(self:unreal.UIntPtr):Void;
public static function ServerShortTimeout(self:unreal.UIntPtr):Void;
public static function ServerUpdateCamera(self:unreal.UIntPtr, CamLoc:unreal.VariantPtr, CamPitchAndYaw:Int):Void;
public static function ServerUpdateLevelVisibility(self:unreal.UIntPtr, LevelVisibility:unreal.VariantPtr):Void;
public static function ServerUpdateMultipleLevelsVisibility(self:unreal.UIntPtr, LevelVisibilities:unreal.VariantPtr):Void;
public static function ServerVerifyViewTarget(self:unreal.UIntPtr):Void;
public static function ServerViewNextPlayer(self:unreal.UIntPtr):Void;
public static function ServerViewPrevPlayer(self:unreal.UIntPtr):Void;
public static function ServerViewSelf(self:unreal.UIntPtr, TransitionParams:unreal.VariantPtr):Void;
public static function ClientTeamMessage(self:unreal.UIntPtr, SenderPlayerState:unreal.UIntPtr, S:unreal.VariantPtr, Type:unreal.VariantPtr, MsgLifeTime:cpp.Float32):Void;
public static function ServerToggleAILogging(self:unreal.UIntPtr):Void;
public static function AddPitchInput(self:unreal.UIntPtr, Val:cpp.Float32):Void;
public static function AddYawInput(self:unreal.UIntPtr, Val:cpp.Float32):Void;
public static function AddRollInput(self:unreal.UIntPtr, Val:cpp.Float32):Void;
public static function IsInputKeyDown(self:unreal.UIntPtr, Key:unreal.VariantPtr):Bool;
public static function WasInputKeyJustPressed(self:unreal.UIntPtr, Key:unreal.VariantPtr):Bool;
public static function WasInputKeyJustReleased(self:unreal.UIntPtr, Key:unreal.VariantPtr):Bool;
public static function GetInputAnalogKeyState(self:unreal.UIntPtr, Key:unreal.VariantPtr):cpp.Float32;
public static function GetInputVectorKeyState(self:unreal.UIntPtr, Key:unreal.VariantPtr):unreal.VariantPtr;
public static function GetInputTouchState(self:unreal.UIntPtr, FingerIndex:Int, LocationX:cpp.Float32, LocationY:cpp.Float32, bIsCurrentlyPressed:Bool):Void;
public static function GetInputMotionState(self:unreal.UIntPtr, Tilt:unreal.VariantPtr, RotationRate:unreal.VariantPtr, Gravity:unreal.VariantPtr, Acceleration:unreal.VariantPtr):Void;
public static function GetMousePosition(self:unreal.UIntPtr, LocationX:unreal.UIntPtr, LocationY:unreal.UIntPtr):Bool;
public static function GetInputKeyTimeDown(self:unreal.UIntPtr, Key:unreal.VariantPtr):cpp.Float32;
public static function GetInputMouseDelta(self:unreal.UIntPtr, DeltaX:cpp.Float32, DeltaY:cpp.Float32):Void;
public static function GetInputAnalogStickState(self:unreal.UIntPtr, WhichStick:Int, StickX:cpp.Float32, StickY:cpp.Float32):Void;
public static function ActivateTouchInterface(self:unreal.UIntPtr, NewTouchInterface:unreal.UIntPtr):Void;
public static function SetVirtualJoystickVisibility(self:unreal.UIntPtr, bVisible:Bool):Void;
public static function Camera(self:unreal.UIntPtr, NewMode:unreal.VariantPtr):Void;
public static function SetViewTargetWithBlend(self:unreal.UIntPtr, NewViewTarget:unreal.UIntPtr, BlendTime:cpp.Float32, BlendFunc:Int, BlendExp:cpp.Float32, bLockOutgoing:Bool):Void;
public static function SetAudioListenerOverride(self:unreal.UIntPtr, AttachToComponent:unreal.UIntPtr, Location:unreal.VariantPtr, Rotation:unreal.VariantPtr):Void;
public static function ClearAudioListenerOverride(self:unreal.UIntPtr):Void;
public static function SetAudioListenerAttenuationOverride(self:unreal.UIntPtr, AttachToComponent:unreal.UIntPtr, AttenuationLocationOVerride:unreal.VariantPtr):Void;
public static function ClearAudioListenerAttenuationOverride(self:unreal.UIntPtr):Void;
public static function CanRestartPlayer(self:unreal.UIntPtr):Bool;
public static function SetCinematicMode(self:unreal.UIntPtr, bInCinematicMode:Bool, bHidePlayer:Bool, bAffectsHUD:Bool, bAffectsMovement:Bool, bAffectsTurning:Bool):Void;
public static function OnServerStartedVisualLogger(self:unreal.UIntPtr, bIsLogging:Bool):Void;
public static function GetSpectatorPawn(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GetFocalLocation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function get_RotationInput(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_RotationInput(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function InitInputSystem(self:unreal.UIntPtr):Void;
public static function InputKey(self:unreal.UIntPtr, Key:unreal.VariantPtr, EventType:Int, AmountDepressed:cpp.Float32, bGamepad:Bool):Bool;
public static function InputTouch(self:unreal.UIntPtr, Handle:cpp.UInt32, Type:Int, TouchLocation:unreal.VariantPtr, DeviceTimestamp:unreal.VariantPtr, TouchpadIndex:cpp.UInt32):Bool;
public static function InputAxis(self:unreal.UIntPtr, Key:unreal.VariantPtr, Delta:cpp.Float32, DeltaTime:cpp.Float32, NumSamples:Int, bGamepad:Bool):Bool;
public static function InputMotion(self:unreal.UIntPtr, Tilt:unreal.VariantPtr, RotationRate:unreal.VariantPtr, Gravity:unreal.VariantPtr, Acceleration:unreal.VariantPtr):Bool;
public static function GetSeamlessTravelActorList(self:unreal.UIntPtr, bToEntry:Bool, ActorList:unreal.VariantPtr):Void;
public static function PostSeamlessTravel(self:unreal.UIntPtr):Void;
public static function GetNextViewablePlayer(self:unreal.UIntPtr, dir:Int):unreal.UIntPtr;
public static function SetPause(self:unreal.UIntPtr, bPause:Bool):Bool;
public static function StartTalking(self:unreal.UIntPtr):Void;
public static function StopTalking(self:unreal.UIntPtr):Void;
public static function PawnLeavingGame(self:unreal.UIntPtr):Void;
public static function GetSpawnLocation(self:unreal.UIntPtr):unreal.VariantPtr;
public static function SetInputMode(self:unreal.UIntPtr, InData:unreal.VariantPtr):Void;
public static function BeginPlayingState(self:unreal.UIntPtr):Void;
public static function EndPlayingState(self:unreal.UIntPtr):Void;
public static function SetupInputComponent(self:unreal.UIntPtr):Void;
public static function SetViewTarget(self:unreal.UIntPtr, NewViewTarget:unreal.UIntPtr, TransitionParams:unreal.VariantPtr):Void;
public static function AutoManageActiveCameraTarget(self:unreal.UIntPtr, SuggestedTarget:unreal.UIntPtr):Void;
public static function HasClientLoadedCurrentWorld(self:unreal.UIntPtr):Bool;
public static function GetLocalPlayer(self:unreal.UIntPtr):unreal.UIntPtr;
public static function ConsoleCommand(self:unreal.UIntPtr, Command:unreal.VariantPtr, bWriteToLog:Bool):unreal.VariantPtr;
public static function AddCheats(self:unreal.UIntPtr, bForce:Bool):Void;
public static function ClientWasKicked_Implementation(self:unreal.UIntPtr, kickReason:unreal.VariantPtr):Void;
public static function ClientReturnToMainMenuWithTextReason_Implementation(self:unreal.UIntPtr, ReturnReason:unreal.VariantPtr):Void;
public static function FlushPressedKeys(self:unreal.UIntPtr):Void;
public static function PreClientTravel(self:unreal.UIntPtr, PendingURL:unreal.VariantPtr, TravelType:Int, bIsSeamlessTravel:Bool):Void;
public static function CleanupPlayerState(self:unreal.UIntPtr):Void;
public static function PushInputComponent(self:unreal.UIntPtr, Input:unreal.UIntPtr):Void;
public static function PopInputComponent(self:unreal.UIntPtr, Input:unreal.UIntPtr):Bool;
public static function SetPawn(self:unreal.UIntPtr, InPawn:unreal.UIntPtr):Void;
public static function GetPawnOrSpectator(self:unreal.UIntPtr):unreal.UIntPtr;
public static function GameplayMutePlayer(self:unreal.UIntPtr, PlayerNetId:unreal.VariantPtr):Void;
public static function GameplayUnmutePlayer(self:unreal.UIntPtr, PlayerNetId:unreal.VariantPtr):Void;
public static function IsPlayerMuted(self:unreal.UIntPtr, PlayerId:unreal.VariantPtr):Bool;
public static function UpdateRotation(self:unreal.UIntPtr, DeltaTime:cpp.Float32):Void;
public static function StaticClass():unreal.UIntPtr;
}