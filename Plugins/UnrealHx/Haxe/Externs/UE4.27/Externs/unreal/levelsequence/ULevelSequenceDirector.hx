/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.levelsequence;

@:umodule("LevelSequence")
@:glueCppIncludes("LevelSequenceDirector.h")
@:uextern @:uclass extern class ULevelSequenceDirector extends unreal.UObject {
  
  /**
    Native player interface index - stored by index so that it can be reinstanced correctly
  **/
  @:uproperty public var MovieScenePlayerIndex : unreal.Int32;
  
  /**
    The Sequence ID for the sequence this director is playing back within - has to be stored as an int32 so that it is reinstanced correctly
  **/
  @:uproperty public var SubSequenceID : unreal.Int32;
  
  /**
    Pointer to the player that's playing back this director's sequence. Only valid in game or in PIE/Simulate.
  **/
  @:uproperty public var Player : unreal.levelsequence.ULevelSequencePlayer;
  
  /**
    Called when this director is created
  **/
  @:ufunction(BlueprintImplementableEvent) public function OnCreated() : Void;
  
  /**
    Resolve the bindings inside this sub-sequence that relate to the specified ID
    @note: ObjectBinding should be constructed from the same sequence as this Sequence Director's owning Sequence (see the GetSequenceBinding node)
    
    @param ObjectBinding The ID for the object binding inside this sub-sequence or one of its children to resolve
  **/
  @:ufunction(BlueprintCallable) @:final public function GetBoundObjects(ObjectBinding : unreal.moviescene.FMovieSceneObjectBindingID) : unreal.TArray<unreal.UObject>;
  
  /**
    Resolve the first valid binding inside this sub-sequence that relates to the specified ID
    @note: ObjectBinding should be constructed from the same sequence as this Sequence Director's owning Sequence (see the GetSequenceBinding node)
    
    @param ObjectBinding The ID for the object binding inside this sub-sequence or one of its children to resolve
  **/
  @:ufunction(BlueprintCallable) @:final public function GetBoundObject(ObjectBinding : unreal.moviescene.FMovieSceneObjectBindingID) : unreal.UObject;
  
  /**
    Resolve the actor bindings inside this sub-sequence that relate to the specified ID
    @note: ObjectBinding should be constructed from the same sequence as this Sequence Director's owning Sequence (see the GetSequenceBinding node)
    
    @param ObjectBinding The ID for the object binding inside this sub-sequence or one of its children to resolve
  **/
  @:ufunction(BlueprintCallable) @:final public function GetBoundActors(ObjectBinding : unreal.moviescene.FMovieSceneObjectBindingID) : unreal.TArray<unreal.AActor>;
  
  /**
    Resolve the first valid Actor binding inside this sub-sequence that relates to the specified ID
    @note: ObjectBinding should be constructed from the same sequence as this Sequence Director's owning Sequence (see the GetSequenceBinding node)
    
    @param ObjectBinding The ID for the object binding inside this sub-sequence or one of its children to resolve
  **/
  @:ufunction(BlueprintCallable) @:final public function GetBoundActor(ObjectBinding : unreal.moviescene.FMovieSceneObjectBindingID) : unreal.AActor;
  
  /**
    * Get the current sequence that this director is playing back within
  **/
  @:ufunction(BlueprintCallable) @:final public function GetSequence() : unreal.moviescene.UMovieSceneSequence;
  
}
