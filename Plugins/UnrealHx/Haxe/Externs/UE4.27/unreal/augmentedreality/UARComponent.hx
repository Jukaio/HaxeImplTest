/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.augmentedreality;

/**
  ARComponent handles replication and visualization update for AR tracked geometries
  ARComponent is created in either multiplayer or local only environment
  
  To customize the visualization logic, override 'UpdateVisualization' in Blueprint
  or 'UpdateVisualization_Implementation' in C++
  
  To customize the replication logic, disable 'bUseDefaultReplication' and implement
  your own replication logic when the ARComponent is updated (see how 'Update' is implemented in the sub classes)
  
  A MRMeshComponent will be created if mesh visualization is enabled (see UARSessionConfig::bGenerateMeshDataFromTrackedGeometry)
  It can be accessed via 'GetMRMesh' or 'UARTrackedGeometry::GetUnderlyingMesh'
**/
@:umodule("AugmentedReality")
@:glueCppIncludes("ARComponent.h")
@:uextern @:uclass extern class UARComponent extends unreal.USceneComponent {
  
  /**
    The tracked geometry used for updating this component, only set on "local" client
  **/
  @:uproperty private var MyTrackedGeometry : unreal.augmentedreality.UARTrackedGeometry;
  @:uproperty private var MRMeshComponent : unreal.mrmesh.UMRMeshComponent;
  
  /**
    The default wireframe material to be used for the generated mesh component.
    If not set, the DefaultMeshMaterial from ARSessionConfig will be used.
  **/
  @:uproperty private var DefaultWireframeMeshMaterial : unreal.UMaterialInterface;
  
  /**
    The default material to be used for the generated mesh component.
    If not set, the DefaultMeshMaterial from ARSessionConfig will be used.
  **/
  @:uproperty private var DefaultMeshMaterial : unreal.UMaterialInterface;
  @:uproperty public var NativeID : unreal.FGuid;
  @:ufunction(BlueprintCallable) @:final public function SetNativeID(NativeID : unreal.FGuid) : Void;
  @:ufunction(BlueprintCallable) @:final public function GetMRMesh() : unreal.mrmesh.UMRMeshComponent;
  
  /**
    Event when native representation is removed, called on server and clients.
  **/
  @:ufunction(BlueprintImplementableEvent) public function ReceiveRemove() : Void;
  @:ufunction(BlueprintNativeEvent, BlueprintCallable) public function UpdateVisualization() : Void;
  @:ufunction private function OnRep_Payload() : Void;
  
}
