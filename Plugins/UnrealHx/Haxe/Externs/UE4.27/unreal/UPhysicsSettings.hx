/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  Default physics settings.
**/
@:glueCppIncludes("PhysicsEngine/PhysicsSettings.h")
@:uextern @:uclass extern class UPhysicsSettings extends unreal.physicscore.UPhysicsSettingsCore {
  
  /**
    Chaos physics engine settings
  **/
  @:uproperty public var ChaosSettings : unreal.FChaosPhysicsSettings;
  
  /**
    Minimum velocity delta required on a collinding object for Chaos to send a hit event
  **/
  @:uproperty public var MinDeltaVelocityForHitEvents : unreal.Float32;
  
  /**
    If we want to Enable MPB or not globally. This is then overridden by project settings if not enabled. *
  **/
  @:uproperty public var DefaultBroadphaseSettings : unreal.FBroadphaseSettings;
  
  /**
    PhysicalMaterial Surface Types
  **/
  @:uproperty public var PhysicalSurfaces : unreal.TArray<unreal.FPhysicalSurfaceName>;
  
  /**
    The number of frames it takes to rebuild the PhysX scene query AABB tree. The bigger the number, the smaller fetchResults takes per frame, but the more the tree deteriorates until a new tree is built
  **/
  @:uproperty public var PhysXTreeRebuildRate : unreal.Int32;
  
  /**
    Physics delta time initial average.
  **/
  @:uproperty public var InitialAverageFrameRate : unreal.Float32;
  
  /**
    Physics delta time smoothing factor for sync scene.
  **/
  @:uproperty public var SyncSceneSmoothingFactor : unreal.Float32;
  
  /**
    Max number of substeps for physics simulation.
  **/
  @:uproperty public var MaxSubsteps : unreal.Int32;
  
  /**
    Max delta time (in seconds) for an individual simulation substep.
  **/
  @:uproperty public var MaxSubstepDeltaTime : unreal.Float32;
  
  /**
    Whether to substep the async physics simulation. This feature is still experimental. Certain functionality might not work correctly
  **/
  @:uproperty public var bSubsteppingAsync : Bool;
  
  /**
    Whether to substep the physics simulation. This feature is still experimental. Certain functionality might not work correctly
  **/
  @:uproperty public var bSubstepping : Bool;
  
  /**
    Max Physics Delta Time to be clamped.
  **/
  @:uproperty public var MaxPhysicsDeltaTime : unreal.Float32;
  
  /**
    Whether to simulate anim physics nodes in the tick where they're reset.
  **/
  @:uproperty public var bSimulateAnimPhysicsAfterReset : Bool;
  
  /**
    Min Delta Time below which anim dynamics and rigidbody nodes will not simulate.
  **/
  @:uproperty public var AnimPhysicsMinDeltaTime : unreal.Float32;
  
  /**
    If set to true, the scene will use enhanced determinism at the cost of a bit more resources. See eENABLE_ENHANCED_DETERMINISM to learn about the specifics
  **/
  @:uproperty public var bEnableEnhancedDeterminism : Bool;
  
  /**
    If true CCD will be ignored. This is an optimization when CCD is never used which removes the need for physx to check it internally.
  **/
  @:uproperty public var bDisableCCD : Bool;
  
  /**
    Whether to disable generating KK pairs, enabling this speeds up contact generation, however it is required when using APEX destruction.
  **/
  @:uproperty public var bDisableKinematicKinematicPairs : Bool;
  
  /**
    Whether to disable generating KS pairs, enabling this makes switching between dynamic and static slower for actors - but speeds up contact generation by early rejecting these pairs
  **/
  @:uproperty public var bDisableKinematicStaticPairs : Bool;
  
  /**
    If true, physx will not update unreal with any bodies that have moved during the simulation. This should only be used if you have no physx simulation or you are manually updating the unreal data via polling physx.
  **/
  @:uproperty public var bDisableActiveActors : Bool;
  
  /**
    If true, store extra information to allow FindCollisionUV to derive UV info from a line trace hit result, using the FindCollisionUV utility
  **/
  @:uproperty public var bSupportUVFromHitResults : Bool;
  
  /**
    If true, the internal physx face to UE face mapping will not be generated. This is a memory optimization available if you do not rely on face indices returned by scene queries.
  **/
  @:uproperty public var bSuppressFaceRemapTable : Bool;
  
  /**
    Useful for constraining all objects in the world, for example if you are making a 2D game using 3D environments.
  **/
  @:uproperty public var DefaultDegreesOfFreedom : unreal.ESettingsDOF;
  @:deprecated @:uproperty public var LockedAxis_DEPRECATED : unreal.ESettingsLockedAxis;
  
  /**
    Error correction data for replicating simulated physics (rigid bodies)
  **/
  @:uproperty public var PhysicErrorCorrection : unreal.FRigidBodyErrorCorrection;
  
}
