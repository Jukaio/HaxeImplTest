// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/audiomixer/uquartzsubsystem.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UQuartzSubsystem_Glue {
public static function IsQuartzEnabled(self:unreal.UIntPtr):Bool;
public static function CreateNewClock(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr, ClockName:unreal.VariantPtr, InSettings:unreal.VariantPtr, bOverrideSettingsIfClockExists:Bool, bUseAudioEngineClockManager:Bool):unreal.UIntPtr;
public static function DeleteClockByName(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr, ClockName:unreal.VariantPtr):Void;
public static function GetHandleForClock(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr, ClockName:unreal.VariantPtr):unreal.UIntPtr;
public static function DoesClockExist(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr, ClockName:unreal.VariantPtr):Bool;
public static function IsClockRunning(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr, ClockName:unreal.VariantPtr):Bool;
public static function GetDurationOfQuantizationTypeInSeconds(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr, ClockName:unreal.VariantPtr, QuantizationType:unreal.UIntPtr, Multiplier:cpp.Float32):cpp.Float32;
public static function GetCurrentClockTimestamp(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr, InClockName:unreal.VariantPtr):unreal.VariantPtr;
public static function GetEstimatedClockRunTime(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr, InClockName:unreal.VariantPtr):cpp.Float32;
public static function GetGameThreadToAudioRenderThreadAverageLatency(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr):cpp.Float32;
public static function GetGameThreadToAudioRenderThreadMinLatency(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr):cpp.Float32;
public static function GetGameThreadToAudioRenderThreadMaxLatency(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr):cpp.Float32;
public static function GetAudioRenderThreadToGameThreadAverageLatency(self:unreal.UIntPtr):cpp.Float32;
public static function GetAudioRenderThreadToGameThreadMinLatency(self:unreal.UIntPtr):cpp.Float32;
public static function GetAudioRenderThreadToGameThreadMaxLatency(self:unreal.UIntPtr):cpp.Float32;
public static function GetRoundTripAverageLatency(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr):cpp.Float32;
public static function GetRoundTripMinLatency(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr):cpp.Float32;
public static function GetRoundTripMaxLatency(self:unreal.UIntPtr, WorldContextObject:unreal.UIntPtr):cpp.Float32;
public static function StaticClass():unreal.UIntPtr;
}