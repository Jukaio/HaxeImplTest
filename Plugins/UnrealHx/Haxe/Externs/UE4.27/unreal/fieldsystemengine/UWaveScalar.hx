/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.fieldsystemengine;

/**
  Set a temporal wave scalar value according to the sample distance from the field position.
**/
@:umodule("FieldSystemEngine")
@:glueCppIncludes("Field/FieldSystemObjects.h")
@:uextern @:uclass extern class UWaveScalar extends unreal.fieldsystemengine.UFieldNodeFloat {
  
  /**
    Type of falloff function used if the falloff function is picked
  **/
  @:uproperty public var Falloff : unreal.chaos.EFieldFalloffType;
  
  /**
    Wave function used for the field
  **/
  @:uproperty public var Function : unreal.chaos.EWaveFunctionType;
  
  /**
    Time over which the wave will travel from one peak to another one. The wave velocity is proportional to wavelength/period
  **/
  @:uproperty public var Period : unreal.Float32;
  
  /**
    Distance between 2 wave peaks
  **/
  @:uproperty public var Wavelength : unreal.Float32;
  
  /**
    Center position of the wave field
  **/
  @:uproperty public var Position : unreal.FVector;
  
  /**
    Magnitude of the wave function
  **/
  @:uproperty public var Magnitude : unreal.Float32;
  
  /**
    Set a temporal wave scalar value according to the sample distance from the field position.
    @param    Magnitude Magnitude of the wave function
    @param    Position Center position of the wave field
    @param    Wavelength Distance between 2 wave peaks
    @param    Period Time over which the wave will travel from one peak to another one. The wave velocity is proportional to wavelength/period
    @param    Function Wave function used for the field
    @param    Falloff Type of falloff function used if the falloff function is picked
  **/
  @:ufunction(BlueprintCallable) @:final public function SetWaveScalar(@:bpopt("1.0") Magnitude : unreal.Float32, Position : unreal.FVector, @:bpopt("1000") Wavelength : unreal.Float32, @:bpopt("1") Period : unreal.Float32, Time : unreal.Float32, Function : unreal.chaos.EWaveFunctionType, Falloff : unreal.chaos.EFieldFalloffType) : unreal.fieldsystemengine.UWaveScalar;
  
}
