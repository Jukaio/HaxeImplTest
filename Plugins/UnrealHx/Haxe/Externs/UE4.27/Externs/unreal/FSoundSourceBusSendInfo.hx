/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

@:glueCppIncludes("Classes/Sound/SoundSourceBusSend.h")
@:uextern @:ustruct extern class FSoundSourceBusSendInfo {
  
  /**
    The custom curve to use for distance-based bus send level.
  **/
  @:uproperty public var CustomSendLevelCurve : unreal.FRuntimeFloatCurve;
  
  /**
    The distance at which the max send level is sent to the bus
  **/
  @:uproperty public var MaxSendDistance : unreal.Float32;
  
  /**
    The distance at which the min send Level is sent to the bus
  **/
  @:uproperty public var MinSendDistance : unreal.Float32;
  
  /**
    The amount to send to the bus when sound is located at a distance equal to value specified in the max send distance.
  **/
  @:uproperty public var MaxSendLevel : unreal.Float32;
  
  /**
    The amount to send to the bus when sound is located at a distance equal to value specified in the min send distance.
  **/
  @:uproperty public var MinSendLevel : unreal.Float32;
  
  /**
    The amount of audio to send to the bus.
  **/
  @:uproperty public var SendLevel : unreal.Float32;
  
  /**
    An audio bus to send the audio to. Audio buses can be used to route audio to DSP effects or other purposes. E.g. side-chaining, analysis, etc. Audio buses are not audible unless hooked up to a source bus.
  **/
  @:uproperty public var AudioBus : unreal.UAudioBus;
  
  /**
    A source Bus to send the audio to. Source buses sonify (make audible) the audio sent to it and are themselves sounds which take up a voice slot in the audio engine.
  **/
  @:uproperty public var SoundSourceBus : unreal.USoundSourceBus;
  
  /**
    Manual: Use Send Level only
    Linear: Interpolate between Min and Max Send Levels based on listener distance (between Distance Min and Distance Max)
    Custom Curve: Use the float curve to map Send Level to distance (0.0-1.0 on curve maps to Distance Min - Distance Max)
  **/
  @:uproperty public var SourceBusSendLevelControlMethod : unreal.ESourceBusSendLevelControlMethod;
  
}
