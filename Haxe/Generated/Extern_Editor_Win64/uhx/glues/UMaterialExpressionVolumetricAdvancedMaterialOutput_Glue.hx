// Ver:1
// GeneratedBy:c:\users\jukai\documents\unreal projects\haxetest\plugins\unrealhx/haxe/externs/ue4.27/unreal/umaterialexpressionvolumetricadvancedmaterialoutput.hx
/*******************************************************
 * 
 * WARNING! This file was autogenerated by: 
 *  _    _                      _   _ 
 * | |  | |                    | | | |
 * | |  | |_ __  _ __ ___  __ _| | | |__ __  __
 * | |  | | '_ \| '__/ _ \/ _` | | | '_ \ \/ /
 * | |__| | | | | | |  __/ (_| | |_| | | |>  < 
 *  \____/|_| |_|_|  \___|\__,_|_(_)_| |_/_/\_\
 *******************************************************/


package uhx.glues;
@:unrealGlue extern class UMaterialExpressionVolumetricAdvancedMaterialOutput_Glue {
public static function get_bRayMarchVolumeShadow(self:unreal.UIntPtr):Bool;
public static function set_bRayMarchVolumeShadow(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bGrayScaleMaterial(self:unreal.UIntPtr):Bool;
public static function set_bGrayScaleMaterial(self:unreal.UIntPtr, value:Bool):Void;
public static function get_bGroundContribution(self:unreal.UIntPtr):Bool;
public static function set_bGroundContribution(self:unreal.UIntPtr, value:Bool):Void;
public static function get_ConstMultiScatteringEccentricity(self:unreal.UIntPtr):cpp.Float32;
public static function set_ConstMultiScatteringEccentricity(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ConstMultiScatteringOcclusion(self:unreal.UIntPtr):cpp.Float32;
public static function set_ConstMultiScatteringOcclusion(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ConstMultiScatteringContribution(self:unreal.UIntPtr):cpp.Float32;
public static function set_ConstMultiScatteringContribution(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_MultiScatteringApproximationOctaveCount(self:unreal.UIntPtr):cpp.UInt32;
public static function set_MultiScatteringApproximationOctaveCount(self:unreal.UIntPtr, value:cpp.UInt32):Void;
public static function get_PerSamplePhaseEvaluation(self:unreal.UIntPtr):Bool;
public static function set_PerSamplePhaseEvaluation(self:unreal.UIntPtr, value:Bool):Void;
public static function get_ConstPhaseBlend(self:unreal.UIntPtr):cpp.Float32;
public static function set_ConstPhaseBlend(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ConstPhaseG2(self:unreal.UIntPtr):cpp.Float32;
public static function set_ConstPhaseG2(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ConstPhaseG(self:unreal.UIntPtr):cpp.Float32;
public static function set_ConstPhaseG(self:unreal.UIntPtr, value:cpp.Float32):Void;
public static function get_ConservativeDensity(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_ConservativeDensity(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MultiScatteringEccentricity(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_MultiScatteringEccentricity(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MultiScatteringOcclusion(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_MultiScatteringOcclusion(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_MultiScatteringContribution(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_MultiScatteringContribution(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PhaseBlend(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PhaseBlend(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PhaseG2(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PhaseG2(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function get_PhaseG(self:unreal.UIntPtr):unreal.VariantPtr;
public static function set_PhaseG(self:unreal.UIntPtr, value:unreal.VariantPtr):Void;
public static function StaticClass():unreal.UIntPtr;
}