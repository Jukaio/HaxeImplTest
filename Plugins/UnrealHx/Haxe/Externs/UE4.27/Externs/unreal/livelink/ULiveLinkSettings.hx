/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.livelink;

/**
  Settings for LiveLink.
**/
@:umodule("LiveLink")
@:glueCppIncludes("LiveLinkSettings.h")
@:uextern @:uclass extern class ULiveLinkSettings extends unreal.UObject {
  
  /**
    Font size of Subject names shown in LiveLink Debug View.
  **/
  @:uproperty public var TextSizeSubject : unreal.UInt8;
  
  /**
    Font size of Source names shown in LiveLink Debug View.
  **/
  @:uproperty public var TextSizeSource : unreal.UInt8;
  
  /**
    Color for Subjects that have not received data from their Source for TimeWithoutFrameToBeConsiderAsInvalid.
  **/
  @:uproperty public var InvalidColor : unreal.FLinearColor;
  
  /**
    Color for active Subjects receiving data from their Source.
  **/
  @:uproperty public var ValidColor : unreal.FLinearColor;
  
  /**
    A source may still exist but does not send frames for a subject.
    Time before considering the subject as "invalid".
    The subject still exists and can still be evaluated.
    An invalid subject is shown as yellow in the LiveLink UI.
  **/
  @:uproperty public var TimeWithoutFrameToBeConsiderAsInvalid : unreal.Float64;
  
  /**
    Subjects will be removed when their source has been unresponsive for this long.
  **/
  @:uproperty public var MessageBusTimeBeforeRemovingInactiveSource : unreal.Float64;
  
  /**
    How long we should wait before a provider become unresponsive.
  **/
  @:uproperty public var MessageBusHeartbeatTimeout : unreal.Float64;
  
  /**
    The refresh frequency of the heartbeat when a provider didn't send us an updated.
  **/
  @:uproperty public var MessageBusHeartbeatFrequency : unreal.Float64;
  
  /**
    The refresh frequency of the list of message bus provider (when discovery is requested).
  **/
  @:uproperty public var MessageBusPingRequestFrequency : unreal.Float64;
  
  /**
    The default evaluation mode a source connected via the message bus should start with.
  **/
  @:uproperty public var DefaultMessageBusSourceMode : unreal.livelinkinterface.ELiveLinkSourceMode;
  
  /**
    Continuous clock offset correction step
  **/
  @:uproperty public var ClockOffsetCorrectionStep : unreal.Float32;
  
  /**
    The default location in which to save take presets
  **/
  @:uproperty public var PresetSaveDir : unreal.FDirectoryPath;
  
  /**
    The interpolation class to use for new Subjects if no specific settings we set for the Subject's role.
  **/
  @:uproperty public var FrameInterpolationProcessor : unreal.TSubclassOf<unreal.livelinkinterface.ULiveLinkFrameInterpolationProcessor>;
  @:uproperty private var DefaultRoleSettings : unreal.TArray<unreal.livelink.FLiveLinkRoleProjectSetting>;
  
}
